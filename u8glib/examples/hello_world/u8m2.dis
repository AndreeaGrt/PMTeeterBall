
u8m2.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
       0:	27 c2       	rjmp	.+1102   	; 0x450 <__ctors_end>
       2:	00 00       	nop
       4:	41 c2       	rjmp	.+1154   	; 0x488 <__bad_interrupt>
       6:	00 00       	nop
       8:	3f c2       	rjmp	.+1150   	; 0x488 <__bad_interrupt>
       a:	00 00       	nop
       c:	3d c2       	rjmp	.+1146   	; 0x488 <__bad_interrupt>
       e:	00 00       	nop
      10:	3b c2       	rjmp	.+1142   	; 0x488 <__bad_interrupt>
      12:	00 00       	nop
      14:	39 c2       	rjmp	.+1138   	; 0x488 <__bad_interrupt>
      16:	00 00       	nop
      18:	37 c2       	rjmp	.+1134   	; 0x488 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	35 c2       	rjmp	.+1130   	; 0x488 <__bad_interrupt>
      1e:	00 00       	nop
      20:	33 c2       	rjmp	.+1126   	; 0x488 <__bad_interrupt>
      22:	00 00       	nop
      24:	31 c2       	rjmp	.+1122   	; 0x488 <__bad_interrupt>
      26:	00 00       	nop
      28:	2f c2       	rjmp	.+1118   	; 0x488 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	2d c2       	rjmp	.+1114   	; 0x488 <__bad_interrupt>
      2e:	00 00       	nop
      30:	2b c2       	rjmp	.+1110   	; 0x488 <__bad_interrupt>
      32:	00 00       	nop
      34:	29 c2       	rjmp	.+1106   	; 0x488 <__bad_interrupt>
      36:	00 00       	nop
      38:	27 c2       	rjmp	.+1102   	; 0x488 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	25 c2       	rjmp	.+1098   	; 0x488 <__bad_interrupt>
      3e:	00 00       	nop
      40:	23 c2       	rjmp	.+1094   	; 0x488 <__bad_interrupt>
      42:	00 00       	nop
      44:	21 c2       	rjmp	.+1090   	; 0x488 <__bad_interrupt>
      46:	00 00       	nop
      48:	1f c2       	rjmp	.+1086   	; 0x488 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	1d c2       	rjmp	.+1082   	; 0x488 <__bad_interrupt>
      4e:	00 00       	nop
      50:	1b c2       	rjmp	.+1078   	; 0x488 <__bad_interrupt>
      52:	00 00       	nop
      54:	19 c2       	rjmp	.+1074   	; 0x488 <__bad_interrupt>
      56:	00 00       	nop
      58:	17 c2       	rjmp	.+1070   	; 0x488 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	15 c2       	rjmp	.+1066   	; 0x488 <__bad_interrupt>
      5e:	00 00       	nop
      60:	13 c2       	rjmp	.+1062   	; 0x488 <__bad_interrupt>
      62:	00 00       	nop
      64:	11 c2       	rjmp	.+1058   	; 0x488 <__bad_interrupt>
      66:	00 00       	nop
      68:	0f c2       	rjmp	.+1054   	; 0x488 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	0d c2       	rjmp	.+1050   	; 0x488 <__bad_interrupt>
      6e:	00 00       	nop
      70:	0b c2       	rjmp	.+1046   	; 0x488 <__bad_interrupt>
      72:	00 00       	nop
      74:	09 c2       	rjmp	.+1042   	; 0x488 <__bad_interrupt>
      76:	00 00       	nop
      78:	07 c2       	rjmp	.+1038   	; 0x488 <__bad_interrupt>
	...

0000007c <__trampolines_end>:
      7c:	00 0f       	add	r16, r16
      7e:	f0 00       	.word	0x00f0	; ????
      80:	00 3f       	cpi	r16, 0xF0	; 240
      82:	fc 00       	.word	0x00fc	; ????
      84:	00 ff       	sbrs	r16, 0
      86:	0f 00       	.word	0x000f	; ????
      88:	00 f8       	bld	r0, 0
      8a:	07 80       	ldd	r0, Z+7	; 0x07
      8c:	07 c0       	rjmp	.+14     	; 0x9c <__trampolines_end+0x20>
      8e:	3f e0       	ldi	r19, 0x0F	; 15
      90:	0f 80       	ldd	r0, Y+7	; 0x07
      92:	ff f0       	brie	.+62     	; 0xd2 <__trampolines_end+0x56>
      94:	0f 03       	fmul	r16, r23
      96:	ff f0       	brie	.+62     	; 0xd6 <__trampolines_end+0x5a>
      98:	1e 07       	cpc	r17, r30
      9a:	ff f8       	.word	0xf8ff	; ????
      9c:	3c 1f       	adc	r19, r28
      9e:	ff fc       	.word	0xfcff	; ????
      a0:	38 3f       	cpi	r19, 0xF8	; 248
      a2:	ff fc       	.word	0xfcff	; ????
      a4:	78 3f       	cpi	r23, 0xF8	; 248
      a6:	ff fe       	.word	0xfeff	; ????
      a8:	70 7f       	andi	r23, 0xF0	; 240
      aa:	ff fe       	.word	0xfeff	; ????
      ac:	61 ff       	sbrs	r22, 1
      ae:	ff fe       	.word	0xfeff	; ????
      b0:	e1 ff       	sbrs	r30, 1
      b2:	ff ff       	.word	0xffff	; ????
      b4:	c7 ff       	sbrs	r28, 7
      b6:	ff ff       	.word	0xffff	; ????
      b8:	cf ff       	.word	0xffcf	; ????
      ba:	ff ff       	.word	0xffff	; ????
      bc:	ff ff       	.word	0xffff	; ????
      be:	ff ff       	.word	0xffff	; ????
      c0:	ff ff       	.word	0xffff	; ????
      c2:	ff ff       	.word	0xffff	; ????
      c4:	ff ff       	.word	0xffff	; ????
      c6:	ff ff       	.word	0xffff	; ????
      c8:	7f ff       	.word	0xff7f	; ????
      ca:	ff fe       	.word	0xfeff	; ????
      cc:	7f ff       	.word	0xff7f	; ????
      ce:	ff fe       	.word	0xfeff	; ????
      d0:	7f ff       	.word	0xff7f	; ????
      d2:	ff fe       	.word	0xfeff	; ????
      d4:	3f ff       	.word	0xff3f	; ????
      d6:	ff fc       	.word	0xfcff	; ????
      d8:	3f ff       	.word	0xff3f	; ????
      da:	ff fc       	.word	0xfcff	; ????
      dc:	1f ff       	.word	0xff1f	; ????
      de:	ff f8       	.word	0xf8ff	; ????
      e0:	0f ff       	.word	0xff0f	; ????
      e2:	ff f0       	brie	.+62     	; 0x122 <u8g_dev_st7920_128x64_init_seq+0xe>
      e4:	0f ff       	.word	0xff0f	; ????
      e6:	ff f0       	brie	.+62     	; 0x126 <u8g_dev_st7920_128x64_init_seq+0x12>
      e8:	07 ff       	sbrs	r16, 7
      ea:	ff e0       	ldi	r31, 0x0F	; 15
      ec:	01 ff       	sbrs	r16, 1
      ee:	ff 00       	.word	0x00ff	; ????
      f0:	00 ff       	sbrs	r16, 0
      f2:	ff 00       	.word	0x00ff	; ????
      f4:	00 3f       	cpi	r16, 0xF0	; 240
      f6:	fc 00       	.word	0x00fc	; ????
      f8:	00 03       	mulsu	r16, r16
      fa:	e0 00       	.word	0x00e0	; ????

000000fc <u8g_avr_ddr_P>:
      fc:	00 00 24 00 27 00 2a 00                             ..$.'.*.

00000104 <u8g_avr_port_P>:
     104:	00 00 25 00 28 00 2b 00                             ..%.(.+.

0000010c <u8g_avr_pin_P>:
     10c:	00 00 23 00 26 00 29 00                             ..#.&.).

00000114 <u8g_dev_st7920_128x64_init_seq>:
     114:	ff d0 ff e0 ff cf ff 64 ff d1 ff 32 38 0c 06 02     .......d...28...
     124:	01 ff 64 ff d0 ff fe                                ..d....

0000012b <u8g_font_5x8r>:
     12b:	01 05 08 00 ff 06 01 21 02 35 20 7f ff 07 ff 06     .......!.5 .....
     13b:	ff 09 00 50 22 16 56 80 80 80 80 00 80 15 33 53     ...P".V.......3S
     14b:	a0 a0 a0 02 57 57 50 50 f8 50 f8 50 50 02 57 57     ....WWPP.P.PP.WW
     15b:	20 70 a0 70 28 70 20 13 35 55 80 a0 40 a0 20 02      p.p(p .5U..@. .
     16b:	47 57 40 a0 a0 40 a0 a0 50 25 13 53 80 80 80 12     GW@..@..P%.S....
     17b:	26 56 40 80 80 80 80 40 12 26 56 80 40 40 40 40     &V@....@.&V.@@@@
     18b:	80 02 45 55 90 60 f0 60 90 02 55 55 20 20 f8 20     ..EU.`.`..UU  . 
     19b:	20 11 33 53 60 40 80 04 41 51 f0 11 33 53 40 e0      .3S`@..AQ..3S@.
     1ab:	40 02 46 56 10 10 20 40 80 80 12 36 56 40 a0 a0     @.FV.. @...6V@..
     1bb:	a0 a0 40 12 36 56 40 c0 40 40 40 e0 02 46 56 60     ..@.6V@.@@@..FV`
     1cb:	90 10 60 80 f0 02 46 56 f0 20 60 10 90 60 02 46     ..`...FV. `..`.F
     1db:	56 20 60 a0 f0 20 20 02 46 56 f0 80 e0 10 90 60     V `..  .FV.....`
     1eb:	02 46 56 60 80 e0 90 90 60 02 46 56 f0 10 20 20     .FV`....`.FV..  
     1fb:	40 40 02 46 56 60 90 60 90 90 60 02 46 56 60 90     @@.FV`.`..`.FV`.
     20b:	90 70 10 60 12 25 55 c0 c0 00 c0 c0 11 36 56 60     .p.`.%U......6V`
     21b:	60 00 60 40 80 12 36 56 20 40 80 80 40 20 03 43     `.`@..6V @..@ .C
     22b:	53 f0 00 f0 12 36 56 80 40 20 20 40 80 12 36 56     S....6V.@  @..6V
     23b:	40 a0 20 40 00 40 01 58 58 30 48 98 a8 a8 90 40     @. @.@.XX0H....@
     24b:	30 02 46 56 60 90 90 f0 90 90 02 46 56 e0 90 e0     0.FV`......FV...
     25b:	90 90 e0 02 46 56 60 90 80 80 90 60 02 46 56 e0     ....FV`....`.FV.
     26b:	90 90 90 90 e0 02 46 56 f0 80 e0 80 80 f0 02 46     ......FV.......F
     27b:	56 f0 80 e0 80 80 80 02 46 56 60 90 80 b0 90 60     V.......FV`....`
     28b:	02 46 56 90 90 f0 90 90 90 12 36 56 e0 40 40 40     .FV.......6V.@@@
     29b:	40 e0 02 46 56 70 20 20 20 a0 40 02 46 56 90 a0     @..FVp   .@.FV..
     2ab:	c0 a0 a0 90 02 46 56 80 80 80 80 80 f0 02 46 56     .....FV.......FV
     2bb:	90 f0 f0 90 90 90 02 46 56 90 d0 f0 b0 b0 90 02     .......FV.......
     2cb:	46 56 60 90 90 90 90 60 02 46 56 e0 90 90 e0 80     FV`....`.FV.....
     2db:	80 01 47 57 60 90 90 d0 b0 60 10 02 46 56 e0 90     ..GW`....`..FV..
     2eb:	90 e0 90 90 02 46 56 60 90 40 20 90 60 12 36 56     .....FV`.@ .`.6V
     2fb:	e0 40 40 40 40 40 02 46 56 90 90 90 90 90 60 02     .@@@@@.FV.....`.
     30b:	46 56 90 90 90 90 60 60 02 46 56 90 90 90 f0 f0     FV....``.FV.....
     31b:	90 02 46 56 90 90 60 60 90 90 02 56 56 88 88 50     ..FV..``...VV..P
     32b:	20 20 20 02 46 56 f0 10 20 40 80 f0 12 36 56 e0        .FV.. @...6V.
     33b:	80 80 80 80 e0 02 46 56 80 80 40 20 10 10 12 36     ......FV..@ ...6
     34b:	56 e0 20 20 20 20 e0 16 32 52 40 a0 01 41 51 f0     V.    ..2R@..AQ.
     35b:	16 22 52 80 40 02 44 54 70 90 90 70 02 46 56 80     ."R.@.DTp..p.FV.
     36b:	80 e0 90 90 e0 12 34 54 60 80 80 60 02 46 56 10     ......4T`..`.FV.
     37b:	10 70 90 90 70 02 44 54 60 b0 c0 60 02 46 56 20     .p..p.DT`..`.FV 
     38b:	50 40 e0 40 40 01 45 55 60 90 70 10 60 02 46 56     P@.@@.EU`.p.`.FV
     39b:	80 80 e0 90 90 90 12 36 56 40 00 c0 40 40 e0 11     .......6V@..@@..
     3ab:	37 57 20 00 20 20 20 a0 40 02 46 56 80 80 90 e0     7W .   .@.FV....
     3bb:	90 90 12 36 56 c0 40 40 40 40 e0 02 54 54 d0 a8     ...6V.@@@@..TT..
     3cb:	a8 a8 02 44 54 e0 90 90 90 02 44 54 60 90 90 60     ...DT.....DT`..`
     3db:	01 45 55 e0 90 e0 80 80 01 45 55 70 90 70 10 10     .EU......EUp.p..
     3eb:	02 44 54 a0 d0 80 80 12 34 54 60 c0 20 c0 02 46     .DT.....4T`. ..F
     3fb:	56 40 40 e0 40 50 20 02 44 54 90 90 90 70 12 34     V@@.@P .DT...p.4
     40b:	54 a0 a0 a0 40 02 54 54 88 a8 a8 50 02 44 54 90     T...@.TT...P.DT.
     41b:	60 60 90 01 45 55 90 90 70 90 60 02 44 54 f0 20     ``..EU..p.`.DT. 
     42b:	40 f0 02 47 57 30 40 20 c0 20 40 30 22 16 56 80     @..GW0@ . @0".V.
     43b:	80 80 80 80 80 02 47 57 c0 20 40 30 40 20 c0 06     ......GW. @0@ ..
     44b:	42 52 50 a0 ff                                      BRP..

00000450 <__ctors_end>:
     450:	11 24       	eor	r1, r1
     452:	1f be       	out	0x3f, r1	; 63
     454:	cf ef       	ldi	r28, 0xFF	; 255
     456:	d8 e0       	ldi	r29, 0x08	; 8
     458:	de bf       	out	0x3e, r29	; 62
     45a:	cd bf       	out	0x3d, r28	; 61

0000045c <__do_copy_data>:
     45c:	11 e0       	ldi	r17, 0x01	; 1
     45e:	a0 e0       	ldi	r26, 0x00	; 0
     460:	b1 e0       	ldi	r27, 0x01	; 1
     462:	e2 e3       	ldi	r30, 0x32	; 50
     464:	f7 e2       	ldi	r31, 0x27	; 39
     466:	02 c0       	rjmp	.+4      	; 0x46c <__do_copy_data+0x10>
     468:	05 90       	lpm	r0, Z+
     46a:	0d 92       	st	X+, r0
     46c:	a4 3c       	cpi	r26, 0xC4	; 196
     46e:	b1 07       	cpc	r27, r17
     470:	d9 f7       	brne	.-10     	; 0x468 <__do_copy_data+0xc>

00000472 <__do_clear_bss>:
     472:	22 e0       	ldi	r18, 0x02	; 2
     474:	a4 ec       	ldi	r26, 0xC4	; 196
     476:	b1 e0       	ldi	r27, 0x01	; 1
     478:	01 c0       	rjmp	.+2      	; 0x47c <.do_clear_bss_start>

0000047a <.do_clear_bss_loop>:
     47a:	1d 92       	st	X+, r1

0000047c <.do_clear_bss_start>:
     47c:	a9 39       	cpi	r26, 0x99	; 153
     47e:	b2 07       	cpc	r27, r18
     480:	e1 f7       	brne	.-8      	; 0x47a <.do_clear_bss_loop>
     482:	69 d2       	rcall	.+1234   	; 0x956 <main>
     484:	0c 94 97 13 	jmp	0x272e	; 0x272e <_exit>

00000488 <__bad_interrupt>:
     488:	bb cd       	rjmp	.-1162   	; 0x0 <__vectors>

0000048a <u8g_setup>:
unsigned int hole_y[NO_HOLES]={ 6, 10,   6,  29,  29, 22, 30, 22, 43,  49, 52, 59, 59};

unsigned char win = 1;

void u8g_setup(void)
{  
     48a:	cf 92       	push	r12
     48c:	ef 92       	push	r14
     48e:	0f 93       	push	r16
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	1f 92       	push	r1
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62
	u8g_InitSPI(&u8g, &u8g_dev_st7920_128x64_sw_spi, PN(1, 7), PN(1, 5), PN(1, 4), U8G_PIN_NONE, U8G_PIN_NONE);
     49a:	64 e0       	ldi	r22, 0x04	; 4
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	3e d6       	rcall	.+3196   	; 0x111c <u8g_Pin>
     4a0:	08 2f       	mov	r16, r24
     4a2:	65 e0       	ldi	r22, 0x05	; 5
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	3a d6       	rcall	.+3188   	; 0x111c <u8g_Pin>
     4a8:	28 2f       	mov	r18, r24
     4aa:	67 e0       	ldi	r22, 0x07	; 7
     4ac:	81 e0       	ldi	r24, 0x01	; 1
     4ae:	29 83       	std	Y+1, r18	; 0x01
     4b0:	35 d6       	rcall	.+3178   	; 0x111c <u8g_Pin>
     4b2:	48 2f       	mov	r20, r24
     4b4:	cc 24       	eor	r12, r12
     4b6:	ca 94       	dec	r12
     4b8:	ee 24       	eor	r14, r14
     4ba:	ea 94       	dec	r14
     4bc:	29 81       	ldd	r18, Y+1	; 0x01
     4be:	6b e6       	ldi	r22, 0x6B	; 107
     4c0:	71 e0       	ldi	r23, 0x01	; 1
     4c2:	84 e5       	ldi	r24, 0x54	; 84
     4c4:	92 e0       	ldi	r25, 0x02	; 2
     4c6:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <u8g_InitSPI>
     4ca:	0f 90       	pop	r0
     4cc:	df 91       	pop	r29
     4ce:	cf 91       	pop	r28
}
     4d0:	0f 91       	pop	r16
     4d2:	ef 90       	pop	r14
     4d4:	cf 90       	pop	r12
     4d6:	08 95       	ret

000004d8 <sys_init>:

void sys_init(void)
{
//#if defined(__AVR__)
  /* select minimal prescaler (max system speed) */
CLKPR = 0x80;
     4d8:	e1 e6       	ldi	r30, 0x61	; 97
     4da:	f0 e0       	ldi	r31, 0x00	; 0
     4dc:	80 e8       	ldi	r24, 0x80	; 128
     4de:	80 83       	st	Z, r24
  CLKPR = 0x00;
     4e0:	10 82       	st	Z, r1
     4e2:	08 95       	ret

000004e4 <draw_start>:
}

unsigned int pos_x = INIT_X;
unsigned int pos_y = INIT_Y;

void draw_start(void){
     4e4:	ef 92       	push	r14
     4e6:	ff 92       	push	r15
     4e8:	0f 93       	push	r16
	u8g_SetRot180(&u8g);
     4ea:	84 e5       	ldi	r24, 0x54	; 84
     4ec:	92 e0       	ldi	r25, 0x02	; 2
     4ee:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <u8g_SetRot180>
	u8g_SetFont(&u8g, u8g_font_5x8r);
     4f2:	6b e2       	ldi	r22, 0x2B	; 43
     4f4:	71 e0       	ldi	r23, 0x01	; 1
     4f6:	84 e5       	ldi	r24, 0x54	; 84
     4f8:	92 e0       	ldi	r25, 0x02	; 2
     4fa:	0e 94 8c 0a 	call	0x1518	; 0x1518 <u8g_SetFont>
	u8g_DrawStr(&u8g, 10, 55, "Press button to start ");
     4fe:	2d e7       	ldi	r18, 0x7D	; 125
     500:	31 e0       	ldi	r19, 0x01	; 1
     502:	47 e3       	ldi	r20, 0x37	; 55
     504:	6a e0       	ldi	r22, 0x0A	; 10
     506:	84 e5       	ldi	r24, 0x54	; 84
     508:	92 e0       	ldi	r25, 0x02	; 2
     50a:	0e 94 ed 0a 	call	0x15da	; 0x15da <u8g_DrawStr>
	u8g_DrawBitmapP(&u8g, 70, 0, 4, 32, ball);
     50e:	8c e7       	ldi	r24, 0x7C	; 124
     510:	e8 2e       	mov	r14, r24
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	f8 2e       	mov	r15, r24
     516:	00 e2       	ldi	r16, 0x20	; 32
     518:	24 e0       	ldi	r18, 0x04	; 4
     51a:	40 e0       	ldi	r20, 0x00	; 0
     51c:	66 e4       	ldi	r22, 0x46	; 70
     51e:	84 e5       	ldi	r24, 0x54	; 84
     520:	92 e0       	ldi	r25, 0x02	; 2
     522:	6b d4       	rcall	.+2262   	; 0xdfa <u8g_DrawBitmapP>
     524:	0c e3       	ldi	r16, 0x3C	; 60
	u8g_DrawLine(&u8g, 3, 45, 3, 60);
     526:	23 e0       	ldi	r18, 0x03	; 3
     528:	4d e2       	ldi	r20, 0x2D	; 45
     52a:	63 e0       	ldi	r22, 0x03	; 3
     52c:	84 e5       	ldi	r24, 0x54	; 84
     52e:	92 e0       	ldi	r25, 0x02	; 2
     530:	0e 94 0e 0b 	call	0x161c	; 0x161c <u8g_DrawLine>
     534:	2b e7       	ldi	r18, 0x7B	; 123
	u8g_DrawLine(&u8g, 3, 60, 123, 60);
     536:	4c e3       	ldi	r20, 0x3C	; 60
     538:	63 e0       	ldi	r22, 0x03	; 3
     53a:	84 e5       	ldi	r24, 0x54	; 84
     53c:	92 e0       	ldi	r25, 0x02	; 2
     53e:	0e 94 0e 0b 	call	0x161c	; 0x161c <u8g_DrawLine>
     542:	0d e2       	ldi	r16, 0x2D	; 45
	u8g_DrawLine(&u8g, 123, 60, 123, 45);
     544:	2b e7       	ldi	r18, 0x7B	; 123
     546:	4c e3       	ldi	r20, 0x3C	; 60
     548:	6b e7       	ldi	r22, 0x7B	; 123
     54a:	84 e5       	ldi	r24, 0x54	; 84
     54c:	92 e0       	ldi	r25, 0x02	; 2
     54e:	0e 94 0e 0b 	call	0x161c	; 0x161c <u8g_DrawLine>
     552:	23 e0       	ldi	r18, 0x03	; 3
	u8g_DrawLine(&u8g, 123, 45, 3, 45);
     554:	4d e2       	ldi	r20, 0x2D	; 45
     556:	6b e7       	ldi	r22, 0x7B	; 123
     558:	84 e5       	ldi	r24, 0x54	; 84
     55a:	92 e0       	ldi	r25, 0x02	; 2
     55c:	0e 94 0e 0b 	call	0x161c	; 0x161c <u8g_DrawLine>
     560:	84 e5       	ldi	r24, 0x54	; 84

	u8g_SetScale2x2(&u8g);
     562:	92 e0       	ldi	r25, 0x02	; 2
     564:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <u8g_SetScale2x2>
     568:	24 e9       	ldi	r18, 0x94	; 148
	u8g_DrawStr(&u8g, 4, 10, "Teeter");
     56a:	31 e0       	ldi	r19, 0x01	; 1
     56c:	4a e0       	ldi	r20, 0x0A	; 10
     56e:	64 e0       	ldi	r22, 0x04	; 4
     570:	84 e5       	ldi	r24, 0x54	; 84
     572:	92 e0       	ldi	r25, 0x02	; 2
     574:	0e 94 ed 0a 	call	0x15da	; 0x15da <u8g_DrawStr>
     578:	2b e9       	ldi	r18, 0x9B	; 155
	u8g_DrawStr(&u8g, 10, 20, "BALL");
     57a:	31 e0       	ldi	r19, 0x01	; 1
     57c:	44 e1       	ldi	r20, 0x14	; 20
     57e:	6a e0       	ldi	r22, 0x0A	; 10
     580:	84 e5       	ldi	r24, 0x54	; 84
     582:	92 e0       	ldi	r25, 0x02	; 2
     584:	0e 94 ed 0a 	call	0x15da	; 0x15da <u8g_DrawStr>
     588:	84 e5       	ldi	r24, 0x54	; 84
	u8g_UndoScale(&u8g);
     58a:	92 e0       	ldi	r25, 0x02	; 2
     58c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <u8g_UndoScale>
     590:	0f 91       	pop	r16
}
     592:	ff 90       	pop	r15
     594:	ef 90       	pop	r14
     596:	08 95       	ret

00000598 <draw_frame>:
	u8g_UndoScale(&u8g);
	u8g_DrawStr(&u8g, 15, 55, "Press button to play");
	u8g_DrawStr(&u8g, 50, 61, "again");
}

void draw_frame(void){
     598:	0f 93       	push	r16
	u8g_DrawLine(&u8g, MIN, MIN, MIN, MAX_Y);
     59a:	0f e3       	ldi	r16, 0x3F	; 63
     59c:	20 e0       	ldi	r18, 0x00	; 0
     59e:	40 e0       	ldi	r20, 0x00	; 0
     5a0:	60 e0       	ldi	r22, 0x00	; 0
     5a2:	84 e5       	ldi	r24, 0x54	; 84
     5a4:	92 e0       	ldi	r25, 0x02	; 2
     5a6:	0e 94 0e 0b 	call	0x161c	; 0x161c <u8g_DrawLine>
	u8g_DrawLine(&u8g, MIN, MIN, MAX_X, MIN);
     5aa:	00 e0       	ldi	r16, 0x00	; 0
     5ac:	2f e7       	ldi	r18, 0x7F	; 127
     5ae:	40 e0       	ldi	r20, 0x00	; 0
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	84 e5       	ldi	r24, 0x54	; 84
     5b4:	92 e0       	ldi	r25, 0x02	; 2
     5b6:	0e 94 0e 0b 	call	0x161c	; 0x161c <u8g_DrawLine>
	u8g_DrawLine(&u8g, MIN, MAX_Y, MAX_X, MAX_Y);
     5ba:	0f e3       	ldi	r16, 0x3F	; 63
     5bc:	2f e7       	ldi	r18, 0x7F	; 127
     5be:	4f e3       	ldi	r20, 0x3F	; 63
     5c0:	60 e0       	ldi	r22, 0x00	; 0
     5c2:	84 e5       	ldi	r24, 0x54	; 84
     5c4:	92 e0       	ldi	r25, 0x02	; 2
     5c6:	0e 94 0e 0b 	call	0x161c	; 0x161c <u8g_DrawLine>
	u8g_DrawLine(&u8g, MAX_X, MIN, MAX_X, MAX_Y);
     5ca:	2f e7       	ldi	r18, 0x7F	; 127
     5cc:	40 e0       	ldi	r20, 0x00	; 0
     5ce:	6f e7       	ldi	r22, 0x7F	; 127
     5d0:	84 e5       	ldi	r24, 0x54	; 84
     5d2:	92 e0       	ldi	r25, 0x02	; 2
     5d4:	0e 94 0e 0b 	call	0x161c	; 0x161c <u8g_DrawLine>
}
     5d8:	0f 91       	pop	r16
     5da:	08 95       	ret

000005dc <draw_end>:
	u8g_DrawStr(&u8g, 10, 20, "BALL");
	u8g_UndoScale(&u8g);
}

void draw_end(void){
	u8g_SetRot180(&u8g);
     5dc:	84 e5       	ldi	r24, 0x54	; 84
     5de:	92 e0       	ldi	r25, 0x02	; 2
     5e0:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <u8g_SetRot180>
	u8g_SetFont(&u8g, u8g_font_5x8r);
     5e4:	6b e2       	ldi	r22, 0x2B	; 43
     5e6:	71 e0       	ldi	r23, 0x01	; 1
     5e8:	84 e5       	ldi	r24, 0x54	; 84
     5ea:	92 e0       	ldi	r25, 0x02	; 2
     5ec:	95 d7       	rcall	.+3882   	; 0x1518 <u8g_SetFont>
     5ee:	d4 df       	rcall	.-88     	; 0x598 <draw_frame>
	draw_frame();
     5f0:	84 e5       	ldi	r24, 0x54	; 84
     5f2:	92 e0       	ldi	r25, 0x02	; 2
	u8g_SetScale2x2(&u8g);
     5f4:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <u8g_SetScale2x2>
     5f8:	20 ea       	ldi	r18, 0xA0	; 160
     5fa:	31 e0       	ldi	r19, 0x01	; 1
	u8g_DrawStr(&u8g, 14, 18, "You win!");
     5fc:	42 e1       	ldi	r20, 0x12	; 18
     5fe:	6e e0       	ldi	r22, 0x0E	; 14
     600:	84 e5       	ldi	r24, 0x54	; 84
     602:	92 e0       	ldi	r25, 0x02	; 2
     604:	ea d7       	rcall	.+4052   	; 0x15da <u8g_DrawStr>
     606:	84 e5       	ldi	r24, 0x54	; 84
     608:	92 e0       	ldi	r25, 0x02	; 2
     60a:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <u8g_UndoScale>
	u8g_UndoScale(&u8g);
     60e:	29 ea       	ldi	r18, 0xA9	; 169
     610:	31 e0       	ldi	r19, 0x01	; 1
     612:	47 e3       	ldi	r20, 0x37	; 55
	u8g_DrawStr(&u8g, 15, 55, "Press button to play");
     614:	6f e0       	ldi	r22, 0x0F	; 15
     616:	84 e5       	ldi	r24, 0x54	; 84
     618:	92 e0       	ldi	r25, 0x02	; 2
     61a:	df d7       	rcall	.+4030   	; 0x15da <u8g_DrawStr>
     61c:	2e eb       	ldi	r18, 0xBE	; 190
     61e:	31 e0       	ldi	r19, 0x01	; 1
     620:	4d e3       	ldi	r20, 0x3D	; 61
     622:	62 e3       	ldi	r22, 0x32	; 50
	u8g_DrawStr(&u8g, 50, 61, "again");
     624:	84 e5       	ldi	r24, 0x54	; 84
     626:	92 e0       	ldi	r25, 0x02	; 2
     628:	d8 c7       	rjmp	.+4016   	; 0x15da <u8g_DrawStr>

0000062a <play>:
};

/* Genereaza o nota folosind buzzer-ul. */


void play(void) {
     62a:	a0 e0       	ldi	r26, 0x00	; 0
     62c:	b0 e0       	ldi	r27, 0x00	; 0
     62e:	eb e1       	ldi	r30, 0x1B	; 27
     630:	f3 e0       	ldi	r31, 0x03	; 3
     632:	0c 94 cf 11 	jmp	0x239e	; 0x239e <__prologue_saves__+0x4>
	int valx, valy;
	unsigned char i;
	int val1, val2;

	mpu6050_getConvData(&x, &y, &z, &unused, &unused, &unused);
     636:	20 e5       	ldi	r18, 0x50	; 80
     638:	e2 2e       	mov	r14, r18
     63a:	22 e0       	ldi	r18, 0x02	; 2
     63c:	f2 2e       	mov	r15, r18
     63e:	87 01       	movw	r16, r14
     640:	97 01       	movw	r18, r14
     642:	44 ec       	ldi	r20, 0xC4	; 196
     644:	51 e0       	ldi	r21, 0x01	; 1
     646:	68 ec       	ldi	r22, 0xC8	; 200
     648:	71 e0       	ldi	r23, 0x01	; 1
     64a:	8c ec       	ldi	r24, 0xCC	; 204
     64c:	91 e0       	ldi	r25, 0x01	; 1
     64e:	12 d3       	rcall	.+1572   	; 0xc74 <mpu6050_getConvData>
     650:	80 90 c8 01 	lds	r8, 0x01C8
	valx = y * PAD_INCREMENT;
     654:	90 90 c9 01 	lds	r9, 0x01C9
     658:	a0 90 ca 01 	lds	r10, 0x01CA
     65c:	b0 90 cb 01 	lds	r11, 0x01CB
     660:	60 91 cc 01 	lds	r22, 0x01CC
	valy = x * PAD_INCREMENT;
     664:	70 91 cd 01 	lds	r23, 0x01CD
     668:	80 91 ce 01 	lds	r24, 0x01CE
     66c:	90 91 cf 01 	lds	r25, 0x01CF
     670:	20 91 04 01 	lds	r18, 0x0104

	if (!win) {
     674:	21 11       	cpse	r18, r1
     676:	0c c0       	rjmp	.+24     	; 0x690 <play+0x66>
     678:	84 e0       	ldi	r24, 0x04	; 4
		pos_x = INIT_X;
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	90 93 03 01 	sts	0x0103, r25
     680:	80 93 02 01 	sts	0x0102, r24
     684:	90 93 01 01 	sts	0x0101, r25
		pos_y = INIT_Y;
     688:	80 93 00 01 	sts	0x0100, r24
     68c:	81 e0       	ldi	r24, 0x01	; 1
		win = 1;
     68e:	a3 c0       	rjmp	.+326    	; 0x7d6 <play+0x1ac>
     690:	20 e0       	ldi	r18, 0x00	; 0
	unsigned char i;
	int val1, val2;

	mpu6050_getConvData(&x, &y, &z, &unused, &unused, &unused);
	valx = y * PAD_INCREMENT;
	valy = x * PAD_INCREMENT;
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	40 e0       	ldi	r20, 0x00	; 0
     696:	51 e4       	ldi	r21, 0x41	; 65
     698:	0e 94 2b 13 	call	0x2656	; 0x2656 <__mulsf3>
     69c:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <__fixsfsi>
     6a0:	eb 01       	movw	r28, r22
     6a2:	e0 90 02 01 	lds	r14, 0x0102
				if (valx > 0  && pos_x - x1[i] <= RAD + valx)
					valx =  pos_y - x1[i] - RAD - 1;
				else if (valx < 0  && x1[i] -  pos_x <= RAD - valx)
					valx = RAD + 1 - (x1[i] - pos_x);
			}*/
			if (pos_x >= x1[i] && pos_x <= x2[i]) {
     6a6:	f0 90 03 01 	lds	r15, 0x0103
     6aa:	00 91 00 01 	lds	r16, 0x0100
				if (valy > 0  && pos_y - y1[i] <= RAD + valy)
     6ae:	10 91 01 01 	lds	r17, 0x0101
     6b2:	38 01       	movw	r6, r16
     6b4:	23 e0       	ldi	r18, 0x03	; 3
     6b6:	62 0e       	add	r6, r18
     6b8:	71 1c       	adc	r7, r1
     6ba:	4b e5       	ldi	r20, 0x5B	; 91
     6bc:	51 e0       	ldi	r21, 0x01	; 1
     6be:	83 e5       	ldi	r24, 0x53	; 83
     6c0:	48 2e       	mov	r4, r24
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	58 2e       	mov	r5, r24
     6c6:	e9 e3       	ldi	r30, 0x39	; 57
     6c8:	f1 e0       	ldi	r31, 0x01	; 1
     6ca:	92 e0       	ldi	r25, 0x02	; 2
					valy =  pos_y - y1[i] - RAD - 1;
				else if (valy < 0  && y1[i] -  pos_y <= RAD - valy)
     6cc:	c9 2e       	mov	r12, r25
     6ce:	d1 2c       	mov	r13, r1
     6d0:	da 01       	movw	r26, r20
				if (valx > 0  && pos_x - x1[i] <= RAD + valx)
					valx =  pos_y - x1[i] - RAD - 1;
				else if (valx < 0  && x1[i] -  pos_x <= RAD - valx)
					valx = RAD + 1 - (x1[i] - pos_x);
			}*/
			if (pos_x >= x1[i] && pos_x <= x2[i]) {
     6d2:	8d 91       	ld	r24, X+
     6d4:	9d 91       	ld	r25, X+
     6d6:	ad 01       	movw	r20, r26
     6d8:	e8 16       	cp	r14, r24
     6da:	f9 06       	cpc	r15, r25
     6dc:	40 f1       	brcs	.+80     	; 0x72e <play+0x104>
     6de:	d2 01       	movw	r26, r4
     6e0:	8d 91       	ld	r24, X+
     6e2:	9c 91       	ld	r25, X
     6e4:	8e 15       	cp	r24, r14
     6e6:	9f 05       	cpc	r25, r15
     6e8:	10 f1       	brcs	.+68     	; 0x72e <play+0x104>
     6ea:	1c 16       	cp	r1, r28
				if (valy > 0  && pos_y - y1[i] <= RAD + valy)
     6ec:	1d 06       	cpc	r1, r29
     6ee:	7c f4       	brge	.+30     	; 0x70e <play+0xe4>
     6f0:	80 81       	ld	r24, Z
     6f2:	91 81       	ldd	r25, Z+1	; 0x01
     6f4:	98 01       	movw	r18, r16
     6f6:	28 1b       	sub	r18, r24
     6f8:	39 0b       	sbc	r19, r25
     6fa:	c9 01       	movw	r24, r18
     6fc:	9e 01       	movw	r18, r28
     6fe:	2e 5f       	subi	r18, 0xFE	; 254
     700:	3f 4f       	sbci	r19, 0xFF	; 255
     702:	28 17       	cp	r18, r24
     704:	39 07       	cpc	r19, r25
     706:	98 f0       	brcs	.+38     	; 0x72e <play+0x104>
     708:	ec 01       	movw	r28, r24
					valy =  pos_y - y1[i] - RAD - 1;
     70a:	23 97       	sbiw	r28, 0x03	; 3
     70c:	10 c0       	rjmp	.+32     	; 0x72e <play+0x104>
     70e:	20 97       	sbiw	r28, 0x00	; 0
				else if (valy < 0  && y1[i] -  pos_y <= RAD - valy)
     710:	71 f0       	breq	.+28     	; 0x72e <play+0x104>
     712:	60 81       	ld	r22, Z
     714:	71 81       	ldd	r23, Z+1	; 0x01
     716:	9b 01       	movw	r18, r22
     718:	20 1b       	sub	r18, r16
     71a:	31 0b       	sbc	r19, r17
     71c:	c6 01       	movw	r24, r12
     71e:	8c 1b       	sub	r24, r28
     720:	9d 0b       	sbc	r25, r29
     722:	82 17       	cp	r24, r18
     724:	93 07       	cpc	r25, r19
     726:	18 f0       	brcs	.+6      	; 0x72e <play+0x104>
     728:	e3 01       	movw	r28, r6
					valy = RAD + 1 - (y1[i] - pos_y);
     72a:	c6 1b       	sub	r28, r22
     72c:	d7 0b       	sbc	r29, r23
     72e:	32 e0       	ldi	r19, 0x02	; 2
     730:	43 0e       	add	r4, r19
     732:	51 1c       	adc	r5, r1
     734:	32 96       	adiw	r30, 0x02	; 2
     736:	81 e0       	ldi	r24, 0x01	; 1
		// 	_delay_ms(50);
		// }
		//buzzer_reda();
		
	} else {
		for (i = 0; i < NO_LINES; i++) {
     738:	43 36       	cpi	r20, 0x63	; 99
     73a:	58 07       	cpc	r21, r24
     73c:	49 f6       	brne	.-110    	; 0x6d0 <play+0xa6>
     73e:	ef e1       	ldi	r30, 0x1F	; 31
     740:	f1 e0       	ldi	r31, 0x01	; 1
     742:	a5 e0       	ldi	r26, 0x05	; 5
     744:	b1 e0       	ldi	r27, 0x01	; 1
     746:	21 91       	ld	r18, Z+
				else if (valy < 0  && y1[i] -  pos_y <= RAD - valy)
					valy = RAD + 1 - (y1[i] - pos_y);
			}
		}
		for (i = 0 ; i < NO_HOLES - 1; i++){
			val1 = pos_x - hole_x[i];
     748:	31 91       	ld	r19, Z+
     74a:	c7 01       	movw	r24, r14
     74c:	82 1b       	sub	r24, r18
     74e:	93 0b       	sbc	r25, r19
     750:	6d 91       	ld	r22, X+
			val2 = pos_y - hole_y[i];
     752:	7d 91       	ld	r23, X+
     754:	a8 01       	movw	r20, r16
     756:	46 1b       	sub	r20, r22
     758:	57 0b       	sbc	r21, r23
     75a:	88 9f       	mul	r24, r24
			if (val1 * val1 + val2 * val2 <= DIST) {
     75c:	60 01       	movw	r12, r0
     75e:	89 9f       	mul	r24, r25
     760:	d0 0c       	add	r13, r0
     762:	d0 0c       	add	r13, r0
     764:	11 24       	eor	r1, r1
     766:	44 9f       	mul	r20, r20
     768:	c0 01       	movw	r24, r0
     76a:	45 9f       	mul	r20, r21
     76c:	90 0d       	add	r25, r0
     76e:	90 0d       	add	r25, r0
     770:	11 24       	eor	r1, r1
     772:	8c 0d       	add	r24, r12
     774:	9d 1d       	adc	r25, r13
     776:	41 97       	sbiw	r24, 0x11	; 17
     778:	5c f4       	brge	.+22     	; 0x790 <play+0x166>
     77a:	30 93 03 01 	sts	0x0103, r19
				pos_x = hole_x[i];
     77e:	20 93 02 01 	sts	0x0102, r18
     782:	70 93 01 01 	sts	0x0101, r23
				pos_y = hole_y[i];
     786:	60 93 00 01 	sts	0x0100, r22
     78a:	10 92 04 01 	sts	0x0104, r1
				win = 0;
     78e:	64 c0       	rjmp	.+200    	; 0x858 <play+0x22e>
				//PORTB ^= (1 << PB1);
				return;
     790:	21 e0       	ldi	r18, 0x01	; 1
					valy =  pos_y - y1[i] - RAD - 1;
				else if (valy < 0  && y1[i] -  pos_y <= RAD - valy)
					valy = RAD + 1 - (y1[i] - pos_y);
			}
		}
		for (i = 0 ; i < NO_HOLES - 1; i++){
     792:	e7 33       	cpi	r30, 0x37	; 55
     794:	f2 07       	cpc	r31, r18
     796:	b9 f6       	brne	.-82     	; 0x746 <play+0x11c>
     798:	80 91 37 01 	lds	r24, 0x0137
				//PORTB ^= (1 << PB1);
				return;
			}
		}

		val1 = pos_x - hole_x[i];
     79c:	90 91 38 01 	lds	r25, 0x0138
     7a0:	a7 01       	movw	r20, r14
     7a2:	48 1b       	sub	r20, r24
     7a4:	59 0b       	sbc	r21, r25
     7a6:	80 91 1d 01 	lds	r24, 0x011D
		val2 = pos_y - hole_y[i];
     7aa:	90 91 1e 01 	lds	r25, 0x011E
     7ae:	98 01       	movw	r18, r16
     7b0:	28 1b       	sub	r18, r24
     7b2:	39 0b       	sbc	r19, r25
     7b4:	44 9f       	mul	r20, r20
		if (val1 * val1 + val2 * val2 <= DIST) {
     7b6:	b0 01       	movw	r22, r0
     7b8:	45 9f       	mul	r20, r21
     7ba:	70 0d       	add	r23, r0
     7bc:	70 0d       	add	r23, r0
     7be:	11 24       	eor	r1, r1
     7c0:	22 9f       	mul	r18, r18
     7c2:	c0 01       	movw	r24, r0
     7c4:	23 9f       	mul	r18, r19
     7c6:	90 0d       	add	r25, r0
     7c8:	90 0d       	add	r25, r0
     7ca:	11 24       	eor	r1, r1
     7cc:	86 0f       	add	r24, r22
     7ce:	97 1f       	adc	r25, r23
     7d0:	41 97       	sbiw	r24, 0x11	; 17
     7d2:	24 f4       	brge	.+8      	; 0x7dc <play+0x1b2>
     7d4:	82 e0       	ldi	r24, 0x02	; 2
				win = 2;
     7d6:	80 93 04 01 	sts	0x0104, r24
     7da:	3e c0       	rjmp	.+124    	; 0x858 <play+0x22e>
				return;
     7dc:	20 e0       	ldi	r18, 0x00	; 0
	int valx, valy;
	unsigned char i;
	int val1, val2;

	mpu6050_getConvData(&x, &y, &z, &unused, &unused, &unused);
	valx = y * PAD_INCREMENT;
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	40 e0       	ldi	r20, 0x00	; 0
     7e2:	51 e4       	ldi	r21, 0x41	; 65
     7e4:	c5 01       	movw	r24, r10
     7e6:	b4 01       	movw	r22, r8
     7e8:	0e 94 2b 13 	call	0x2656	; 0x2656 <__mulsf3>
     7ec:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <__fixsfsi>
     7f0:	fb 01       	movw	r30, r22
     7f2:	a7 01       	movw	r20, r14
		if (val1 * val1 + val2 * val2 <= DIST) {
				win = 2;
				return;
		}

		val1 = pos_x - valx;
     7f4:	46 1b       	sub	r20, r22
     7f6:	57 0b       	sbc	r21, r23
     7f8:	98 01       	movw	r18, r16
		val2 = pos_y - valy;
     7fa:	2c 1b       	sub	r18, r28
     7fc:	3d 0b       	sbc	r19, r29
     7fe:	1e 16       	cp	r1, r30
	    if (valx > 0 && val1 < DIAM)
     800:	1f 06       	cpc	r1, r31
     802:	34 f4       	brge	.+12     	; 0x810 <play+0x1e6>
     804:	45 30       	cpi	r20, 0x05	; 5
     806:	51 05       	cpc	r21, r1
     808:	5c f4       	brge	.+22     	; 0x820 <play+0x1f6>
     80a:	f7 01       	movw	r30, r14
			valx =  pos_x - RAD - 1;
     80c:	33 97       	sbiw	r30, 0x03	; 3
     80e:	08 c0       	rjmp	.+16     	; 0x820 <play+0x1f6>
     810:	30 97       	sbiw	r30, 0x00	; 0
		else if (valx < 0  && val1 > MAX_X - DIAM)
     812:	31 f0       	breq	.+12     	; 0x820 <play+0x1f6>
     814:	4b 37       	cpi	r20, 0x7B	; 123
     816:	51 05       	cpc	r21, r1
     818:	1c f0       	brlt	.+6      	; 0x820 <play+0x1f6>
     81a:	f7 01       	movw	r30, r14
			valx = pos_x  - (MAX_X - RAD - 1);
     81c:	ec 57       	subi	r30, 0x7C	; 124
     81e:	f1 09       	sbc	r31, r1
     820:	1c 16       	cp	r1, r28
		
		if (valy > 0  && val2 < DIAM)
     822:	1d 06       	cpc	r1, r29
     824:	34 f4       	brge	.+12     	; 0x832 <play+0x208>
     826:	25 30       	cpi	r18, 0x05	; 5
     828:	31 05       	cpc	r19, r1
     82a:	54 f4       	brge	.+20     	; 0x840 <play+0x216>
     82c:	e8 01       	movw	r28, r16
			valy =  pos_y - RAD - 1;
     82e:	23 97       	sbiw	r28, 0x03	; 3
     830:	07 c0       	rjmp	.+14     	; 0x840 <play+0x216>
     832:	20 97       	sbiw	r28, 0x00	; 0
		else if (valy < 0  && val2 >= MAX_Y - DIAM)
     834:	29 f0       	breq	.+10     	; 0x840 <play+0x216>
     836:	2a 33       	cpi	r18, 0x3A	; 58
     838:	31 05       	cpc	r19, r1
     83a:	14 f0       	brlt	.+4      	; 0x840 <play+0x216>
     83c:	e8 01       	movw	r28, r16
			valy = pos_y  - (MAX_Y - RAD - 1);
     83e:	ec 97       	sbiw	r28, 0x3c	; 60
     840:	ee 1a       	sub	r14, r30

		pos_x -= valx;
     842:	ff 0a       	sbc	r15, r31
     844:	f0 92 03 01 	sts	0x0103, r15
     848:	e0 92 02 01 	sts	0x0102, r14
     84c:	0c 1b       	sub	r16, r28
	    pos_y -= valy;
     84e:	1d 0b       	sbc	r17, r29
     850:	10 93 01 01 	sts	0x0101, r17
     854:	00 93 00 01 	sts	0x0100, r16
     858:	cd b7       	in	r28, 0x3d	; 61
	}
}
     85a:	de b7       	in	r29, 0x3e	; 62
     85c:	e0 e1       	ldi	r30, 0x10	; 16
     85e:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <__epilogue_restores__+0x4>

00000862 <draw_X>:

void draw_X(void)
{
     862:	ef 92       	push	r14
     864:	ff 92       	push	r15
     866:	0f 93       	push	r16
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
	unsigned char last = NO_HOLES - 1;

	u8g_DrawLine(&u8g, hole_x[last] - 1, hole_y[last] - 1, 
					   hole_x[last] + 1, hole_y[last] + 1);
     86c:	85 e0       	ldi	r24, 0x05	; 5
     86e:	e8 2e       	mov	r14, r24
     870:	81 e0       	ldi	r24, 0x01	; 1
     872:	f8 2e       	mov	r15, r24

void draw_X(void)
{
	unsigned char last = NO_HOLES - 1;

	u8g_DrawLine(&u8g, hole_x[last] - 1, hole_y[last] - 1, 
     874:	f7 01       	movw	r30, r14
     876:	40 8d       	ldd	r20, Z+24	; 0x18
					   hole_x[last] + 1, hole_y[last] + 1);
     878:	cf e1       	ldi	r28, 0x1F	; 31
     87a:	d1 e0       	ldi	r29, 0x01	; 1

void draw_X(void)
{
	unsigned char last = NO_HOLES - 1;

	u8g_DrawLine(&u8g, hole_x[last] - 1, hole_y[last] - 1, 
     87c:	68 8d       	ldd	r22, Y+24	; 0x18
     87e:	01 e0       	ldi	r16, 0x01	; 1
     880:	04 0f       	add	r16, r20
     882:	21 e0       	ldi	r18, 0x01	; 1
     884:	26 0f       	add	r18, r22
     886:	41 50       	subi	r20, 0x01	; 1
     888:	61 50       	subi	r22, 0x01	; 1
     88a:	84 e5       	ldi	r24, 0x54	; 84
     88c:	92 e0       	ldi	r25, 0x02	; 2
     88e:	c6 d6       	rcall	.+3468   	; 0x161c <u8g_DrawLine>
     890:	f7 01       	movw	r30, r14
					   hole_x[last] + 1, hole_y[last] + 1);
	u8g_DrawLine(&u8g, hole_x[last] - 1, hole_y[last] + 1, 
     892:	40 8d       	ldd	r20, Z+24	; 0x18
     894:	68 8d       	ldd	r22, Y+24	; 0x18
     896:	0f ef       	ldi	r16, 0xFF	; 255
     898:	04 0f       	add	r16, r20
     89a:	21 e0       	ldi	r18, 0x01	; 1
     89c:	26 0f       	add	r18, r22
     89e:	4f 5f       	subi	r20, 0xFF	; 255
     8a0:	61 50       	subi	r22, 0x01	; 1
     8a2:	84 e5       	ldi	r24, 0x54	; 84
     8a4:	92 e0       	ldi	r25, 0x02	; 2
     8a6:	ba d6       	rcall	.+3444   	; 0x161c <u8g_DrawLine>
     8a8:	df 91       	pop	r29
     8aa:	cf 91       	pop	r28
					   hole_x[last] + 1, hole_y[last] - 1);
}
     8ac:	0f 91       	pop	r16
     8ae:	ff 90       	pop	r15
     8b0:	ef 90       	pop	r14
     8b2:	08 95       	ret

000008b4 <draw_level1>:

void draw_level1(void){
     8b4:	cf 92       	push	r12
     8b6:	df 92       	push	r13
     8b8:	ef 92       	push	r14
     8ba:	ff 92       	push	r15
     8bc:	0f 93       	push	r16
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
	u8g_SetRot180(&u8g);
     8c2:	84 e5       	ldi	r24, 0x54	; 84
     8c4:	92 e0       	ldi	r25, 0x02	; 2
     8c6:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <u8g_SetRot180>
	draw_frame();
     8ca:	66 de       	rcall	.-820    	; 0x598 <draw_frame>
     8cc:	c3 e5       	ldi	r28, 0x53	; 83
     8ce:	d1 e0       	ldi	r29, 0x01	; 1
     8d0:	99 e3       	ldi	r25, 0x39	; 57
     8d2:	c9 2e       	mov	r12, r25
     8d4:	91 e0       	ldi	r25, 0x01	; 1
     8d6:	d9 2e       	mov	r13, r25
     8d8:	2b e5       	ldi	r18, 0x5B	; 91
     8da:	e2 2e       	mov	r14, r18
     8dc:	21 e0       	ldi	r18, 0x01	; 1
     8de:	f2 2e       	mov	r15, r18
     8e0:	28 81       	ld	r18, Y
	unsigned char i;
	for (i = 0; i < NO_LINES; ++i)
		u8g_DrawLine(&u8g, x1[i], y1[i], x2[i], y1[i]);	
     8e2:	22 96       	adiw	r28, 0x02	; 2
     8e4:	f6 01       	movw	r30, r12
     8e6:	40 81       	ld	r20, Z
     8e8:	f2 e0       	ldi	r31, 0x02	; 2
     8ea:	cf 0e       	add	r12, r31
     8ec:	d1 1c       	adc	r13, r1
     8ee:	f7 01       	movw	r30, r14
     8f0:	60 81       	ld	r22, Z
     8f2:	f2 e0       	ldi	r31, 0x02	; 2
     8f4:	ef 0e       	add	r14, r31
     8f6:	f1 1c       	adc	r15, r1
     8f8:	04 2f       	mov	r16, r20
     8fa:	84 e5       	ldi	r24, 0x54	; 84
     8fc:	92 e0       	ldi	r25, 0x02	; 2
     8fe:	8e d6       	rcall	.+3356   	; 0x161c <u8g_DrawLine>
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	cb 35       	cpi	r28, 0x5B	; 91

void draw_level1(void){
	u8g_SetRot180(&u8g);
	draw_frame();
	unsigned char i;
	for (i = 0; i < NO_LINES; ++i)
     904:	d8 07       	cpc	r29, r24
     906:	61 f7       	brne	.-40     	; 0x8e0 <draw_level1+0x2c>
     908:	c5 e0       	ldi	r28, 0x05	; 5
     90a:	d1 e0       	ldi	r29, 0x01	; 1
     90c:	8f e1       	ldi	r24, 0x1F	; 31
     90e:	e8 2e       	mov	r14, r24
     910:	81 e0       	ldi	r24, 0x01	; 1
     912:	f8 2e       	mov	r15, r24
     914:	48 81       	ld	r20, Y
     916:	22 96       	adiw	r28, 0x02	; 2
		u8g_DrawLine(&u8g, x1[i], y1[i], x2[i], y1[i]);	
	
	for ( i = 0; i < NO_HOLES ; i++)
		u8g_DrawCircle(&u8g, hole_x[i], hole_y[i], RAD_HOLE, U8G_DRAW_ALL);
     918:	f7 01       	movw	r30, r14
     91a:	60 81       	ld	r22, Z
     91c:	f2 e0       	ldi	r31, 0x02	; 2
     91e:	ef 0e       	add	r14, r31
     920:	f1 1c       	adc	r15, r1
     922:	0f e0       	ldi	r16, 0x0F	; 15
     924:	23 e0       	ldi	r18, 0x03	; 3
     926:	84 e5       	ldi	r24, 0x54	; 84
     928:	92 e0       	ldi	r25, 0x02	; 2
     92a:	b1 d3       	rcall	.+1890   	; 0x108e <u8g_DrawCircle>
     92c:	81 e0       	ldi	r24, 0x01	; 1
     92e:	cf 31       	cpi	r28, 0x1F	; 31
     930:	d8 07       	cpc	r29, r24
	draw_frame();
	unsigned char i;
	for (i = 0; i < NO_LINES; ++i)
		u8g_DrawLine(&u8g, x1[i], y1[i], x2[i], y1[i]);	
	
	for ( i = 0; i < NO_HOLES ; i++)
     932:	81 f7       	brne	.-32     	; 0x914 <__stack+0x15>
     934:	96 df       	rcall	.-212    	; 0x862 <draw_X>
     936:	22 e0       	ldi	r18, 0x02	; 2
     938:	40 91 00 01 	lds	r20, 0x0100
		u8g_DrawCircle(&u8g, hole_x[i], hole_y[i], RAD_HOLE, U8G_DRAW_ALL);

	draw_X();
     93c:	60 91 02 01 	lds	r22, 0x0102
	u8g_DrawDisc(&u8g, pos_x, pos_y, RAD, U8G_DRAW_ALL);
     940:	84 e5       	ldi	r24, 0x54	; 84
     942:	92 e0       	ldi	r25, 0x02	; 2
     944:	08 d3       	rcall	.+1552   	; 0xf56 <u8g_DrawDisc>
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	0f 91       	pop	r16
     94c:	ff 90       	pop	r15
     94e:	ef 90       	pop	r14
}
     950:	df 90       	pop	r13
     952:	cf 90       	pop	r12
     954:	08 95       	ret

00000956 <main>:


int main(void)
{
  sys_init();
     956:	c0 dd       	rcall	.-1152   	; 0x4d8 <sys_init>
     958:	21 d1       	rcall	.+578    	; 0xb9c <mpu6050_init>
  mpu6050_init();
     95a:	97 dd       	rcall	.-1234   	; 0x48a <u8g_setup>
     95c:	20 98       	cbi	0x04, 0	; 4
  u8g_setup();
     95e:	28 9a       	sbi	0x05, 0	; 5
     960:	21 9a       	sbi	0x04, 1	; 4
	
//	int level = 0;	
	/* Setez pinul PB0 ca intrare. */
	DDRB &= ~(1 << PB0);
     962:	84 e5       	ldi	r24, 0x54	; 84
	/* Activez rezistenta de pull-up pentru pinul PB0. */
	PORTB |= (1 << PB0);
     964:	92 e0       	ldi	r25, 0x02	; 2
	/* Setez pinul PB0 ca iesire. */
	DDRB |= (1 << PB1);
     966:	c9 d7       	rcall	.+3986   	; 0x18fa <u8g_FirstPage>


	for(;;) {  
		u8g_FirstPage(&u8g);
     968:	bd dd       	rcall	.-1158   	; 0x4e4 <draw_start>
     96a:	84 e5       	ldi	r24, 0x54	; 84
     96c:	92 e0       	ldi	r25, 0x02	; 2
     96e:	ca d7       	rcall	.+3988   	; 0x1904 <u8g_NextPage>
		do
		{ 
		 draw_start();
     970:	81 11       	cpse	r24, r1
     972:	fa cf       	rjmp	.-12     	; 0x968 <main+0x12>
		} while ( u8g_NextPage(&u8g) );
     974:	8a e0       	ldi	r24, 0x0A	; 10
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	4e d4       	rcall	.+2204   	; 0x1216 <u8g_Delay>
     97a:	18 99       	sbic	0x03, 0	; 3
     97c:	f2 cf       	rjmp	.-28     	; 0x962 <main+0xc>
     97e:	84 e5       	ldi	r24, 0x54	; 84
		u8g_Delay(10);
     980:	92 e0       	ldi	r25, 0x02	; 2
     982:	bb d7       	rcall	.+3958   	; 0x18fa <u8g_FirstPage>
     984:	97 df       	rcall	.-210    	; 0x8b4 <draw_level1>
     986:	84 e5       	ldi	r24, 0x54	; 84
		if ((PINB & (1 << PB0)) == 0)
     988:	92 e0       	ldi	r25, 0x02	; 2
     98a:	bc d7       	rcall	.+3960   	; 0x1904 <u8g_NextPage>
			break;
	}
	for(;;) {  
		for(;;) {  
			//u8g_Delay(10);
			u8g_FirstPage(&u8g);
     98c:	81 11       	cpse	r24, r1
     98e:	fa cf       	rjmp	.-12     	; 0x984 <main+0x2e>
     990:	4c de       	rcall	.-872    	; 0x62a <play>
     992:	80 91 04 01 	lds	r24, 0x0104
			do
			{
				draw_level1();
     996:	82 30       	cpi	r24, 0x02	; 2
			} while ( u8g_NextPage(&u8g) );
     998:	91 f7       	brne	.-28     	; 0x97e <main+0x28>
     99a:	84 e5       	ldi	r24, 0x54	; 84
     99c:	92 e0       	ldi	r25, 0x02	; 2
     99e:	ad d7       	rcall	.+3930   	; 0x18fa <u8g_FirstPage>
     9a0:	1d de       	rcall	.-966    	; 0x5dc <draw_end>
     9a2:	84 e5       	ldi	r24, 0x54	; 84
			play();	
     9a4:	92 e0       	ldi	r25, 0x02	; 2
     9a6:	ae d7       	rcall	.+3932   	; 0x1904 <u8g_NextPage>
			if (win == 2) 
     9a8:	81 11       	cpse	r24, r1
     9aa:	fa cf       	rjmp	.-12     	; 0x9a0 <main+0x4a>
     9ac:	8a e0       	ldi	r24, 0x0A	; 10
     9ae:	90 e0       	ldi	r25, 0x00	; 0
				break;
		}
		for(;;) {  
			u8g_FirstPage(&u8g);
     9b0:	32 d4       	rcall	.+2148   	; 0x1216 <u8g_Delay>
     9b2:	10 92 04 01 	sts	0x0104, r1
     9b6:	18 99       	sbic	0x03, 0	; 3
			do
			{ 
			 draw_end();
     9b8:	f0 cf       	rjmp	.-32     	; 0x99a <main+0x44>
     9ba:	e1 cf       	rjmp	.-62     	; 0x97e <main+0x28>

000009bc <mpu6050_readBytes.part.0>:
volatile uint8_t buffer[14];

/*
 * read bytes from chip register
 */
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     9bc:	8f 92       	push	r8
     9be:	9f 92       	push	r9
     9c0:	af 92       	push	r10
     9c2:	bf 92       	push	r11
     9c4:	cf 92       	push	r12
     9c6:	df 92       	push	r13
     9c8:	ff 92       	push	r15
     9ca:	0f 93       	push	r16
     9cc:	1f 93       	push	r17
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	00 d0       	rcall	.+0      	; 0x9d4 <mpu6050_readBytes.part.0+0x18>
     9d4:	cd b7       	in	r28, 0x3d	; 61
     9d6:	de b7       	in	r29, 0x3e	; 62
     9d8:	18 2f       	mov	r17, r24
     9da:	f6 2e       	mov	r15, r22
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
		//request register
		i2c_start(MPU6050_ADDR | I2C_WRITE);
     9dc:	80 ed       	ldi	r24, 0xD0	; 208
     9de:	49 83       	std	Y+1, r20	; 0x01
     9e0:	5a 83       	std	Y+2, r21	; 0x02
     9e2:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <i2c_start>
		i2c_write(regAddr);
     9e6:	81 2f       	mov	r24, r17
     9e8:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9ec:	8a e1       	ldi	r24, 0x1A	; 26
     9ee:	8a 95       	dec	r24
     9f0:	f1 f7       	brne	.-4      	; 0x9ee <mpu6050_readBytes.part.0+0x32>
     9f2:	00 c0       	rjmp	.+0      	; 0x9f4 <mpu6050_readBytes.part.0+0x38>
		_delay_us(10);
		//read data
		i2c_start(MPU6050_ADDR | I2C_READ);
     9f4:	81 ed       	ldi	r24, 0xD1	; 209
     9f6:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <i2c_start>
     9fa:	49 81       	ldd	r20, Y+1	; 0x01
     9fc:	84 2e       	mov	r8, r20
     9fe:	5a 81       	ldd	r21, Y+2	; 0x02
     a00:	95 2e       	mov	r9, r21
     a02:	cf 2c       	mov	r12, r15
     a04:	d1 2c       	mov	r13, r1
     a06:	00 e0       	ldi	r16, 0x00	; 0
     a08:	10 e0       	ldi	r17, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     a0a:	56 01       	movw	r10, r12
     a0c:	e1 e0       	ldi	r30, 0x01	; 1
     a0e:	ae 1a       	sub	r10, r30
     a10:	b1 08       	sbc	r11, r1
		i2c_start(MPU6050_ADDR | I2C_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_ADDR | I2C_READ);
		for(i=0; i<length; i++) {
     a12:	0c 15       	cp	r16, r12
     a14:	1d 05       	cpc	r17, r13
     a16:	81 f0       	breq	.+32     	; 0xa38 <mpu6050_readBytes.part.0+0x7c>
			count++;
			if(i==length-1)
     a18:	0a 15       	cp	r16, r10
     a1a:	1b 05       	cpc	r17, r11
     a1c:	19 f4       	brne	.+6      	; 0xa24 <mpu6050_readBytes.part.0+0x68>
				data[i] = i2c_readNak();
     a1e:	0e 94 0f 10 	call	0x201e	; 0x201e <i2c_readNak>
     a22:	02 c0       	rjmp	.+4      	; 0xa28 <mpu6050_readBytes.part.0+0x6c>
			else
				data[i] = i2c_readAck();
     a24:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <i2c_readAck>
     a28:	f4 01       	movw	r30, r8
     a2a:	80 83       	st	Z, r24
     a2c:	0f 5f       	subi	r16, 0xFF	; 255
     a2e:	1f 4f       	sbci	r17, 0xFF	; 255
     a30:	ff ef       	ldi	r31, 0xFF	; 255
     a32:	8f 1a       	sub	r8, r31
     a34:	9f 0a       	sbc	r9, r31
     a36:	ed cf       	rjmp	.-38     	; 0xa12 <mpu6050_readBytes.part.0+0x56>
		}
		i2c_stop();
     a38:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <i2c_stop>
	}
	return count;
}
     a3c:	8f 2d       	mov	r24, r15
     a3e:	0f 90       	pop	r0
     a40:	0f 90       	pop	r0
     a42:	df 91       	pop	r29
     a44:	cf 91       	pop	r28
     a46:	1f 91       	pop	r17
     a48:	0f 91       	pop	r16
     a4a:	ff 90       	pop	r15
     a4c:	df 90       	pop	r13
     a4e:	cf 90       	pop	r12
     a50:	bf 90       	pop	r11
     a52:	af 90       	pop	r10
     a54:	9f 90       	pop	r9
     a56:	8f 90       	pop	r8
     a58:	08 95       	ret

00000a5a <mpu6050_writeBytes.part.1>:
}

/*
 * write bytes to chip register
 */
void mpu6050_writeBytes(uint8_t regAddr, uint8_t length, uint8_t* data) {
     a5a:	a2 e0       	ldi	r26, 0x02	; 2
     a5c:	b0 e0       	ldi	r27, 0x00	; 0
     a5e:	e3 e3       	ldi	r30, 0x33	; 51
     a60:	f5 e0       	ldi	r31, 0x05	; 5
     a62:	0c 94 d9 11 	jmp	0x23b2	; 0x23b2 <__prologue_saves__+0x18>
     a66:	08 2f       	mov	r16, r24
     a68:	16 2f       	mov	r17, r22
	if(length > 0) {
		//write data
		i2c_start(MPU6050_ADDR | I2C_WRITE);
     a6a:	80 ed       	ldi	r24, 0xD0	; 208
     a6c:	49 83       	std	Y+1, r20	; 0x01
     a6e:	5a 83       	std	Y+2, r21	; 0x02
     a70:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <i2c_start>
		i2c_write(regAddr); //reg
     a74:	80 2f       	mov	r24, r16
     a76:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <i2c_write>
     a7a:	49 81       	ldd	r20, Y+1	; 0x01
     a7c:	04 2f       	mov	r16, r20
     a7e:	e4 2e       	mov	r14, r20
     a80:	5a 81       	ldd	r21, Y+2	; 0x02
     a82:	f5 2e       	mov	r15, r21
     a84:	8e 2d       	mov	r24, r14
     a86:	80 1b       	sub	r24, r16
		for (uint8_t i = 0; i < length; i++) {
     a88:	81 17       	cp	r24, r17
     a8a:	30 f4       	brcc	.+12     	; 0xa98 <mpu6050_writeBytes.part.1+0x3e>
			i2c_write((uint8_t) data[i]);
     a8c:	f7 01       	movw	r30, r14
     a8e:	81 91       	ld	r24, Z+
     a90:	7f 01       	movw	r14, r30
     a92:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <i2c_write>
     a96:	f6 cf       	rjmp	.-20     	; 0xa84 <mpu6050_writeBytes.part.1+0x2a>
		}
		i2c_stop();
     a98:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <i2c_stop>
	}
}
     a9c:	22 96       	adiw	r28, 0x02	; 2
     a9e:	e6 e0       	ldi	r30, 0x06	; 6
     aa0:	0c 94 f5 11 	jmp	0x23ea	; 0x23ea <__epilogue_restores__+0x18>

00000aa4 <mpu6050_readBytes>:
 * read bytes from chip register
 */
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     aa4:	66 23       	and	r22, r22
     aa6:	09 f0       	breq	.+2      	; 0xaaa <mpu6050_readBytes+0x6>
     aa8:	89 cf       	rjmp	.-238    	; 0x9bc <mpu6050_readBytes.part.0>
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	08 95       	ret

00000aae <mpu6050_readByte>:
}

/*
 * read 1 byte from chip register
 */
int8_t mpu6050_readByte(uint8_t regAddr, uint8_t *data) {
     aae:	ab 01       	movw	r20, r22
     ab0:	61 e0       	ldi	r22, 0x01	; 1
     ab2:	84 cf       	rjmp	.-248    	; 0x9bc <mpu6050_readBytes.part.0>

00000ab4 <mpu6050_writeByte>:
}

/*
 * write 1 byte to chip register
 */
void mpu6050_writeByte(uint8_t regAddr, uint8_t data) {
     ab4:	a1 e0       	ldi	r26, 0x01	; 1
     ab6:	b0 e0       	ldi	r27, 0x00	; 0
     ab8:	e0 e6       	ldi	r30, 0x60	; 96
     aba:	f5 e0       	ldi	r31, 0x05	; 5
     abc:	0c 94 dd 11 	jmp	0x23ba	; 0x23ba <__prologue_saves__+0x20>
     ac0:	69 83       	std	Y+1, r22	; 0x01
     ac2:	ae 01       	movw	r20, r28
     ac4:	4f 5f       	subi	r20, 0xFF	; 255
     ac6:	5f 4f       	sbci	r21, 0xFF	; 255
     ac8:	61 e0       	ldi	r22, 0x01	; 1
     aca:	c7 df       	rcall	.-114    	; 0xa5a <mpu6050_writeBytes.part.1>
     acc:	21 96       	adiw	r28, 0x01	; 1
    return mpu6050_writeBytes(regAddr, 1, &data);
}
     ace:	e2 e0       	ldi	r30, 0x02	; 2
     ad0:	0c 94 f9 11 	jmp	0x23f2	; 0x23f2 <__epilogue_restores__+0x20>

00000ad4 <mpu6050_writeBits.part.3>:
}

/*
 * write bit/bits to chip register
 */
void mpu6050_writeBits(uint8_t regAddr, uint8_t bitStart, uint8_t length, uint8_t data) {
     ad4:	a2 e0       	ldi	r26, 0x02	; 2
     ad6:	b0 e0       	ldi	r27, 0x00	; 0
     ad8:	e0 e7       	ldi	r30, 0x70	; 112
     ada:	f5 e0       	ldi	r31, 0x05	; 5
     adc:	0c 94 da 11 	jmp	0x23b4	; 0x23b4 <__prologue_saves__+0x1a>
     ae0:	08 2f       	mov	r16, r24
     ae2:	16 2f       	mov	r17, r22
     ae4:	f4 2e       	mov	r15, r20
    // 00011100 mask byte
    // 10101111 original value (sample)
    // 10100011 original & ~mask
    // 10101011 masked | value
	if(length > 0) {
		uint8_t b = 0;
     ae6:	19 82       	std	Y+1, r1	; 0x01
		if (mpu6050_readByte(regAddr, &b) != 0) { //get current data
     ae8:	be 01       	movw	r22, r28
     aea:	6f 5f       	subi	r22, 0xFF	; 255
     aec:	7f 4f       	sbci	r23, 0xFF	; 255
     aee:	2a 83       	std	Y+2, r18	; 0x02
     af0:	de df       	rcall	.-68     	; 0xaae <mpu6050_readByte>
     af2:	2a 81       	ldd	r18, Y+2	; 0x02
     af4:	88 23       	and	r24, r24
     af6:	01 f1       	breq	.+64     	; 0xb38 <mpu6050_writeBits.part.3+0x64>
     af8:	e1 2f       	mov	r30, r17
			uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
     afa:	f0 e0       	ldi	r31, 0x00	; 0
     afc:	ef 19       	sub	r30, r15
     afe:	f1 09       	sbc	r31, r1
     b00:	31 96       	adiw	r30, 0x01	; 1
     b02:	41 e0       	ldi	r20, 0x01	; 1
     b04:	50 e0       	ldi	r21, 0x00	; 0
     b06:	02 c0       	rjmp	.+4      	; 0xb0c <mpu6050_writeBits.part.3+0x38>
     b08:	44 0f       	add	r20, r20
     b0a:	55 1f       	adc	r21, r21
     b0c:	fa 94       	dec	r15
     b0e:	e2 f7       	brpl	.-8      	; 0xb08 <mpu6050_writeBits.part.3+0x34>
     b10:	41 50       	subi	r20, 0x01	; 1
     b12:	51 09       	sbc	r21, r1
     b14:	0e 2e       	mov	r0, r30
     b16:	01 c0       	rjmp	.+2      	; 0xb1a <mpu6050_writeBits.part.3+0x46>
     b18:	44 0f       	add	r20, r20
     b1a:	0a 94       	dec	r0
     b1c:	ea f7       	brpl	.-6      	; 0xb18 <mpu6050_writeBits.part.3+0x44>
     b1e:	01 c0       	rjmp	.+2      	; 0xb22 <mpu6050_writeBits.part.3+0x4e>
			data <<= (bitStart - length + 1); // shift data into correct position
     b20:	22 0f       	add	r18, r18
     b22:	ea 95       	dec	r30
     b24:	ea f7       	brpl	.-6      	; 0xb20 <mpu6050_writeBits.part.3+0x4c>
     b26:	64 2f       	mov	r22, r20
			data &= mask; // zero all non-important bits in data
			b &= ~(mask); // zero all important bits in existing byte
     b28:	60 95       	com	r22
     b2a:	89 81       	ldd	r24, Y+1	; 0x01
     b2c:	68 23       	and	r22, r24
     b2e:	42 23       	and	r20, r18
	if(length > 0) {
		uint8_t b = 0;
		if (mpu6050_readByte(regAddr, &b) != 0) { //get current data
			uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
			data <<= (bitStart - length + 1); // shift data into correct position
			data &= mask; // zero all non-important bits in data
     b30:	64 2b       	or	r22, r20
			b &= ~(mask); // zero all important bits in existing byte
			b |= data; // combine data with existing byte
     b32:	69 83       	std	Y+1, r22	; 0x01
     b34:	80 2f       	mov	r24, r16
			mpu6050_writeByte(regAddr, b);
     b36:	be df       	rcall	.-132    	; 0xab4 <mpu6050_writeByte>
     b38:	22 96       	adiw	r28, 0x02	; 2
     b3a:	e5 e0       	ldi	r30, 0x05	; 5
		}
	}
}
     b3c:	0c 94 f6 11 	jmp	0x23ec	; 0x23ec <__epilogue_restores__+0x1a>

00000b40 <mpu6050_writeBit>:

/*
 * write one bit to chip register
 */
void mpu6050_writeBit(uint8_t regAddr, uint8_t bitNum, uint8_t data) {
     b40:	a2 e0       	ldi	r26, 0x02	; 2
     b42:	b0 e0       	ldi	r27, 0x00	; 0
     b44:	e6 ea       	ldi	r30, 0xA6	; 166
     b46:	f5 e0       	ldi	r31, 0x05	; 5
     b48:	0c 94 db 11 	jmp	0x23b6	; 0x23b6 <__prologue_saves__+0x1c>
     b4c:	18 2f       	mov	r17, r24
     b4e:	06 2f       	mov	r16, r22
    uint8_t b;
    mpu6050_readByte(regAddr, &b);
     b50:	be 01       	movw	r22, r28
     b52:	6f 5f       	subi	r22, 0xFF	; 255
     b54:	7f 4f       	sbci	r23, 0xFF	; 255
     b56:	4a 83       	std	Y+2, r20	; 0x02
     b58:	aa df       	rcall	.-172    	; 0xaae <mpu6050_readByte>
     b5a:	99 81       	ldd	r25, Y+1	; 0x01
     b5c:	4a 81       	ldd	r20, Y+2	; 0x02
    b = (data != 0) ? (b | (1 << bitNum)) : (b & ~(1 << bitNum));
     b5e:	44 23       	and	r20, r20
     b60:	49 f0       	breq	.+18     	; 0xb74 <mpu6050_writeBit+0x34>
     b62:	61 e0       	ldi	r22, 0x01	; 1
     b64:	70 e0       	ldi	r23, 0x00	; 0
     b66:	00 2e       	mov	r0, r16
     b68:	01 c0       	rjmp	.+2      	; 0xb6c <mpu6050_writeBit+0x2c>
     b6a:	66 0f       	add	r22, r22
     b6c:	0a 94       	dec	r0
     b6e:	ea f7       	brpl	.-6      	; 0xb6a <mpu6050_writeBit+0x2a>
     b70:	69 2b       	or	r22, r25
     b72:	09 c0       	rjmp	.+18     	; 0xb86 <mpu6050_writeBit+0x46>
     b74:	21 e0       	ldi	r18, 0x01	; 1
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	b9 01       	movw	r22, r18
     b7a:	01 c0       	rjmp	.+2      	; 0xb7e <mpu6050_writeBit+0x3e>
     b7c:	66 0f       	add	r22, r22
     b7e:	0a 95       	dec	r16
     b80:	ea f7       	brpl	.-6      	; 0xb7c <mpu6050_writeBit+0x3c>
     b82:	60 95       	com	r22
     b84:	69 23       	and	r22, r25
     b86:	69 83       	std	Y+1, r22	; 0x01
     b88:	81 2f       	mov	r24, r17
    mpu6050_writeByte(regAddr, b);
     b8a:	94 df       	rcall	.-216    	; 0xab4 <mpu6050_writeByte>
     b8c:	22 96       	adiw	r28, 0x02	; 2
     b8e:	e4 e0       	ldi	r30, 0x04	; 4
}
     b90:	0c 94 f7 11 	jmp	0x23ee	; 0x23ee <__epilogue_restores__+0x1c>

00000b94 <mpu6050_setSleepDisabled>:

/*
 * set sleep disabled
 */
void mpu6050_setSleepDisabled() {
	mpu6050_writeBit(MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_SLEEP_BIT, 0);
     b94:	40 e0       	ldi	r20, 0x00	; 0
     b96:	66 e0       	ldi	r22, 0x06	; 6
     b98:	8b e6       	ldi	r24, 0x6B	; 107
     b9a:	d2 cf       	rjmp	.-92     	; 0xb40 <mpu6050_writeBit>

00000b9c <mpu6050_init>:
 * initialize the accel and gyro
 */
void mpu6050_init() {
	#if MPU6050_I2CINIT == 1
	//init i2c
	i2c_init();
     b9c:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <i2c_init>
     ba0:	2a e1       	ldi	r18, 0x1A	; 26
     ba2:	2a 95       	dec	r18
     ba4:	f1 f7       	brne	.-4      	; 0xba2 <mpu6050_init+0x6>
     ba6:	00 c0       	rjmp	.+0      	; 0xba8 <mpu6050_init+0xc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ba8:	8f ef       	ldi	r24, 0xFF	; 255
     baa:	90 e7       	ldi	r25, 0x70	; 112
     bac:	22 e0       	ldi	r18, 0x02	; 2
     bae:	81 50       	subi	r24, 0x01	; 1
     bb0:	90 40       	sbci	r25, 0x00	; 0
     bb2:	20 40       	sbci	r18, 0x00	; 0
     bb4:	e1 f7       	brne	.-8      	; 0xbae <mpu6050_init+0x12>
     bb6:	00 c0       	rjmp	.+0      	; 0xbb8 <mpu6050_init+0x1c>
     bb8:	00 00       	nop

	//allow mpu6050 chip clocks to start up
	_delay_ms(100);

	//set sleep disabled
	mpu6050_setSleepDisabled();
     bba:	ec df       	rcall	.-40     	; 0xb94 <mpu6050_setSleepDisabled>
     bbc:	8f e1       	ldi	r24, 0x1F	; 31
     bbe:	9e e4       	ldi	r25, 0x4E	; 78
     bc0:	01 97       	sbiw	r24, 0x01	; 1
     bc2:	f1 f7       	brne	.-4      	; 0xbc0 <mpu6050_init+0x24>
     bc4:	00 c0       	rjmp	.+0      	; 0xbc6 <mpu6050_init+0x2a>
     bc6:	00 00       	nop
     bc8:	21 e0       	ldi	r18, 0x01	; 1
     bca:	43 e0       	ldi	r20, 0x03	; 3
     bcc:	62 e0       	ldi	r22, 0x02	; 2
     bce:	8b e6       	ldi	r24, 0x6B	; 107
     bd0:	81 df       	rcall	.-254    	; 0xad4 <mpu6050_writeBits.part.3>
     bd2:	23 e0       	ldi	r18, 0x03	; 3
     bd4:	43 e0       	ldi	r20, 0x03	; 3
     bd6:	62 e0       	ldi	r22, 0x02	; 2
     bd8:	8a e1       	ldi	r24, 0x1A	; 26
     bda:	7c df       	rcall	.-264    	; 0xad4 <mpu6050_writeBits.part.3>
     bdc:	64 e0       	ldi	r22, 0x04	; 4
     bde:	89 e1       	ldi	r24, 0x19	; 25
     be0:	69 df       	rcall	.-302    	; 0xab4 <mpu6050_writeByte>
	//  as the clock reference for improved stability
	mpu6050_writeBits(MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_CLKSEL_BIT, MPU6050_PWR1_CLKSEL_LENGTH, MPU6050_CLOCK_PLL_XGYRO);
	//set DLPF bandwidth to 42Hz
	mpu6050_writeBits(MPU6050_RA_CONFIG, MPU6050_CFG_DLPF_CFG_BIT, MPU6050_CFG_DLPF_CFG_LENGTH, MPU6050_DLPF_BW_42);
    //set sampe rate
	mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV, 4); //1khz / (1 + 4) = 200Hz
     be2:	23 e0       	ldi	r18, 0x03	; 3
     be4:	42 e0       	ldi	r20, 0x02	; 2
     be6:	64 e0       	ldi	r22, 0x04	; 4
     be8:	8b e1       	ldi	r24, 0x1B	; 27
     bea:	74 df       	rcall	.-280    	; 0xad4 <mpu6050_writeBits.part.3>
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	42 e0       	ldi	r20, 0x02	; 2
     bf0:	64 e0       	ldi	r22, 0x04	; 4
     bf2:	8c e1       	ldi	r24, 0x1C	; 28
     bf4:	6f cf       	rjmp	.-290    	; 0xad4 <mpu6050_writeBits.part.3>

00000bf6 <mpu6050_getRawData>:

//can not accept many request if we alreay have getattitude requests
/*
 * get raw data
 */
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     bf6:	a0 e0       	ldi	r26, 0x00	; 0
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	e1 e0       	ldi	r30, 0x01	; 1
     bfc:	f6 e0       	ldi	r31, 0x06	; 6
     bfe:	0c 94 d3 11 	jmp	0x23a6	; 0x23a6 <__prologue_saves__+0xc>
     c02:	5c 01       	movw	r10, r24
     c04:	4b 01       	movw	r8, r22
     c06:	6a 01       	movw	r12, r20
     c08:	e9 01       	movw	r28, r18
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14, (uint8_t *)buffer);
     c0a:	4b e8       	ldi	r20, 0x8B	; 139
     c0c:	52 e0       	ldi	r21, 0x02	; 2
     c0e:	6e e0       	ldi	r22, 0x0E	; 14
     c10:	8b e3       	ldi	r24, 0x3B	; 59
     c12:	48 df       	rcall	.-368    	; 0xaa4 <mpu6050_readBytes>
     c14:	eb e8       	ldi	r30, 0x8B	; 139

    *ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     c16:	f2 e0       	ldi	r31, 0x02	; 2
     c18:	20 81       	ld	r18, Z
     c1a:	81 81       	ldd	r24, Z+1	; 0x01
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	92 2b       	or	r25, r18
     c20:	d5 01       	movw	r26, r10
     c22:	8d 93       	st	X+, r24
     c24:	9c 93       	st	X, r25
     c26:	22 81       	ldd	r18, Z+2	; 0x02
    *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     c28:	83 81       	ldd	r24, Z+3	; 0x03
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	92 2b       	or	r25, r18
     c2e:	d4 01       	movw	r26, r8
     c30:	8d 93       	st	X+, r24
     c32:	9c 93       	st	X, r25
     c34:	24 81       	ldd	r18, Z+4	; 0x04
    *az = (((int16_t)buffer[4]) << 8) | buffer[5];
     c36:	85 81       	ldd	r24, Z+5	; 0x05
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	92 2b       	or	r25, r18
     c3c:	d6 01       	movw	r26, r12
     c3e:	8d 93       	st	X+, r24
     c40:	9c 93       	st	X, r25
     c42:	20 85       	ldd	r18, Z+8	; 0x08
    *gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     c44:	81 85       	ldd	r24, Z+9	; 0x09
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	92 2b       	or	r25, r18
     c4a:	99 83       	std	Y+1, r25	; 0x01
     c4c:	88 83       	st	Y, r24
     c4e:	22 85       	ldd	r18, Z+10	; 0x0a
    *gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     c50:	83 85       	ldd	r24, Z+11	; 0x0b
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	92 2b       	or	r25, r18
     c56:	d8 01       	movw	r26, r16
     c58:	8d 93       	st	X+, r24
     c5a:	9c 93       	st	X, r25
     c5c:	24 85       	ldd	r18, Z+12	; 0x0c
    *gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     c5e:	85 85       	ldd	r24, Z+13	; 0x0d
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	92 2b       	or	r25, r18
     c64:	f7 01       	movw	r30, r14
     c66:	91 83       	std	Z+1, r25	; 0x01
     c68:	80 83       	st	Z, r24
     c6a:	cd b7       	in	r28, 0x3d	; 61
}
     c6c:	de b7       	in	r29, 0x3e	; 62
     c6e:	ec e0       	ldi	r30, 0x0C	; 12
     c70:	0c 94 ef 11 	jmp	0x23de	; 0x23de <__epilogue_restores__+0xc>

00000c74 <mpu6050_getConvData>:

/*
 * get raw data converted to g and deg/sec values
 */
void mpu6050_getConvData(double* axg, double* ayg, double* azg, double* gxds, double* gyds, double* gzds) {
     c74:	ac e0       	ldi	r26, 0x0C	; 12
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	e0 e4       	ldi	r30, 0x40	; 64
     c7a:	f6 e0       	ldi	r31, 0x06	; 6
     c7c:	0c 94 cd 11 	jmp	0x239a	; 0x239a <__prologue_saves__>
     c80:	3c 01       	movw	r6, r24
     c82:	4b 01       	movw	r8, r22
     c84:	5a 01       	movw	r10, r20
     c86:	69 01       	movw	r12, r18
     c88:	28 01       	movw	r4, r16
     c8a:	17 01       	movw	r2, r14
	int16_t ax = 0;
     c8c:	1c 86       	std	Y+12, r1	; 0x0c
     c8e:	1b 86       	std	Y+11, r1	; 0x0b
	int16_t ay = 0;
     c90:	1a 86       	std	Y+10, r1	; 0x0a
     c92:	19 86       	std	Y+9, r1	; 0x09
	int16_t az = 0;
     c94:	18 86       	std	Y+8, r1	; 0x08
     c96:	1f 82       	std	Y+7, r1	; 0x07
	int16_t gx = 0;
     c98:	1e 82       	std	Y+6, r1	; 0x06
     c9a:	1d 82       	std	Y+5, r1	; 0x05
	int16_t gy = 0;
     c9c:	1c 82       	std	Y+4, r1	; 0x04
     c9e:	1b 82       	std	Y+3, r1	; 0x03
	int16_t gz = 0;
     ca0:	1a 82       	std	Y+2, r1	; 0x02
     ca2:	19 82       	std	Y+1, r1	; 0x01
	mpu6050_getRawData(&ax, &ay, &az, &gx, &gy, &gz);
     ca4:	ce 01       	movw	r24, r28
     ca6:	01 96       	adiw	r24, 0x01	; 1
     ca8:	7c 01       	movw	r14, r24
     caa:	8e 01       	movw	r16, r28
     cac:	0d 5f       	subi	r16, 0xFD	; 253
     cae:	1f 4f       	sbci	r17, 0xFF	; 255
     cb0:	9e 01       	movw	r18, r28
     cb2:	2b 5f       	subi	r18, 0xFB	; 251
     cb4:	3f 4f       	sbci	r19, 0xFF	; 255
     cb6:	ae 01       	movw	r20, r28
     cb8:	49 5f       	subi	r20, 0xF9	; 249
     cba:	5f 4f       	sbci	r21, 0xFF	; 255
     cbc:	be 01       	movw	r22, r28
     cbe:	67 5f       	subi	r22, 0xF7	; 247
     cc0:	7f 4f       	sbci	r23, 0xFF	; 255
     cc2:	0a 96       	adiw	r24, 0x0a	; 10
     cc4:	98 df       	rcall	.-208    	; 0xbf6 <mpu6050_getRawData>
     cc6:	6b 85       	ldd	r22, Y+11	; 0x0b

	#if MPU6050_CALIBRATEDACCGYRO == 1
    *axg = (double)(ax-MPU6050_AXOFFSET)/MPU6050_AXGAIN;
     cc8:	7c 85       	ldd	r23, Y+12	; 0x0c
     cca:	07 2e       	mov	r0, r23
     ccc:	00 0c       	add	r0, r0
     cce:	88 0b       	sbc	r24, r24
     cd0:	99 0b       	sbc	r25, r25
     cd2:	0e 94 9f 12 	call	0x253e	; 0x253e <__floatsisf>
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	40 e8       	ldi	r20, 0x80	; 128
     cdc:	58 e3       	ldi	r21, 0x38	; 56
     cde:	0e 94 2b 13 	call	0x2656	; 0x2656 <__mulsf3>
     ce2:	f3 01       	movw	r30, r6
     ce4:	60 83       	st	Z, r22
     ce6:	71 83       	std	Z+1, r23	; 0x01
     ce8:	82 83       	std	Z+2, r24	; 0x02
     cea:	93 83       	std	Z+3, r25	; 0x03
     cec:	69 85       	ldd	r22, Y+9	; 0x09
    *ayg = (double)(ay-MPU6050_AYOFFSET)/MPU6050_AYGAIN;
     cee:	7a 85       	ldd	r23, Y+10	; 0x0a
     cf0:	07 2e       	mov	r0, r23
     cf2:	00 0c       	add	r0, r0
     cf4:	88 0b       	sbc	r24, r24
     cf6:	99 0b       	sbc	r25, r25
     cf8:	0e 94 9f 12 	call	0x253e	; 0x253e <__floatsisf>
     cfc:	20 e0       	ldi	r18, 0x00	; 0
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	40 e8       	ldi	r20, 0x80	; 128
     d02:	58 e3       	ldi	r21, 0x38	; 56
     d04:	0e 94 2b 13 	call	0x2656	; 0x2656 <__mulsf3>
     d08:	f4 01       	movw	r30, r8
     d0a:	60 83       	st	Z, r22
     d0c:	71 83       	std	Z+1, r23	; 0x01
     d0e:	82 83       	std	Z+2, r24	; 0x02
     d10:	93 83       	std	Z+3, r25	; 0x03
     d12:	6f 81       	ldd	r22, Y+7	; 0x07
    *azg = (double)(az-MPU6050_AZOFFSET)/MPU6050_AZGAIN;
     d14:	78 85       	ldd	r23, Y+8	; 0x08
     d16:	07 2e       	mov	r0, r23
     d18:	00 0c       	add	r0, r0
     d1a:	88 0b       	sbc	r24, r24
     d1c:	99 0b       	sbc	r25, r25
     d1e:	0e 94 9f 12 	call	0x253e	; 0x253e <__floatsisf>
     d22:	20 e0       	ldi	r18, 0x00	; 0
     d24:	30 e0       	ldi	r19, 0x00	; 0
     d26:	40 e8       	ldi	r20, 0x80	; 128
     d28:	58 e3       	ldi	r21, 0x38	; 56
     d2a:	0e 94 2b 13 	call	0x2656	; 0x2656 <__mulsf3>
     d2e:	f5 01       	movw	r30, r10
     d30:	60 83       	st	Z, r22
     d32:	71 83       	std	Z+1, r23	; 0x01
     d34:	82 83       	std	Z+2, r24	; 0x02
     d36:	93 83       	std	Z+3, r25	; 0x03
     d38:	6d 81       	ldd	r22, Y+5	; 0x05
    *gxds = (double)(gx-MPU6050_GXOFFSET)/MPU6050_GXGAIN;
     d3a:	7e 81       	ldd	r23, Y+6	; 0x06
     d3c:	66 5d       	subi	r22, 0xD6	; 214
     d3e:	7f 4f       	sbci	r23, 0xFF	; 255
     d40:	07 2e       	mov	r0, r23
     d42:	00 0c       	add	r0, r0
     d44:	88 0b       	sbc	r24, r24
     d46:	99 0b       	sbc	r25, r25
     d48:	0e 94 9f 12 	call	0x253e	; 0x253e <__floatsisf>
     d4c:	23 e3       	ldi	r18, 0x33	; 51
     d4e:	33 e3       	ldi	r19, 0x33	; 51
     d50:	43 e8       	ldi	r20, 0x83	; 131
     d52:	51 e4       	ldi	r21, 0x41	; 65
     d54:	0e 94 04 12 	call	0x2408	; 0x2408 <__divsf3>
     d58:	f6 01       	movw	r30, r12
     d5a:	60 83       	st	Z, r22
     d5c:	71 83       	std	Z+1, r23	; 0x01
     d5e:	82 83       	std	Z+2, r24	; 0x02
     d60:	93 83       	std	Z+3, r25	; 0x03
     d62:	6b 81       	ldd	r22, Y+3	; 0x03
	*gyds = (double)(gy-MPU6050_GYOFFSET)/MPU6050_GYGAIN;
     d64:	7c 81       	ldd	r23, Y+4	; 0x04
     d66:	69 50       	subi	r22, 0x09	; 9
     d68:	71 09       	sbc	r23, r1
     d6a:	07 2e       	mov	r0, r23
     d6c:	00 0c       	add	r0, r0
     d6e:	88 0b       	sbc	r24, r24
     d70:	99 0b       	sbc	r25, r25
     d72:	0e 94 9f 12 	call	0x253e	; 0x253e <__floatsisf>
     d76:	23 e3       	ldi	r18, 0x33	; 51
     d78:	33 e3       	ldi	r19, 0x33	; 51
     d7a:	43 e8       	ldi	r20, 0x83	; 131
     d7c:	51 e4       	ldi	r21, 0x41	; 65
     d7e:	0e 94 04 12 	call	0x2408	; 0x2408 <__divsf3>
     d82:	f2 01       	movw	r30, r4
     d84:	60 83       	st	Z, r22
     d86:	71 83       	std	Z+1, r23	; 0x01
     d88:	82 83       	std	Z+2, r24	; 0x02
     d8a:	93 83       	std	Z+3, r25	; 0x03
     d8c:	69 81       	ldd	r22, Y+1	; 0x01
	*gzds = (double)(gz-MPU6050_GZOFFSET)/MPU6050_GZGAIN;
     d8e:	7a 81       	ldd	r23, Y+2	; 0x02
     d90:	63 5e       	subi	r22, 0xE3	; 227
     d92:	7f 4f       	sbci	r23, 0xFF	; 255
     d94:	07 2e       	mov	r0, r23
     d96:	00 0c       	add	r0, r0
     d98:	88 0b       	sbc	r24, r24
     d9a:	99 0b       	sbc	r25, r25
     d9c:	0e 94 9f 12 	call	0x253e	; 0x253e <__floatsisf>
     da0:	23 e3       	ldi	r18, 0x33	; 51
     da2:	33 e3       	ldi	r19, 0x33	; 51
     da4:	43 e8       	ldi	r20, 0x83	; 131
     da6:	51 e4       	ldi	r21, 0x41	; 65
     da8:	0e 94 04 12 	call	0x2408	; 0x2408 <__divsf3>
     dac:	f1 01       	movw	r30, r2
     dae:	60 83       	st	Z, r22
     db0:	71 83       	std	Z+1, r23	; 0x01
     db2:	82 83       	std	Z+2, r24	; 0x02
     db4:	93 83       	std	Z+3, r25	; 0x03
     db6:	2c 96       	adiw	r28, 0x0c	; 12
    *azg = (double)(az)/MPU6050_AGAIN;
    *gxds = (double)(gx)/MPU6050_GGAIN;
	*gyds = (double)(gy)/MPU6050_GGAIN;
	*gzds = (double)(gz)/MPU6050_GGAIN;
	#endif
}
     db8:	e2 e1       	ldi	r30, 0x12	; 18
     dba:	0c 94 e9 11 	jmp	0x23d2	; 0x23d2 <__epilogue_restores__>

00000dbe <u8g_DrawHBitmapP>:
     dbe:	a0 e0       	ldi	r26, 0x00	; 0
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	e5 ee       	ldi	r30, 0xE5	; 229
     dc4:	f6 e0       	ldi	r31, 0x06	; 6
     dc6:	0c 94 d6 11 	jmp	0x23ac	; 0x23ac <__prologue_saves__+0x12>
     dca:	6c 01       	movw	r12, r24
     dcc:	e6 2e       	mov	r14, r22
     dce:	b4 2e       	mov	r11, r20
     dd0:	f2 2e       	mov	r15, r18
     dd2:	e8 01       	movw	r28, r16
     dd4:	0b c0       	rjmp	.+22     	; 0xdec <u8g_DrawHBitmapP+0x2e>
     dd6:	fe 01       	movw	r30, r28
     dd8:	04 91       	lpm	r16, Z
     dda:	c6 01       	movw	r24, r12
     ddc:	6e 2d       	mov	r22, r14
     dde:	4b 2d       	mov	r20, r11
     de0:	20 e0       	ldi	r18, 0x00	; 0
     de2:	a7 d5       	rcall	.+2894   	; 0x1932 <u8g_Draw8Pixel>
     de4:	21 96       	adiw	r28, 0x01	; 1
     de6:	fa 94       	dec	r15
     de8:	f8 e0       	ldi	r31, 0x08	; 8
     dea:	ef 0e       	add	r14, r31
     dec:	ff 20       	and	r15, r15
     dee:	99 f7       	brne	.-26     	; 0xdd6 <u8g_DrawHBitmapP+0x18>
     df0:	cd b7       	in	r28, 0x3d	; 61
     df2:	de b7       	in	r29, 0x3e	; 62
     df4:	e9 e0       	ldi	r30, 0x09	; 9
     df6:	0c 94 f2 11 	jmp	0x23e4	; 0x23e4 <__epilogue_restores__+0x12>

00000dfa <u8g_DrawBitmapP>:
     dfa:	a0 e0       	ldi	r26, 0x00	; 0
     dfc:	b0 e0       	ldi	r27, 0x00	; 0
     dfe:	e3 e0       	ldi	r30, 0x03	; 3
     e00:	f7 e0       	ldi	r31, 0x07	; 7
     e02:	0c 94 d3 11 	jmp	0x23a6	; 0x23a6 <__prologue_saves__+0xc>
     e06:	5c 01       	movw	r10, r24
     e08:	86 2e       	mov	r8, r22
     e0a:	c4 2e       	mov	r12, r20
     e0c:	92 2e       	mov	r9, r18
     e0e:	d0 2e       	mov	r13, r16
     e10:	c2 2f       	mov	r28, r18
     e12:	d0 e0       	ldi	r29, 0x00	; 0
     e14:	9e 01       	movw	r18, r28
     e16:	83 e0       	ldi	r24, 0x03	; 3
     e18:	22 0f       	add	r18, r18
     e1a:	33 1f       	adc	r19, r19
     e1c:	8a 95       	dec	r24
     e1e:	e1 f7       	brne	.-8      	; 0xe18 <u8g_DrawBitmapP+0x1e>
     e20:	c5 01       	movw	r24, r10
     e22:	58 d1       	rcall	.+688    	; 0x10d4 <u8g_IsBBXIntersection>
     e24:	88 23       	and	r24, r24
     e26:	59 f4       	brne	.+22     	; 0xe3e <u8g_DrawBitmapP+0x44>
     e28:	0c c0       	rjmp	.+24     	; 0xe42 <u8g_DrawBitmapP+0x48>
     e2a:	c5 01       	movw	r24, r10
     e2c:	68 2d       	mov	r22, r8
     e2e:	4c 2d       	mov	r20, r12
     e30:	29 2d       	mov	r18, r9
     e32:	87 01       	movw	r16, r14
     e34:	c4 df       	rcall	.-120    	; 0xdbe <u8g_DrawHBitmapP>
     e36:	ec 0e       	add	r14, r28
     e38:	fd 1e       	adc	r15, r29
     e3a:	c3 94       	inc	r12
     e3c:	da 94       	dec	r13
     e3e:	dd 20       	and	r13, r13
     e40:	a1 f7       	brne	.-24     	; 0xe2a <u8g_DrawBitmapP+0x30>
     e42:	cd b7       	in	r28, 0x3d	; 61
     e44:	de b7       	in	r29, 0x3e	; 62
     e46:	ec e0       	ldi	r30, 0x0C	; 12
     e48:	0c 94 ef 11 	jmp	0x23de	; 0x23de <__epilogue_restores__+0xc>

00000e4c <u8g_draw_disc_section>:
     e4c:	a0 e0       	ldi	r26, 0x00	; 0
     e4e:	b0 e0       	ldi	r27, 0x00	; 0
     e50:	ec e2       	ldi	r30, 0x2C	; 44
     e52:	f7 e0       	ldi	r31, 0x07	; 7
     e54:	0c 94 d8 11 	jmp	0x23b0	; 0x23b0 <__prologue_saves__+0x16>
     e58:	ec 01       	movw	r28, r24
     e5a:	16 2f       	mov	r17, r22
     e5c:	f4 2e       	mov	r15, r20
     e5e:	d2 2e       	mov	r13, r18
     e60:	e0 fe       	sbrs	r14, 0
     e62:	10 c0       	rjmp	.+32     	; 0xe84 <u8g_draw_disc_section+0x38>
     e64:	62 2f       	mov	r22, r18
     e66:	61 0f       	add	r22, r17
     e68:	40 2f       	mov	r20, r16
     e6a:	4f 19       	sub	r20, r15
     e6c:	2f 2d       	mov	r18, r15
     e6e:	2f 5f       	subi	r18, 0xFF	; 255
     e70:	ce 01       	movw	r24, r28
     e72:	9a d6       	rcall	.+3380   	; 0x1ba8 <u8g_DrawVLine>
     e74:	6d 2d       	mov	r22, r13
     e76:	6f 0d       	add	r22, r15
     e78:	40 2f       	mov	r20, r16
     e7a:	41 1b       	sub	r20, r17
     e7c:	21 2f       	mov	r18, r17
     e7e:	2f 5f       	subi	r18, 0xFF	; 255
     e80:	ce 01       	movw	r24, r28
     e82:	92 d6       	rcall	.+3364   	; 0x1ba8 <u8g_DrawVLine>
     e84:	e1 fe       	sbrs	r14, 1
     e86:	10 c0       	rjmp	.+32     	; 0xea8 <u8g_draw_disc_section+0x5c>
     e88:	6d 2d       	mov	r22, r13
     e8a:	61 1b       	sub	r22, r17
     e8c:	40 2f       	mov	r20, r16
     e8e:	4f 19       	sub	r20, r15
     e90:	2f 2d       	mov	r18, r15
     e92:	2f 5f       	subi	r18, 0xFF	; 255
     e94:	ce 01       	movw	r24, r28
     e96:	88 d6       	rcall	.+3344   	; 0x1ba8 <u8g_DrawVLine>
     e98:	6d 2d       	mov	r22, r13
     e9a:	6f 19       	sub	r22, r15
     e9c:	40 2f       	mov	r20, r16
     e9e:	41 1b       	sub	r20, r17
     ea0:	21 2f       	mov	r18, r17
     ea2:	2f 5f       	subi	r18, 0xFF	; 255
     ea4:	ce 01       	movw	r24, r28
     ea6:	80 d6       	rcall	.+3328   	; 0x1ba8 <u8g_DrawVLine>
     ea8:	e3 fe       	sbrs	r14, 3
     eaa:	0e c0       	rjmp	.+28     	; 0xec8 <u8g_draw_disc_section+0x7c>
     eac:	6d 2d       	mov	r22, r13
     eae:	61 0f       	add	r22, r17
     eb0:	2f 2d       	mov	r18, r15
     eb2:	2f 5f       	subi	r18, 0xFF	; 255
     eb4:	ce 01       	movw	r24, r28
     eb6:	40 2f       	mov	r20, r16
     eb8:	77 d6       	rcall	.+3310   	; 0x1ba8 <u8g_DrawVLine>
     eba:	6d 2d       	mov	r22, r13
     ebc:	6f 0d       	add	r22, r15
     ebe:	21 2f       	mov	r18, r17
     ec0:	2f 5f       	subi	r18, 0xFF	; 255
     ec2:	ce 01       	movw	r24, r28
     ec4:	40 2f       	mov	r20, r16
     ec6:	70 d6       	rcall	.+3296   	; 0x1ba8 <u8g_DrawVLine>
     ec8:	e2 fe       	sbrs	r14, 2
     eca:	0e c0       	rjmp	.+28     	; 0xee8 <u8g_draw_disc_section+0x9c>
     ecc:	6d 2d       	mov	r22, r13
     ece:	61 1b       	sub	r22, r17
     ed0:	2f 2d       	mov	r18, r15
     ed2:	2f 5f       	subi	r18, 0xFF	; 255
     ed4:	ce 01       	movw	r24, r28
     ed6:	40 2f       	mov	r20, r16
     ed8:	67 d6       	rcall	.+3278   	; 0x1ba8 <u8g_DrawVLine>
     eda:	df 18       	sub	r13, r15
     edc:	1f 5f       	subi	r17, 0xFF	; 255
     ede:	ce 01       	movw	r24, r28
     ee0:	6d 2d       	mov	r22, r13
     ee2:	40 2f       	mov	r20, r16
     ee4:	21 2f       	mov	r18, r17
     ee6:	60 d6       	rcall	.+3264   	; 0x1ba8 <u8g_DrawVLine>
     ee8:	cd b7       	in	r28, 0x3d	; 61
     eea:	de b7       	in	r29, 0x3e	; 62
     eec:	e7 e0       	ldi	r30, 0x07	; 7
     eee:	0c 94 f4 11 	jmp	0x23e8	; 0x23e8 <__epilogue_restores__+0x16>

00000ef2 <u8g_draw_disc>:
     ef2:	a1 e0       	ldi	r26, 0x01	; 1
     ef4:	b0 e0       	ldi	r27, 0x00	; 0
     ef6:	ef e7       	ldi	r30, 0x7F	; 127
     ef8:	f7 e0       	ldi	r31, 0x07	; 7
     efa:	0c 94 d1 11 	jmp	0x23a2	; 0x23a2 <__prologue_saves__+0x8>
     efe:	3c 01       	movw	r6, r24
     f00:	86 2e       	mov	r8, r22
     f02:	94 2e       	mov	r9, r20
     f04:	29 83       	std	Y+1, r18	; 0x01
     f06:	a0 2e       	mov	r10, r16
     f08:	11 e0       	ldi	r17, 0x01	; 1
     f0a:	12 1b       	sub	r17, r18
     f0c:	b2 2e       	mov	r11, r18
     f0e:	b1 94       	neg	r11
     f10:	bb 0c       	add	r11, r11
     f12:	60 e0       	ldi	r22, 0x00	; 0
     f14:	42 2f       	mov	r20, r18
     f16:	28 2d       	mov	r18, r8
     f18:	09 2d       	mov	r16, r9
     f1a:	ea 2c       	mov	r14, r10
     f1c:	97 df       	rcall	.-210    	; 0xe4c <u8g_draw_disc_section>
     f1e:	d9 80       	ldd	r13, Y+1	; 0x01
     f20:	ff 24       	eor	r15, r15
     f22:	83 e0       	ldi	r24, 0x03	; 3
     f24:	c8 2e       	mov	r12, r24
     f26:	11 c0       	rjmp	.+34     	; 0xf4a <u8g_draw_disc+0x58>
     f28:	17 fd       	sbrc	r17, 7
     f2a:	04 c0       	rjmp	.+8      	; 0xf34 <u8g_draw_disc+0x42>
     f2c:	da 94       	dec	r13
     f2e:	82 e0       	ldi	r24, 0x02	; 2
     f30:	b8 0e       	add	r11, r24
     f32:	1b 0d       	add	r17, r11
     f34:	f3 94       	inc	r15
     f36:	1c 0d       	add	r17, r12
     f38:	c3 01       	movw	r24, r6
     f3a:	6f 2d       	mov	r22, r15
     f3c:	4d 2d       	mov	r20, r13
     f3e:	28 2d       	mov	r18, r8
     f40:	09 2d       	mov	r16, r9
     f42:	ea 2c       	mov	r14, r10
     f44:	83 df       	rcall	.-250    	; 0xe4c <u8g_draw_disc_section>
     f46:	e2 e0       	ldi	r30, 0x02	; 2
     f48:	ce 0e       	add	r12, r30
     f4a:	fd 14       	cp	r15, r13
     f4c:	68 f3       	brcs	.-38     	; 0xf28 <u8g_draw_disc+0x36>
     f4e:	21 96       	adiw	r28, 0x01	; 1
     f50:	ee e0       	ldi	r30, 0x0E	; 14
     f52:	0c 94 ed 11 	jmp	0x23da	; 0x23da <__epilogue_restores__+0x8>

00000f56 <u8g_DrawDisc>:
     f56:	a0 e0       	ldi	r26, 0x00	; 0
     f58:	b0 e0       	ldi	r27, 0x00	; 0
     f5a:	e1 eb       	ldi	r30, 0xB1	; 177
     f5c:	f7 e0       	ldi	r31, 0x07	; 7
     f5e:	0c 94 d7 11 	jmp	0x23ae	; 0x23ae <__prologue_saves__+0x14>
     f62:	ec 01       	movw	r28, r24
     f64:	f6 2e       	mov	r15, r22
     f66:	e4 2e       	mov	r14, r20
     f68:	d2 2e       	mov	r13, r18
     f6a:	c0 2e       	mov	r12, r16
     f6c:	82 2f       	mov	r24, r18
     f6e:	8f 5f       	subi	r24, 0xFF	; 255
     f70:	08 2f       	mov	r16, r24
     f72:	10 e0       	ldi	r17, 0x00	; 0
     f74:	00 0f       	add	r16, r16
     f76:	11 1f       	adc	r17, r17
     f78:	68 1b       	sub	r22, r24
     f7a:	48 1b       	sub	r20, r24
     f7c:	ce 01       	movw	r24, r28
     f7e:	20 2f       	mov	r18, r16
     f80:	a9 d0       	rcall	.+338    	; 0x10d4 <u8g_IsBBXIntersection>
     f82:	88 23       	and	r24, r24
     f84:	31 f0       	breq	.+12     	; 0xf92 <u8g_DrawDisc+0x3c>
     f86:	ce 01       	movw	r24, r28
     f88:	6f 2d       	mov	r22, r15
     f8a:	4e 2d       	mov	r20, r14
     f8c:	2d 2d       	mov	r18, r13
     f8e:	0c 2d       	mov	r16, r12
     f90:	b0 df       	rcall	.-160    	; 0xef2 <u8g_draw_disc>
     f92:	cd b7       	in	r28, 0x3d	; 61
     f94:	de b7       	in	r29, 0x3e	; 62
     f96:	e8 e0       	ldi	r30, 0x08	; 8
     f98:	0c 94 f3 11 	jmp	0x23e6	; 0x23e6 <__epilogue_restores__+0x14>

00000f9c <u8g_draw_circle_section>:
     f9c:	a0 e0       	ldi	r26, 0x00	; 0
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e4 ed       	ldi	r30, 0xD4	; 212
     fa2:	f7 e0       	ldi	r31, 0x07	; 7
     fa4:	0c 94 d8 11 	jmp	0x23b0	; 0x23b0 <__prologue_saves__+0x16>
     fa8:	ec 01       	movw	r28, r24
     faa:	d6 2e       	mov	r13, r22
     fac:	f4 2e       	mov	r15, r20
     fae:	12 2f       	mov	r17, r18
     fb0:	e0 fe       	sbrs	r14, 0
     fb2:	0c c0       	rjmp	.+24     	; 0xfcc <u8g_draw_circle_section+0x30>
     fb4:	62 2f       	mov	r22, r18
     fb6:	6d 0d       	add	r22, r13
     fb8:	40 2f       	mov	r20, r16
     fba:	4f 19       	sub	r20, r15
     fbc:	ce 01       	movw	r24, r28
     fbe:	b1 d4       	rcall	.+2402   	; 0x1922 <u8g_DrawPixel>
     fc0:	61 2f       	mov	r22, r17
     fc2:	6f 0d       	add	r22, r15
     fc4:	40 2f       	mov	r20, r16
     fc6:	4d 19       	sub	r20, r13
     fc8:	ce 01       	movw	r24, r28
     fca:	ab d4       	rcall	.+2390   	; 0x1922 <u8g_DrawPixel>
     fcc:	e1 fe       	sbrs	r14, 1
     fce:	0c c0       	rjmp	.+24     	; 0xfe8 <u8g_draw_circle_section+0x4c>
     fd0:	61 2f       	mov	r22, r17
     fd2:	6d 19       	sub	r22, r13
     fd4:	40 2f       	mov	r20, r16
     fd6:	4f 19       	sub	r20, r15
     fd8:	ce 01       	movw	r24, r28
     fda:	a3 d4       	rcall	.+2374   	; 0x1922 <u8g_DrawPixel>
     fdc:	61 2f       	mov	r22, r17
     fde:	6f 19       	sub	r22, r15
     fe0:	40 2f       	mov	r20, r16
     fe2:	4d 19       	sub	r20, r13
     fe4:	ce 01       	movw	r24, r28
     fe6:	9d d4       	rcall	.+2362   	; 0x1922 <u8g_DrawPixel>
     fe8:	e3 fe       	sbrs	r14, 3
     fea:	0c c0       	rjmp	.+24     	; 0x1004 <u8g_draw_circle_section+0x68>
     fec:	61 2f       	mov	r22, r17
     fee:	6d 0d       	add	r22, r13
     ff0:	40 2f       	mov	r20, r16
     ff2:	4f 0d       	add	r20, r15
     ff4:	ce 01       	movw	r24, r28
     ff6:	95 d4       	rcall	.+2346   	; 0x1922 <u8g_DrawPixel>
     ff8:	61 2f       	mov	r22, r17
     ffa:	6f 0d       	add	r22, r15
     ffc:	40 2f       	mov	r20, r16
     ffe:	4d 0d       	add	r20, r13
    1000:	ce 01       	movw	r24, r28
    1002:	8f d4       	rcall	.+2334   	; 0x1922 <u8g_DrawPixel>
    1004:	e2 fe       	sbrs	r14, 2
    1006:	0c c0       	rjmp	.+24     	; 0x1020 <u8g_draw_circle_section+0x84>
    1008:	61 2f       	mov	r22, r17
    100a:	6d 19       	sub	r22, r13
    100c:	40 2f       	mov	r20, r16
    100e:	4f 0d       	add	r20, r15
    1010:	ce 01       	movw	r24, r28
    1012:	87 d4       	rcall	.+2318   	; 0x1922 <u8g_DrawPixel>
    1014:	1f 19       	sub	r17, r15
    1016:	0d 0d       	add	r16, r13
    1018:	ce 01       	movw	r24, r28
    101a:	61 2f       	mov	r22, r17
    101c:	40 2f       	mov	r20, r16
    101e:	81 d4       	rcall	.+2306   	; 0x1922 <u8g_DrawPixel>
    1020:	cd b7       	in	r28, 0x3d	; 61
    1022:	de b7       	in	r29, 0x3e	; 62
    1024:	e7 e0       	ldi	r30, 0x07	; 7
    1026:	0c 94 f4 11 	jmp	0x23e8	; 0x23e8 <__epilogue_restores__+0x16>

0000102a <u8g_draw_circle>:
    102a:	a1 e0       	ldi	r26, 0x01	; 1
    102c:	b0 e0       	ldi	r27, 0x00	; 0
    102e:	eb e1       	ldi	r30, 0x1B	; 27
    1030:	f8 e0       	ldi	r31, 0x08	; 8
    1032:	0c 94 d1 11 	jmp	0x23a2	; 0x23a2 <__prologue_saves__+0x8>
    1036:	3c 01       	movw	r6, r24
    1038:	86 2e       	mov	r8, r22
    103a:	94 2e       	mov	r9, r20
    103c:	29 83       	std	Y+1, r18	; 0x01
    103e:	a0 2e       	mov	r10, r16
    1040:	11 e0       	ldi	r17, 0x01	; 1
    1042:	12 1b       	sub	r17, r18
    1044:	b2 2e       	mov	r11, r18
    1046:	b1 94       	neg	r11
    1048:	bb 0c       	add	r11, r11
    104a:	60 e0       	ldi	r22, 0x00	; 0
    104c:	42 2f       	mov	r20, r18
    104e:	28 2d       	mov	r18, r8
    1050:	09 2d       	mov	r16, r9
    1052:	ea 2c       	mov	r14, r10
    1054:	a3 df       	rcall	.-186    	; 0xf9c <u8g_draw_circle_section>
    1056:	d9 80       	ldd	r13, Y+1	; 0x01
    1058:	ff 24       	eor	r15, r15
    105a:	23 e0       	ldi	r18, 0x03	; 3
    105c:	c2 2e       	mov	r12, r18
    105e:	11 c0       	rjmp	.+34     	; 0x1082 <u8g_draw_circle+0x58>
    1060:	17 fd       	sbrc	r17, 7
    1062:	04 c0       	rjmp	.+8      	; 0x106c <u8g_draw_circle+0x42>
    1064:	da 94       	dec	r13
    1066:	82 e0       	ldi	r24, 0x02	; 2
    1068:	b8 0e       	add	r11, r24
    106a:	1b 0d       	add	r17, r11
    106c:	f3 94       	inc	r15
    106e:	1c 0d       	add	r17, r12
    1070:	c3 01       	movw	r24, r6
    1072:	6f 2d       	mov	r22, r15
    1074:	4d 2d       	mov	r20, r13
    1076:	28 2d       	mov	r18, r8
    1078:	09 2d       	mov	r16, r9
    107a:	ea 2c       	mov	r14, r10
    107c:	8f df       	rcall	.-226    	; 0xf9c <u8g_draw_circle_section>
    107e:	e2 e0       	ldi	r30, 0x02	; 2
    1080:	ce 0e       	add	r12, r30
    1082:	fd 14       	cp	r15, r13
    1084:	68 f3       	brcs	.-38     	; 0x1060 <u8g_draw_circle+0x36>
    1086:	21 96       	adiw	r28, 0x01	; 1
    1088:	ee e0       	ldi	r30, 0x0E	; 14
    108a:	0c 94 ed 11 	jmp	0x23da	; 0x23da <__epilogue_restores__+0x8>

0000108e <u8g_DrawCircle>:
    108e:	a0 e0       	ldi	r26, 0x00	; 0
    1090:	b0 e0       	ldi	r27, 0x00	; 0
    1092:	ed e4       	ldi	r30, 0x4D	; 77
    1094:	f8 e0       	ldi	r31, 0x08	; 8
    1096:	0c 94 d7 11 	jmp	0x23ae	; 0x23ae <__prologue_saves__+0x14>
    109a:	ec 01       	movw	r28, r24
    109c:	f6 2e       	mov	r15, r22
    109e:	e4 2e       	mov	r14, r20
    10a0:	d2 2e       	mov	r13, r18
    10a2:	c0 2e       	mov	r12, r16
    10a4:	82 2f       	mov	r24, r18
    10a6:	8f 5f       	subi	r24, 0xFF	; 255
    10a8:	08 2f       	mov	r16, r24
    10aa:	10 e0       	ldi	r17, 0x00	; 0
    10ac:	00 0f       	add	r16, r16
    10ae:	11 1f       	adc	r17, r17
    10b0:	68 1b       	sub	r22, r24
    10b2:	48 1b       	sub	r20, r24
    10b4:	ce 01       	movw	r24, r28
    10b6:	20 2f       	mov	r18, r16
    10b8:	0d d0       	rcall	.+26     	; 0x10d4 <u8g_IsBBXIntersection>
    10ba:	88 23       	and	r24, r24
    10bc:	31 f0       	breq	.+12     	; 0x10ca <u8g_DrawCircle+0x3c>
    10be:	ce 01       	movw	r24, r28
    10c0:	6f 2d       	mov	r22, r15
    10c2:	4e 2d       	mov	r20, r14
    10c4:	2d 2d       	mov	r18, r13
    10c6:	0c 2d       	mov	r16, r12
    10c8:	b0 df       	rcall	.-160    	; 0x102a <u8g_draw_circle>
    10ca:	cd b7       	in	r28, 0x3d	; 61
    10cc:	de b7       	in	r29, 0x3e	; 62
    10ce:	e8 e0       	ldi	r30, 0x08	; 8
    10d0:	0c 94 f3 11 	jmp	0x23e6	; 0x23e6 <__epilogue_restores__+0x14>

000010d4 <u8g_IsBBXIntersection>:
    10d4:	0f 93       	push	r16
    10d6:	fc 01       	movw	r30, r24
    10d8:	41 50       	subi	r20, 0x01	; 1
    10da:	04 0f       	add	r16, r20
    10dc:	4f 5f       	subi	r20, 0xFF	; 255
    10de:	94 a9       	ldd	r25, Z+52	; 0x34
    10e0:	86 a9       	ldd	r24, Z+54	; 0x36
    10e2:	84 17       	cp	r24, r20
    10e4:	18 f0       	brcs	.+6      	; 0x10ec <u8g_IsBBXIntersection+0x18>
    10e6:	09 17       	cp	r16, r25
    10e8:	28 f4       	brcc	.+10     	; 0x10f4 <u8g_IsBBXIntersection+0x20>
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <u8g_IsBBXIntersection+0x1c>
    10ec:	09 17       	cp	r16, r25
    10ee:	98 f0       	brcs	.+38     	; 0x1116 <u8g_IsBBXIntersection+0x42>
    10f0:	04 17       	cp	r16, r20
    10f2:	88 f4       	brcc	.+34     	; 0x1116 <u8g_IsBBXIntersection+0x42>
    10f4:	61 50       	subi	r22, 0x01	; 1
    10f6:	26 0f       	add	r18, r22
    10f8:	6f 5f       	subi	r22, 0xFF	; 255
    10fa:	93 a9       	ldd	r25, Z+51	; 0x33
    10fc:	85 a9       	ldd	r24, Z+53	; 0x35
    10fe:	86 17       	cp	r24, r22
    1100:	18 f0       	brcs	.+6      	; 0x1108 <u8g_IsBBXIntersection+0x34>
    1102:	29 17       	cp	r18, r25
    1104:	18 f0       	brcs	.+6      	; 0x110c <u8g_IsBBXIntersection+0x38>
    1106:	05 c0       	rjmp	.+10     	; 0x1112 <u8g_IsBBXIntersection+0x3e>
    1108:	29 17       	cp	r18, r25
    110a:	28 f0       	brcs	.+10     	; 0x1116 <u8g_IsBBXIntersection+0x42>
    110c:	80 e0       	ldi	r24, 0x00	; 0
    110e:	26 17       	cp	r18, r22
    1110:	18 f4       	brcc	.+6      	; 0x1118 <u8g_IsBBXIntersection+0x44>
    1112:	81 e0       	ldi	r24, 0x01	; 1
    1114:	01 c0       	rjmp	.+2      	; 0x1118 <u8g_IsBBXIntersection+0x44>
    1116:	80 e0       	ldi	r24, 0x00	; 0
    1118:	0f 91       	pop	r16
    111a:	08 95       	ret

0000111c <u8g_Pin>:
    111c:	88 0f       	add	r24, r24
    111e:	88 0f       	add	r24, r24
    1120:	88 0f       	add	r24, r24
    1122:	86 0f       	add	r24, r22
    1124:	08 95       	ret

00001126 <u8g_SetPinLevel>:
    1126:	a2 e0       	ldi	r26, 0x02	; 2
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	e9 e9       	ldi	r30, 0x99	; 153
    112c:	f8 e0       	ldi	r31, 0x08	; 8
    112e:	0c 94 db 11 	jmp	0x23b6	; 0x23b6 <__prologue_saves__+0x1c>
    1132:	18 2f       	mov	r17, r24
    1134:	06 2f       	mov	r16, r22
    1136:	68 2f       	mov	r22, r24
    1138:	66 95       	lsr	r22
    113a:	66 95       	lsr	r22
    113c:	66 95       	lsr	r22
    113e:	70 e0       	ldi	r23, 0x00	; 0
    1140:	66 0f       	add	r22, r22
    1142:	77 1f       	adc	r23, r23
    1144:	6c 5f       	subi	r22, 0xFC	; 252
    1146:	7e 4f       	sbci	r23, 0xFE	; 254
    1148:	ce 01       	movw	r24, r28
    114a:	01 96       	adiw	r24, 0x01	; 1
    114c:	42 e0       	ldi	r20, 0x02	; 2
    114e:	50 e0       	ldi	r21, 0x00	; 0
    1150:	0e 94 8e 13 	call	0x271c	; 0x271c <memcpy_P>
    1154:	e9 81       	ldd	r30, Y+1	; 0x01
    1156:	fa 81       	ldd	r31, Y+2	; 0x02
    1158:	41 2f       	mov	r20, r17
    115a:	50 e0       	ldi	r21, 0x00	; 0
    115c:	00 23       	and	r16, r16
    115e:	81 f4       	brne	.+32     	; 0x1180 <u8g_SetPinLevel+0x5a>
    1160:	3f b7       	in	r19, 0x3f	; 63
    1162:	f8 94       	cli
    1164:	20 81       	ld	r18, Z
    1166:	47 70       	andi	r20, 0x07	; 7
    1168:	50 70       	andi	r21, 0x00	; 0
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <u8g_SetPinLevel+0x4e>
    1170:	88 0f       	add	r24, r24
    1172:	99 1f       	adc	r25, r25
    1174:	4a 95       	dec	r20
    1176:	e2 f7       	brpl	.-8      	; 0x1170 <u8g_SetPinLevel+0x4a>
    1178:	80 95       	com	r24
    117a:	82 23       	and	r24, r18
    117c:	80 83       	st	Z, r24
    117e:	0e c0       	rjmp	.+28     	; 0x119c <u8g_SetPinLevel+0x76>
    1180:	3f b7       	in	r19, 0x3f	; 63
    1182:	f8 94       	cli
    1184:	20 81       	ld	r18, Z
    1186:	47 70       	andi	r20, 0x07	; 7
    1188:	50 70       	andi	r21, 0x00	; 0
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <u8g_SetPinLevel+0x6e>
    1190:	88 0f       	add	r24, r24
    1192:	99 1f       	adc	r25, r25
    1194:	4a 95       	dec	r20
    1196:	e2 f7       	brpl	.-8      	; 0x1190 <u8g_SetPinLevel+0x6a>
    1198:	28 2b       	or	r18, r24
    119a:	20 83       	st	Z, r18
    119c:	3f bf       	out	0x3f, r19	; 63
    119e:	22 96       	adiw	r28, 0x02	; 2
    11a0:	e4 e0       	ldi	r30, 0x04	; 4
    11a2:	0c 94 f7 11 	jmp	0x23ee	; 0x23ee <__epilogue_restores__+0x1c>

000011a6 <u8g_SetPILevel>:
    11a6:	fc 01       	movw	r30, r24
    11a8:	e6 0f       	add	r30, r22
    11aa:	f1 1d       	adc	r31, r1
    11ac:	83 a1       	ldd	r24, Z+35	; 0x23
    11ae:	8f 3f       	cpi	r24, 0xFF	; 255
    11b0:	11 f0       	breq	.+4      	; 0x11b6 <u8g_SetPILevel+0x10>
    11b2:	64 2f       	mov	r22, r20
    11b4:	b8 cf       	rjmp	.-144    	; 0x1126 <u8g_SetPinLevel>
    11b6:	08 95       	ret

000011b8 <u8g_SetPinOutput>:
    11b8:	a2 e0       	ldi	r26, 0x02	; 2
    11ba:	b0 e0       	ldi	r27, 0x00	; 0
    11bc:	e2 ee       	ldi	r30, 0xE2	; 226
    11be:	f8 e0       	ldi	r31, 0x08	; 8
    11c0:	0c 94 dc 11 	jmp	0x23b8	; 0x23b8 <__prologue_saves__+0x1e>
    11c4:	18 2f       	mov	r17, r24
    11c6:	68 2f       	mov	r22, r24
    11c8:	66 95       	lsr	r22
    11ca:	66 95       	lsr	r22
    11cc:	66 95       	lsr	r22
    11ce:	70 e0       	ldi	r23, 0x00	; 0
    11d0:	66 0f       	add	r22, r22
    11d2:	77 1f       	adc	r23, r23
    11d4:	64 50       	subi	r22, 0x04	; 4
    11d6:	7f 4f       	sbci	r23, 0xFF	; 255
    11d8:	ce 01       	movw	r24, r28
    11da:	01 96       	adiw	r24, 0x01	; 1
    11dc:	42 e0       	ldi	r20, 0x02	; 2
    11de:	50 e0       	ldi	r21, 0x00	; 0
    11e0:	0e 94 8e 13 	call	0x271c	; 0x271c <memcpy_P>
    11e4:	e9 81       	ldd	r30, Y+1	; 0x01
    11e6:	fa 81       	ldd	r31, Y+2	; 0x02
    11e8:	20 81       	ld	r18, Z
    11ea:	17 70       	andi	r17, 0x07	; 7
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	02 c0       	rjmp	.+4      	; 0x11f6 <u8g_SetPinOutput+0x3e>
    11f2:	88 0f       	add	r24, r24
    11f4:	99 1f       	adc	r25, r25
    11f6:	1a 95       	dec	r17
    11f8:	e2 f7       	brpl	.-8      	; 0x11f2 <u8g_SetPinOutput+0x3a>
    11fa:	28 2b       	or	r18, r24
    11fc:	20 83       	st	Z, r18
    11fe:	22 96       	adiw	r28, 0x02	; 2
    1200:	e3 e0       	ldi	r30, 0x03	; 3
    1202:	0c 94 f8 11 	jmp	0x23f0	; 0x23f0 <__epilogue_restores__+0x1e>

00001206 <u8g_SetPIOutput>:
    1206:	fc 01       	movw	r30, r24
    1208:	e6 0f       	add	r30, r22
    120a:	f1 1d       	adc	r31, r1
    120c:	83 a1       	ldd	r24, Z+35	; 0x23
    120e:	8f 3f       	cpi	r24, 0xFF	; 255
    1210:	09 f0       	breq	.+2      	; 0x1214 <u8g_SetPIOutput+0xe>
    1212:	d2 cf       	rjmp	.-92     	; 0x11b8 <u8g_SetPinOutput>
    1214:	08 95       	ret

00001216 <u8g_Delay>:
    1216:	2e ec       	ldi	r18, 0xCE	; 206
    1218:	37 e0       	ldi	r19, 0x07	; 7
    121a:	04 c0       	rjmp	.+8      	; 0x1224 <u8g_Delay+0xe>
    121c:	f9 01       	movw	r30, r18
    121e:	31 97       	sbiw	r30, 0x01	; 1
    1220:	f1 f7       	brne	.-4      	; 0x121e <u8g_Delay+0x8>
    1222:	01 97       	sbiw	r24, 0x01	; 1
    1224:	00 97       	sbiw	r24, 0x00	; 0
    1226:	d1 f7       	brne	.-12     	; 0x121c <u8g_Delay+0x6>
    1228:	08 95       	ret

0000122a <u8g_MicroDelay>:
    122a:	82 e0       	ldi	r24, 0x02	; 2
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	01 97       	sbiw	r24, 0x01	; 1
    1230:	f1 f7       	brne	.-4      	; 0x122e <u8g_MicroDelay+0x4>
    1232:	08 95       	ret

00001234 <u8g_10MicroDelay>:
    1234:	84 e1       	ldi	r24, 0x14	; 20
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	01 97       	sbiw	r24, 0x01	; 1
    123a:	f1 f7       	brne	.-4      	; 0x1238 <u8g_10MicroDelay+0x4>
    123c:	08 95       	ret

0000123e <u8g_dev_st7920_128x64_fn>:
    123e:	a0 e0       	ldi	r26, 0x00	; 0
    1240:	b0 e0       	ldi	r27, 0x00	; 0
    1242:	e5 e2       	ldi	r30, 0x25	; 37
    1244:	f9 e0       	ldi	r31, 0x09	; 9
    1246:	0c 94 d3 11 	jmp	0x23a6	; 0x23a6 <__prologue_saves__+0xc>
    124a:	7c 01       	movw	r14, r24
    124c:	eb 01       	movw	r28, r22
    124e:	c4 2e       	mov	r12, r20
    1250:	49 01       	movw	r8, r18
    1252:	8a e0       	ldi	r24, 0x0A	; 10
    1254:	48 17       	cp	r20, r24
    1256:	29 f0       	breq	.+10     	; 0x1262 <u8g_dev_st7920_128x64_fn+0x24>
    1258:	e5 e1       	ldi	r30, 0x15	; 21
    125a:	4e 17       	cp	r20, r30
    125c:	09 f0       	breq	.+2      	; 0x1260 <u8g_dev_st7920_128x64_fn+0x22>
    125e:	4e c0       	rjmp	.+156    	; 0x12fc <u8g_dev_st7920_128x64_fn+0xbe>
    1260:	09 c0       	rjmp	.+18     	; 0x1274 <u8g_dev_st7920_128x64_fn+0x36>
    1262:	c7 01       	movw	r24, r14
    1264:	43 e0       	ldi	r20, 0x03	; 3
    1266:	f5 d6       	rcall	.+3562   	; 0x2052 <u8g_InitCom>
    1268:	c7 01       	movw	r24, r14
    126a:	be 01       	movw	r22, r28
    126c:	44 e1       	ldi	r20, 0x14	; 20
    126e:	51 e0       	ldi	r21, 0x01	; 1
    1270:	2f d7       	rcall	.+3678   	; 0x20d0 <u8g_WriteEscSeqP>
    1272:	44 c0       	rjmp	.+136    	; 0x12fc <u8g_dev_st7920_128x64_fn+0xbe>
    1274:	0a 81       	ldd	r16, Y+2	; 0x02
    1276:	1b 81       	ldd	r17, Y+3	; 0x03
    1278:	c7 01       	movw	r24, r14
    127a:	40 e0       	ldi	r20, 0x00	; 0
    127c:	10 d7       	rcall	.+3616   	; 0x209e <u8g_SetAddress>
    127e:	c7 01       	movw	r24, r14
    1280:	be 01       	movw	r22, r28
    1282:	41 e0       	ldi	r20, 0x01	; 1
    1284:	ef d6       	rcall	.+3550   	; 0x2064 <u8g_SetChipSelect>
    1286:	f8 01       	movw	r30, r16
    1288:	d2 80       	ldd	r13, Z+2	; 0x02
    128a:	06 81       	ldd	r16, Z+6	; 0x06
    128c:	17 81       	ldd	r17, Z+7	; 0x07
    128e:	90 e7       	ldi	r25, 0x70	; 112
    1290:	a9 2e       	mov	r10, r25
    1292:	b1 2c       	mov	r11, r1
    1294:	a0 0e       	add	r10, r16
    1296:	b1 1e       	adc	r11, r17
    1298:	c7 01       	movw	r24, r14
    129a:	be 01       	movw	r22, r28
    129c:	40 e0       	ldi	r20, 0x00	; 0
    129e:	ff d6       	rcall	.+3582   	; 0x209e <u8g_SetAddress>
    12a0:	c7 01       	movw	r24, r14
    12a2:	be 01       	movw	r22, r28
    12a4:	4e e3       	ldi	r20, 0x3E	; 62
    12a6:	04 d7       	rcall	.+3592   	; 0x20b0 <u8g_WriteByte>
    12a8:	ff e1       	ldi	r31, 0x1F	; 31
    12aa:	fd 15       	cp	r31, r13
    12ac:	48 f0       	brcs	.+18     	; 0x12c0 <u8g_dev_st7920_128x64_fn+0x82>
    12ae:	4d 2d       	mov	r20, r13
    12b0:	40 68       	ori	r20, 0x80	; 128
    12b2:	c7 01       	movw	r24, r14
    12b4:	be 01       	movw	r22, r28
    12b6:	fc d6       	rcall	.+3576   	; 0x20b0 <u8g_WriteByte>
    12b8:	c7 01       	movw	r24, r14
    12ba:	be 01       	movw	r22, r28
    12bc:	40 e8       	ldi	r20, 0x80	; 128
    12be:	09 c0       	rjmp	.+18     	; 0x12d2 <u8g_dev_st7920_128x64_fn+0x94>
    12c0:	4d 2d       	mov	r20, r13
    12c2:	40 52       	subi	r20, 0x20	; 32
    12c4:	40 68       	ori	r20, 0x80	; 128
    12c6:	c7 01       	movw	r24, r14
    12c8:	be 01       	movw	r22, r28
    12ca:	f2 d6       	rcall	.+3556   	; 0x20b0 <u8g_WriteByte>
    12cc:	c7 01       	movw	r24, r14
    12ce:	be 01       	movw	r22, r28
    12d0:	48 e8       	ldi	r20, 0x88	; 136
    12d2:	ee d6       	rcall	.+3548   	; 0x20b0 <u8g_WriteByte>
    12d4:	c7 01       	movw	r24, r14
    12d6:	be 01       	movw	r22, r28
    12d8:	41 e0       	ldi	r20, 0x01	; 1
    12da:	e1 d6       	rcall	.+3522   	; 0x209e <u8g_SetAddress>
    12dc:	c7 01       	movw	r24, r14
    12de:	be 01       	movw	r22, r28
    12e0:	40 e1       	ldi	r20, 0x10	; 16
    12e2:	98 01       	movw	r18, r16
    12e4:	ee d6       	rcall	.+3548   	; 0x20c2 <u8g_WriteSequence>
    12e6:	0a 15       	cp	r16, r10
    12e8:	1b 05       	cpc	r17, r11
    12ea:	21 f0       	breq	.+8      	; 0x12f4 <u8g_dev_st7920_128x64_fn+0xb6>
    12ec:	00 5f       	subi	r16, 0xF0	; 240
    12ee:	1f 4f       	sbci	r17, 0xFF	; 255
    12f0:	d3 94       	inc	r13
    12f2:	d2 cf       	rjmp	.-92     	; 0x1298 <u8g_dev_st7920_128x64_fn+0x5a>
    12f4:	c7 01       	movw	r24, r14
    12f6:	be 01       	movw	r22, r28
    12f8:	40 e0       	ldi	r20, 0x00	; 0
    12fa:	b4 d6       	rcall	.+3432   	; 0x2064 <u8g_SetChipSelect>
    12fc:	c7 01       	movw	r24, r14
    12fe:	be 01       	movw	r22, r28
    1300:	4c 2d       	mov	r20, r12
    1302:	94 01       	movw	r18, r8
    1304:	df d3       	rcall	.+1982   	; 0x1ac4 <u8g_dev_pb8h1_base_fn>
    1306:	cd b7       	in	r28, 0x3d	; 61
    1308:	de b7       	in	r29, 0x3e	; 62
    130a:	ec e0       	ldi	r30, 0x0C	; 12
    130c:	0c 94 ef 11 	jmp	0x23de	; 0x23de <__epilogue_restores__+0xc>

00001310 <u8g_font_get_word>:
    1310:	fc 01       	movw	r30, r24
    1312:	e6 0f       	add	r30, r22
    1314:	f1 1d       	adc	r31, r1
    1316:	84 91       	lpm	r24, Z
    1318:	38 2f       	mov	r19, r24
    131a:	20 e0       	ldi	r18, 0x00	; 0
    131c:	31 96       	adiw	r30, 0x01	; 1
    131e:	e4 91       	lpm	r30, Z
    1320:	2e 0f       	add	r18, r30
    1322:	31 1d       	adc	r19, r1
    1324:	c9 01       	movw	r24, r18
    1326:	08 95       	ret

00001328 <u8g_font_GetFormat>:
    1328:	fc 01       	movw	r30, r24
    132a:	84 91       	lpm	r24, Z
    132c:	08 95       	ret

0000132e <u8g_font_GetFontGlyphStructureSize>:
    132e:	fc df       	rcall	.-8      	; 0x1328 <u8g_font_GetFormat>
    1330:	88 23       	and	r24, r24
    1332:	21 f0       	breq	.+8      	; 0x133c <u8g_font_GetFontGlyphStructureSize+0xe>
    1334:	82 30       	cpi	r24, 0x02	; 2
    1336:	11 f0       	breq	.+4      	; 0x133c <u8g_font_GetFontGlyphStructureSize+0xe>
    1338:	83 e0       	ldi	r24, 0x03	; 3
    133a:	08 95       	ret
    133c:	86 e0       	ldi	r24, 0x06	; 6
    133e:	08 95       	ret

00001340 <u8g_font_GetEncoding65Pos>:
    1340:	66 e0       	ldi	r22, 0x06	; 6
    1342:	e6 cf       	rjmp	.-52     	; 0x1310 <u8g_font_get_word>
    1344:	08 95       	ret

00001346 <u8g_font_GetEncoding97Pos>:
    1346:	68 e0       	ldi	r22, 0x08	; 8
    1348:	e3 cf       	rjmp	.-58     	; 0x1310 <u8g_font_get_word>
    134a:	08 95       	ret

0000134c <u8g_font_GetFontStartEncoding>:
    134c:	fc 01       	movw	r30, r24
    134e:	3a 96       	adiw	r30, 0x0a	; 10
    1350:	e4 91       	lpm	r30, Z
    1352:	8e 2f       	mov	r24, r30
    1354:	08 95       	ret

00001356 <u8g_font_GetFontEndEncoding>:
    1356:	fc 01       	movw	r30, r24
    1358:	3b 96       	adiw	r30, 0x0b	; 11
    135a:	e4 91       	lpm	r30, Z
    135c:	8e 2f       	mov	r24, r30
    135e:	08 95       	ret

00001360 <u8g_GetGlyph>:
    1360:	a0 e0       	ldi	r26, 0x00	; 0
    1362:	b0 e0       	ldi	r27, 0x00	; 0
    1364:	e6 eb       	ldi	r30, 0xB6	; 182
    1366:	f9 e0       	ldi	r31, 0x09	; 9
    1368:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__prologue_saves__+0xe>
    136c:	ec 01       	movw	r28, r24
    136e:	c6 2e       	mov	r12, r22
    1370:	fc 80       	ldd	r15, Y+4	; 0x04
    1372:	ed 80       	ldd	r14, Y+5	; 0x05
    1374:	0f 2d       	mov	r16, r15
    1376:	1e 2d       	mov	r17, r14
    1378:	8f 2d       	mov	r24, r15
    137a:	9e 2d       	mov	r25, r14
    137c:	d5 df       	rcall	.-86     	; 0x1328 <u8g_font_GetFormat>
    137e:	b8 2e       	mov	r11, r24
    1380:	8f 2d       	mov	r24, r15
    1382:	9e 2d       	mov	r25, r14
    1384:	d4 df       	rcall	.-88     	; 0x132e <u8g_font_GetFontGlyphStructureSize>
    1386:	98 2e       	mov	r9, r24
    1388:	81 e0       	ldi	r24, 0x01	; 1
    138a:	b8 16       	cp	r11, r24
    138c:	19 f4       	brne	.+6      	; 0x1394 <u8g_GetGlyph+0x34>
    138e:	8f e0       	ldi	r24, 0x0F	; 15
    1390:	a8 2e       	mov	r10, r24
    1392:	02 c0       	rjmp	.+4      	; 0x1398 <u8g_GetGlyph+0x38>
    1394:	aa 24       	eor	r10, r10
    1396:	aa 94       	dec	r10
    1398:	8f 2d       	mov	r24, r15
    139a:	9e 2d       	mov	r25, r14
    139c:	dc df       	rcall	.-72     	; 0x1356 <u8g_font_GetFontEndEncoding>
    139e:	d8 2e       	mov	r13, r24
    13a0:	80 e6       	ldi	r24, 0x60	; 96
    13a2:	8c 15       	cp	r24, r12
    13a4:	50 f4       	brcc	.+20     	; 0x13ba <u8g_GetGlyph+0x5a>
    13a6:	8f 2d       	mov	r24, r15
    13a8:	9e 2d       	mov	r25, r14
    13aa:	cd df       	rcall	.-102    	; 0x1346 <u8g_font_GetEncoding97Pos>
    13ac:	00 97       	sbiw	r24, 0x00	; 0
    13ae:	29 f0       	breq	.+10     	; 0x13ba <u8g_GetGlyph+0x5a>
    13b0:	f8 01       	movw	r30, r16
    13b2:	e8 0f       	add	r30, r24
    13b4:	f9 1f       	adc	r31, r25
    13b6:	81 e6       	ldi	r24, 0x61	; 97
    13b8:	12 c0       	rjmp	.+36     	; 0x13de <u8g_GetGlyph+0x7e>
    13ba:	80 e4       	ldi	r24, 0x40	; 64
    13bc:	8c 15       	cp	r24, r12
    13be:	50 f4       	brcc	.+20     	; 0x13d4 <u8g_GetGlyph+0x74>
    13c0:	8f 2d       	mov	r24, r15
    13c2:	9e 2d       	mov	r25, r14
    13c4:	bd df       	rcall	.-134    	; 0x1340 <u8g_font_GetEncoding65Pos>
    13c6:	00 97       	sbiw	r24, 0x00	; 0
    13c8:	29 f0       	breq	.+10     	; 0x13d4 <u8g_GetGlyph+0x74>
    13ca:	f8 01       	movw	r30, r16
    13cc:	e8 0f       	add	r30, r24
    13ce:	f9 1f       	adc	r31, r25
    13d0:	81 e4       	ldi	r24, 0x41	; 65
    13d2:	05 c0       	rjmp	.+10     	; 0x13de <u8g_GetGlyph+0x7e>
    13d4:	8f 2d       	mov	r24, r15
    13d6:	9e 2d       	mov	r25, r14
    13d8:	b9 df       	rcall	.-142    	; 0x134c <u8g_font_GetFontStartEncoding>
    13da:	f8 01       	movw	r30, r16
    13dc:	71 96       	adiw	r30, 0x11	; 17
    13de:	dc 14       	cp	r13, r12
    13e0:	08 f4       	brcc	.+2      	; 0x13e4 <u8g_GetGlyph+0x84>
    13e2:	45 c0       	rjmp	.+138    	; 0x146e <u8g_GetGlyph+0x10e>
    13e4:	d8 16       	cp	r13, r24
    13e6:	08 f4       	brcc	.+2      	; 0x13ea <u8g_GetGlyph+0x8a>
    13e8:	42 c0       	rjmp	.+132    	; 0x146e <u8g_GetGlyph+0x10e>
    13ea:	28 2f       	mov	r18, r24
    13ec:	49 2d       	mov	r20, r9
    13ee:	50 e0       	ldi	r21, 0x00	; 0
    13f0:	94 91       	lpm	r25, Z
    13f2:	9f 3f       	cpi	r25, 0xFF	; 255
    13f4:	11 f4       	brne	.+4      	; 0x13fa <u8g_GetGlyph+0x9a>
    13f6:	31 96       	adiw	r30, 0x01	; 1
    13f8:	36 c0       	rjmp	.+108    	; 0x1466 <u8g_GetGlyph+0x106>
    13fa:	2c 15       	cp	r18, r12
    13fc:	09 f0       	breq	.+2      	; 0x1400 <u8g_GetGlyph+0xa0>
    13fe:	2b c0       	rjmp	.+86     	; 0x1456 <u8g_GetGlyph+0xf6>
    1400:	bb 20       	and	r11, r11
    1402:	19 f0       	breq	.+6      	; 0x140a <u8g_GetGlyph+0xaa>
    1404:	82 e0       	ldi	r24, 0x02	; 2
    1406:	b8 16       	cp	r11, r24
    1408:	81 f4       	brne	.+32     	; 0x142a <u8g_GetGlyph+0xca>
    140a:	84 91       	lpm	r24, Z
    140c:	8b 8b       	std	Y+19, r24	; 0x13
    140e:	31 96       	adiw	r30, 0x01	; 1
    1410:	84 91       	lpm	r24, Z
    1412:	8c 8b       	std	Y+20, r24	; 0x14
    1414:	32 96       	adiw	r30, 0x02	; 2
    1416:	84 91       	lpm	r24, Z
    1418:	88 8b       	std	Y+16, r24	; 0x10
    141a:	31 96       	adiw	r30, 0x01	; 1
    141c:	84 91       	lpm	r24, Z
    141e:	89 8b       	std	Y+17, r24	; 0x11
    1420:	31 96       	adiw	r30, 0x01	; 1
    1422:	84 91       	lpm	r24, Z
    1424:	35 97       	sbiw	r30, 0x05	; 5
    1426:	8a 8b       	std	Y+18, r24	; 0x12
    1428:	29 c0       	rjmp	.+82     	; 0x147c <u8g_GetGlyph+0x11c>
    142a:	89 2f       	mov	r24, r25
    142c:	8f 70       	andi	r24, 0x0F	; 15
    142e:	82 50       	subi	r24, 0x02	; 2
    1430:	8a 8b       	std	Y+18, r24	; 0x12
    1432:	92 95       	swap	r25
    1434:	9f 70       	andi	r25, 0x0F	; 15
    1436:	99 8b       	std	Y+17, r25	; 0x11
    1438:	31 96       	adiw	r30, 0x01	; 1
    143a:	84 91       	lpm	r24, Z
    143c:	98 2f       	mov	r25, r24
    143e:	9f 70       	andi	r25, 0x0F	; 15
    1440:	9c 8b       	std	Y+20, r25	; 0x14
    1442:	82 95       	swap	r24
    1444:	8f 70       	andi	r24, 0x0F	; 15
    1446:	8b 8b       	std	Y+19, r24	; 0x13
    1448:	31 96       	adiw	r30, 0x01	; 1
    144a:	84 91       	lpm	r24, Z
    144c:	32 97       	sbiw	r30, 0x02	; 2
    144e:	82 95       	swap	r24
    1450:	8f 70       	andi	r24, 0x0F	; 15
    1452:	88 8b       	std	Y+16, r24	; 0x10
    1454:	13 c0       	rjmp	.+38     	; 0x147c <u8g_GetGlyph+0x11c>
    1456:	32 96       	adiw	r30, 0x02	; 2
    1458:	84 91       	lpm	r24, Z
    145a:	32 97       	sbiw	r30, 0x02	; 2
    145c:	8a 21       	and	r24, r10
    145e:	e8 0f       	add	r30, r24
    1460:	f1 1d       	adc	r31, r1
    1462:	e4 0f       	add	r30, r20
    1464:	f5 1f       	adc	r31, r21
    1466:	2d 15       	cp	r18, r13
    1468:	11 f0       	breq	.+4      	; 0x146e <u8g_GetGlyph+0x10e>
    146a:	2f 5f       	subi	r18, 0xFF	; 255
    146c:	c1 cf       	rjmp	.-126    	; 0x13f0 <u8g_GetGlyph+0x90>
    146e:	18 8a       	std	Y+16, r1	; 0x10
    1470:	1b 8a       	std	Y+19, r1	; 0x13
    1472:	1c 8a       	std	Y+20, r1	; 0x14
    1474:	19 8a       	std	Y+17, r1	; 0x11
    1476:	1a 8a       	std	Y+18, r1	; 0x12
    1478:	e0 e0       	ldi	r30, 0x00	; 0
    147a:	f0 e0       	ldi	r31, 0x00	; 0
    147c:	cf 01       	movw	r24, r30
    147e:	cd b7       	in	r28, 0x3d	; 61
    1480:	de b7       	in	r29, 0x3e	; 62
    1482:	eb e0       	ldi	r30, 0x0B	; 11
    1484:	ad c7       	rjmp	.+3930   	; 0x23e0 <__epilogue_restores__+0xe>

00001486 <u8g_UpdateRefHeight>:
    1486:	dc 01       	movw	r26, r24
    1488:	14 96       	adiw	r26, 0x04	; 4
    148a:	ed 91       	ld	r30, X+
    148c:	fc 91       	ld	r31, X
    148e:	15 97       	sbiw	r26, 0x05	; 5
    1490:	30 97       	sbiw	r30, 0x00	; 0
    1492:	09 f4       	brne	.+2      	; 0x1496 <u8g_UpdateRefHeight+0x10>
    1494:	38 c0       	rjmp	.+112    	; 0x1506 <u8g_UpdateRefHeight+0x80>
    1496:	57 96       	adiw	r26, 0x17	; 23
    1498:	8c 91       	ld	r24, X
    149a:	57 97       	sbiw	r26, 0x17	; 23
    149c:	88 23       	and	r24, r24
    149e:	39 f4       	brne	.+14     	; 0x14ae <u8g_UpdateRefHeight+0x28>
    14a0:	35 96       	adiw	r30, 0x05	; 5
    14a2:	84 91       	lpm	r24, Z
    14a4:	58 96       	adiw	r26, 0x18	; 24
    14a6:	8c 93       	st	X, r24
    14a8:	58 97       	sbiw	r26, 0x18	; 24
    14aa:	37 96       	adiw	r30, 0x07	; 7
    14ac:	0a c0       	rjmp	.+20     	; 0x14c2 <u8g_UpdateRefHeight+0x3c>
    14ae:	81 30       	cpi	r24, 0x01	; 1
    14b0:	11 f4       	brne	.+4      	; 0x14b6 <u8g_UpdateRefHeight+0x30>
    14b2:	3f 96       	adiw	r30, 0x0f	; 15
    14b4:	01 c0       	rjmp	.+2      	; 0x14b8 <u8g_UpdateRefHeight+0x32>
    14b6:	3d 96       	adiw	r30, 0x0d	; 13
    14b8:	84 91       	lpm	r24, Z
    14ba:	58 96       	adiw	r26, 0x18	; 24
    14bc:	8c 93       	st	X, r24
    14be:	58 97       	sbiw	r26, 0x18	; 24
    14c0:	31 96       	adiw	r30, 0x01	; 1
    14c2:	84 91       	lpm	r24, Z
    14c4:	59 96       	adiw	r26, 0x19	; 25
    14c6:	8c 93       	st	X, r24
    14c8:	59 97       	sbiw	r26, 0x19	; 25
    14ca:	58 96       	adiw	r26, 0x18	; 24
    14cc:	8c 91       	ld	r24, X
    14ce:	58 97       	sbiw	r26, 0x18	; 24
    14d0:	28 2f       	mov	r18, r24
    14d2:	33 27       	eor	r19, r19
    14d4:	27 fd       	sbrc	r18, 7
    14d6:	30 95       	com	r19
    14d8:	59 96       	adiw	r26, 0x19	; 25
    14da:	8c 91       	ld	r24, X
    14dc:	59 97       	sbiw	r26, 0x19	; 25
    14de:	99 27       	eor	r25, r25
    14e0:	87 fd       	sbrc	r24, 7
    14e2:	90 95       	com	r25
    14e4:	28 1b       	sub	r18, r24
    14e6:	39 0b       	sbc	r19, r25
    14e8:	5a 96       	adiw	r26, 0x1a	; 26
    14ea:	8c 91       	ld	r24, X
    14ec:	5a 97       	sbiw	r26, 0x1a	; 26
    14ee:	80 34       	cpi	r24, 0x40	; 64
    14f0:	41 f0       	breq	.+16     	; 0x1502 <u8g_UpdateRefHeight+0x7c>
    14f2:	28 9f       	mul	r18, r24
    14f4:	90 01       	movw	r18, r0
    14f6:	11 24       	eor	r1, r1
    14f8:	96 e0       	ldi	r25, 0x06	; 6
    14fa:	36 95       	lsr	r19
    14fc:	27 95       	ror	r18
    14fe:	9a 95       	dec	r25
    1500:	e1 f7       	brne	.-8      	; 0x14fa <u8g_UpdateRefHeight+0x74>
    1502:	5b 96       	adiw	r26, 0x1b	; 27
    1504:	2c 93       	st	X, r18
    1506:	08 95       	ret

00001508 <u8g_font_calc_vref_font>:
    1508:	80 e0       	ldi	r24, 0x00	; 0
    150a:	08 95       	ret

0000150c <u8g_SetFontPosBaseline>:
    150c:	24 e8       	ldi	r18, 0x84	; 132
    150e:	3a e0       	ldi	r19, 0x0A	; 10
    1510:	fc 01       	movw	r30, r24
    1512:	36 8b       	std	Z+22, r19	; 0x16
    1514:	25 8b       	std	Z+21, r18	; 0x15
    1516:	08 95       	ret

00001518 <u8g_SetFont>:
    1518:	cf 93       	push	r28
    151a:	df 93       	push	r29
    151c:	ec 01       	movw	r28, r24
    151e:	8c 81       	ldd	r24, Y+4	; 0x04
    1520:	9d 81       	ldd	r25, Y+5	; 0x05
    1522:	86 17       	cp	r24, r22
    1524:	97 07       	cpc	r25, r23
    1526:	41 f0       	breq	.+16     	; 0x1538 <u8g_SetFont+0x20>
    1528:	7d 83       	std	Y+5, r23	; 0x05
    152a:	6c 83       	std	Y+4, r22	; 0x04
    152c:	ce 01       	movw	r24, r28
    152e:	ab df       	rcall	.-170    	; 0x1486 <u8g_UpdateRefHeight>
    1530:	84 e8       	ldi	r24, 0x84	; 132
    1532:	9a e0       	ldi	r25, 0x0A	; 10
    1534:	9e 8b       	std	Y+22, r25	; 0x16
    1536:	8d 8b       	std	Y+21, r24	; 0x15
    1538:	df 91       	pop	r29
    153a:	cf 91       	pop	r28
    153c:	08 95       	ret

0000153e <u8g_draw_glyph>:
    153e:	a0 e0       	ldi	r26, 0x00	; 0
    1540:	b0 e0       	ldi	r27, 0x00	; 0
    1542:	e4 ea       	ldi	r30, 0xA4	; 164
    1544:	fa e0       	ldi	r31, 0x0A	; 10
    1546:	2b c7       	rjmp	.+3670   	; 0x239e <__prologue_saves__+0x4>
    1548:	7c 01       	movw	r14, r24
    154a:	06 2f       	mov	r16, r22
    154c:	b4 2e       	mov	r11, r20
    154e:	62 2f       	mov	r22, r18
    1550:	07 df       	rcall	.-498    	; 0x1360 <u8g_GetGlyph>
    1552:	ec 01       	movw	r28, r24
    1554:	00 97       	sbiw	r24, 0x00	; 0
    1556:	11 f4       	brne	.+4      	; 0x155c <u8g_draw_glyph+0x1e>
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	3b c0       	rjmp	.+118    	; 0x15d2 <u8g_draw_glyph+0x94>
    155c:	f7 01       	movw	r30, r14
    155e:	c4 80       	ldd	r12, Z+4	; 0x04
    1560:	d5 80       	ldd	r13, Z+5	; 0x05
    1562:	13 89       	ldd	r17, Z+19	; 0x13
    1564:	74 88       	ldd	r7, Z+20	; 0x14
    1566:	81 88       	ldd	r8, Z+17	; 0x11
    1568:	80 0e       	add	r8, r16
    156a:	82 89       	ldd	r24, Z+18	; 0x12
    156c:	9b 2c       	mov	r9, r11
    156e:	97 18       	sub	r9, r7
    1570:	98 1a       	sub	r9, r24
    1572:	c7 01       	movw	r24, r14
    1574:	68 2d       	mov	r22, r8
    1576:	49 2d       	mov	r20, r9
    1578:	21 2f       	mov	r18, r17
    157a:	07 2d       	mov	r16, r7
    157c:	ab dd       	rcall	.-1194   	; 0x10d4 <u8g_IsBBXIntersection>
    157e:	88 23       	and	r24, r24
    1580:	31 f1       	breq	.+76     	; 0x15ce <u8g_draw_glyph+0x90>
    1582:	c6 01       	movw	r24, r12
    1584:	d4 de       	rcall	.-600    	; 0x132e <u8g_font_GetFontGlyphStructureSize>
    1586:	67 e0       	ldi	r22, 0x07	; 7
    1588:	a6 2e       	mov	r10, r22
    158a:	a1 0e       	add	r10, r17
    158c:	a6 94       	lsr	r10
    158e:	a6 94       	lsr	r10
    1590:	a6 94       	lsr	r10
    1592:	6e 01       	movw	r12, r28
    1594:	c8 0e       	add	r12, r24
    1596:	d1 1c       	adc	r13, r1
    1598:	bb 24       	eor	r11, r11
    159a:	4a 2c       	mov	r4, r10
    159c:	55 24       	eor	r5, r5
    159e:	10 c0       	rjmp	.+32     	; 0x15c0 <u8g_draw_glyph+0x82>
    15a0:	fe 01       	movw	r30, r28
    15a2:	04 91       	lpm	r16, Z
    15a4:	c7 01       	movw	r24, r14
    15a6:	61 2f       	mov	r22, r17
    15a8:	46 2d       	mov	r20, r6
    15aa:	20 e0       	ldi	r18, 0x00	; 0
    15ac:	c2 d1       	rcall	.+900    	; 0x1932 <u8g_Draw8Pixel>
    15ae:	21 96       	adiw	r28, 0x01	; 1
    15b0:	18 5f       	subi	r17, 0xF8	; 248
    15b2:	9e 01       	movw	r18, r28
    15b4:	2c 19       	sub	r18, r12
    15b6:	2a 15       	cp	r18, r10
    15b8:	98 f3       	brcs	.-26     	; 0x15a0 <u8g_draw_glyph+0x62>
    15ba:	c4 0c       	add	r12, r4
    15bc:	d5 1c       	adc	r13, r5
    15be:	b3 94       	inc	r11
    15c0:	6b 2c       	mov	r6, r11
    15c2:	69 0c       	add	r6, r9
    15c4:	b7 14       	cp	r11, r7
    15c6:	18 f4       	brcc	.+6      	; 0x15ce <u8g_draw_glyph+0x90>
    15c8:	18 2d       	mov	r17, r8
    15ca:	e6 01       	movw	r28, r12
    15cc:	f2 cf       	rjmp	.-28     	; 0x15b2 <u8g_draw_glyph+0x74>
    15ce:	f7 01       	movw	r30, r14
    15d0:	80 89       	ldd	r24, Z+16	; 0x10
    15d2:	cd b7       	in	r28, 0x3d	; 61
    15d4:	de b7       	in	r29, 0x3e	; 62
    15d6:	e0 e1       	ldi	r30, 0x10	; 16
    15d8:	fe c6       	rjmp	.+3580   	; 0x23d6 <__epilogue_restores__+0x4>

000015da <u8g_DrawStr>:
    15da:	a0 e0       	ldi	r26, 0x00	; 0
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	e2 ef       	ldi	r30, 0xF2	; 242
    15e0:	fa e0       	ldi	r31, 0x0A	; 10
    15e2:	e6 c6       	rjmp	.+3532   	; 0x23b0 <__prologue_saves__+0x16>
    15e4:	8c 01       	movw	r16, r24
    15e6:	d6 2e       	mov	r13, r22
    15e8:	e4 2e       	mov	r14, r20
    15ea:	e9 01       	movw	r28, r18
    15ec:	dc 01       	movw	r26, r24
    15ee:	55 96       	adiw	r26, 0x15	; 21
    15f0:	ed 91       	ld	r30, X+
    15f2:	fc 91       	ld	r31, X
    15f4:	56 97       	sbiw	r26, 0x16	; 22
    15f6:	09 95       	icall
    15f8:	e8 0e       	add	r14, r24
    15fa:	ff 24       	eor	r15, r15
    15fc:	07 c0       	rjmp	.+14     	; 0x160c <u8g_DrawStr+0x32>
    15fe:	c8 01       	movw	r24, r16
    1600:	6d 2d       	mov	r22, r13
    1602:	4e 2d       	mov	r20, r14
    1604:	9c df       	rcall	.-200    	; 0x153e <u8g_draw_glyph>
    1606:	d8 0e       	add	r13, r24
    1608:	f8 0e       	add	r15, r24
    160a:	21 96       	adiw	r28, 0x01	; 1
    160c:	28 81       	ld	r18, Y
    160e:	22 23       	and	r18, r18
    1610:	b1 f7       	brne	.-20     	; 0x15fe <u8g_DrawStr+0x24>
    1612:	8f 2d       	mov	r24, r15
    1614:	cd b7       	in	r28, 0x3d	; 61
    1616:	de b7       	in	r29, 0x3e	; 62
    1618:	e7 e0       	ldi	r30, 0x07	; 7
    161a:	e6 c6       	rjmp	.+3532   	; 0x23e8 <__epilogue_restores__+0x16>

0000161c <u8g_DrawLine>:
    161c:	a0 e0       	ldi	r26, 0x00	; 0
    161e:	b0 e0       	ldi	r27, 0x00	; 0
    1620:	e3 e1       	ldi	r30, 0x13	; 19
    1622:	fb e0       	ldi	r31, 0x0B	; 11
    1624:	c2 c6       	rjmp	.+3460   	; 0x23aa <__prologue_saves__+0x10>
    1626:	ec 01       	movw	r28, r24
    1628:	12 2f       	mov	r17, r18
    162a:	26 17       	cp	r18, r22
    162c:	18 f4       	brcc	.+6      	; 0x1634 <u8g_DrawLine+0x18>
    162e:	d6 2e       	mov	r13, r22
    1630:	d2 1a       	sub	r13, r18
    1632:	02 c0       	rjmp	.+4      	; 0x1638 <u8g_DrawLine+0x1c>
    1634:	d2 2e       	mov	r13, r18
    1636:	d6 1a       	sub	r13, r22
    1638:	04 17       	cp	r16, r20
    163a:	18 f4       	brcc	.+6      	; 0x1642 <u8g_DrawLine+0x26>
    163c:	c4 2e       	mov	r12, r20
    163e:	c0 1a       	sub	r12, r16
    1640:	02 c0       	rjmp	.+4      	; 0x1646 <u8g_DrawLine+0x2a>
    1642:	c0 2e       	mov	r12, r16
    1644:	c4 1a       	sub	r12, r20
    1646:	dc 14       	cp	r13, r12
    1648:	60 f4       	brcc	.+24     	; 0x1662 <u8g_DrawLine+0x46>
    164a:	84 2f       	mov	r24, r20
    164c:	46 2f       	mov	r20, r22
    164e:	68 2f       	mov	r22, r24
    1650:	80 2f       	mov	r24, r16
    1652:	01 2f       	mov	r16, r17
    1654:	18 2f       	mov	r17, r24
    1656:	8c 2d       	mov	r24, r12
    1658:	cd 2c       	mov	r12, r13
    165a:	d8 2e       	mov	r13, r24
    165c:	aa 24       	eor	r10, r10
    165e:	a3 94       	inc	r10
    1660:	01 c0       	rjmp	.+2      	; 0x1664 <u8g_DrawLine+0x48>
    1662:	aa 24       	eor	r10, r10
    1664:	16 17       	cp	r17, r22
    1666:	30 f4       	brcc	.+12     	; 0x1674 <u8g_DrawLine+0x58>
    1668:	81 2f       	mov	r24, r17
    166a:	16 2f       	mov	r17, r22
    166c:	68 2f       	mov	r22, r24
    166e:	80 2f       	mov	r24, r16
    1670:	04 2f       	mov	r16, r20
    1672:	48 2f       	mov	r20, r24
    1674:	40 17       	cp	r20, r16
    1676:	18 f0       	brcs	.+6      	; 0x167e <u8g_DrawLine+0x62>
    1678:	bb 24       	eor	r11, r11
    167a:	ba 94       	dec	r11
    167c:	02 c0       	rjmp	.+4      	; 0x1682 <u8g_DrawLine+0x66>
    167e:	bb 24       	eor	r11, r11
    1680:	b3 94       	inc	r11
    1682:	1f 3f       	cpi	r17, 0xFF	; 255
    1684:	09 f4       	brne	.+2      	; 0x1688 <u8g_DrawLine+0x6c>
    1686:	1e ef       	ldi	r17, 0xFE	; 254
    1688:	fd 2c       	mov	r15, r13
    168a:	f6 94       	lsr	r15
    168c:	06 2f       	mov	r16, r22
    168e:	e4 2e       	mov	r14, r20
    1690:	10 c0       	rjmp	.+32     	; 0x16b2 <u8g_DrawLine+0x96>
    1692:	aa 20       	and	r10, r10
    1694:	21 f4       	brne	.+8      	; 0x169e <u8g_DrawLine+0x82>
    1696:	ce 01       	movw	r24, r28
    1698:	60 2f       	mov	r22, r16
    169a:	4e 2d       	mov	r20, r14
    169c:	03 c0       	rjmp	.+6      	; 0x16a4 <u8g_DrawLine+0x88>
    169e:	ce 01       	movw	r24, r28
    16a0:	6e 2d       	mov	r22, r14
    16a2:	40 2f       	mov	r20, r16
    16a4:	3e d1       	rcall	.+636    	; 0x1922 <u8g_DrawPixel>
    16a6:	fc 18       	sub	r15, r12
    16a8:	f7 fe       	sbrs	r15, 7
    16aa:	02 c0       	rjmp	.+4      	; 0x16b0 <u8g_DrawLine+0x94>
    16ac:	eb 0c       	add	r14, r11
    16ae:	fd 0c       	add	r15, r13
    16b0:	0f 5f       	subi	r16, 0xFF	; 255
    16b2:	10 17       	cp	r17, r16
    16b4:	70 f7       	brcc	.-36     	; 0x1692 <u8g_DrawLine+0x76>
    16b6:	cd b7       	in	r28, 0x3d	; 61
    16b8:	de b7       	in	r29, 0x3e	; 62
    16ba:	ea e0       	ldi	r30, 0x0A	; 10
    16bc:	92 c6       	rjmp	.+3364   	; 0x23e2 <__epilogue_restores__+0x10>

000016be <u8g_call_dev_fn>:
    16be:	fb 01       	movw	r30, r22
    16c0:	a0 81       	ld	r26, Z
    16c2:	b1 81       	ldd	r27, Z+1	; 0x01
    16c4:	fd 01       	movw	r30, r26
    16c6:	09 95       	icall
    16c8:	08 95       	ret

000016ca <u8g_InitLL>:
    16ca:	ef 92       	push	r14
    16cc:	ff 92       	push	r15
    16ce:	0f 93       	push	r16
    16d0:	1f 93       	push	r17
    16d2:	8c 01       	movw	r16, r24
    16d4:	7b 01       	movw	r14, r22
    16d6:	dc 01       	movw	r26, r24
    16d8:	d1 96       	adiw	r26, 0x31	; 49
    16da:	ed 91       	ld	r30, X+
    16dc:	fc 91       	ld	r31, X
    16de:	d2 97       	sbiw	r26, 0x32	; 50
    16e0:	82 e0       	ldi	r24, 0x02	; 2
    16e2:	09 95       	icall
    16e4:	d7 01       	movw	r26, r14
    16e6:	ed 91       	ld	r30, X+
    16e8:	fc 91       	ld	r31, X
    16ea:	c8 01       	movw	r24, r16
    16ec:	b7 01       	movw	r22, r14
    16ee:	4a e0       	ldi	r20, 0x0A	; 10
    16f0:	20 e0       	ldi	r18, 0x00	; 0
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	09 95       	icall
    16f6:	f8 2e       	mov	r15, r24
    16f8:	d8 01       	movw	r26, r16
    16fa:	d1 96       	adiw	r26, 0x31	; 49
    16fc:	ed 91       	ld	r30, X+
    16fe:	fc 91       	ld	r31, X
    1700:	d2 97       	sbiw	r26, 0x32	; 50
    1702:	83 e0       	ldi	r24, 0x03	; 3
    1704:	09 95       	icall
    1706:	d8 01       	movw	r26, r16
    1708:	d1 96       	adiw	r26, 0x31	; 49
    170a:	ed 91       	ld	r30, X+
    170c:	fc 91       	ld	r31, X
    170e:	d2 97       	sbiw	r26, 0x32	; 50
    1710:	80 e0       	ldi	r24, 0x00	; 0
    1712:	09 95       	icall
    1714:	8f 2d       	mov	r24, r15
    1716:	1f 91       	pop	r17
    1718:	0f 91       	pop	r16
    171a:	ff 90       	pop	r15
    171c:	ef 90       	pop	r14
    171e:	08 95       	ret

00001720 <u8g_FirstPageLL>:
    1720:	ef 92       	push	r14
    1722:	ff 92       	push	r15
    1724:	0f 93       	push	r16
    1726:	1f 93       	push	r17
    1728:	8c 01       	movw	r16, r24
    172a:	7b 01       	movw	r14, r22
    172c:	dc 01       	movw	r26, r24
    172e:	d1 96       	adiw	r26, 0x31	; 49
    1730:	ed 91       	ld	r30, X+
    1732:	fc 91       	ld	r31, X
    1734:	d2 97       	sbiw	r26, 0x32	; 50
    1736:	82 e0       	ldi	r24, 0x02	; 2
    1738:	09 95       	icall
    173a:	d8 01       	movw	r26, r16
    173c:	d1 96       	adiw	r26, 0x31	; 49
    173e:	ed 91       	ld	r30, X+
    1740:	fc 91       	ld	r31, X
    1742:	d2 97       	sbiw	r26, 0x32	; 50
    1744:	81 e0       	ldi	r24, 0x01	; 1
    1746:	09 95       	icall
    1748:	d7 01       	movw	r26, r14
    174a:	ed 91       	ld	r30, X+
    174c:	fc 91       	ld	r31, X
    174e:	c8 01       	movw	r24, r16
    1750:	b7 01       	movw	r22, r14
    1752:	44 e1       	ldi	r20, 0x14	; 20
    1754:	20 e0       	ldi	r18, 0x00	; 0
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	09 95       	icall
    175a:	98 01       	movw	r18, r16
    175c:	2d 5c       	subi	r18, 0xCD	; 205
    175e:	3f 4f       	sbci	r19, 0xFF	; 255
    1760:	d7 01       	movw	r26, r14
    1762:	ed 91       	ld	r30, X+
    1764:	fc 91       	ld	r31, X
    1766:	c8 01       	movw	r24, r16
    1768:	b7 01       	movw	r22, r14
    176a:	47 e1       	ldi	r20, 0x17	; 23
    176c:	09 95       	icall
    176e:	d8 01       	movw	r26, r16
    1770:	d1 96       	adiw	r26, 0x31	; 49
    1772:	ed 91       	ld	r30, X+
    1774:	fc 91       	ld	r31, X
    1776:	d2 97       	sbiw	r26, 0x32	; 50
    1778:	80 e0       	ldi	r24, 0x00	; 0
    177a:	09 95       	icall
    177c:	1f 91       	pop	r17
    177e:	0f 91       	pop	r16
    1780:	ff 90       	pop	r15
    1782:	ef 90       	pop	r14
    1784:	08 95       	ret

00001786 <u8g_NextPageLL>:
    1786:	ff 92       	push	r15
    1788:	0f 93       	push	r16
    178a:	1f 93       	push	r17
    178c:	cf 93       	push	r28
    178e:	df 93       	push	r29
    1790:	ec 01       	movw	r28, r24
    1792:	8b 01       	movw	r16, r22
    1794:	e9 a9       	ldd	r30, Y+49	; 0x31
    1796:	fa a9       	ldd	r31, Y+50	; 0x32
    1798:	82 e0       	ldi	r24, 0x02	; 2
    179a:	09 95       	icall
    179c:	e9 a9       	ldd	r30, Y+49	; 0x31
    179e:	fa a9       	ldd	r31, Y+50	; 0x32
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	09 95       	icall
    17a4:	d8 01       	movw	r26, r16
    17a6:	ed 91       	ld	r30, X+
    17a8:	fc 91       	ld	r31, X
    17aa:	ce 01       	movw	r24, r28
    17ac:	b8 01       	movw	r22, r16
    17ae:	45 e1       	ldi	r20, 0x15	; 21
    17b0:	20 e0       	ldi	r18, 0x00	; 0
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	09 95       	icall
    17b6:	f8 2e       	mov	r15, r24
    17b8:	88 23       	and	r24, r24
    17ba:	51 f0       	breq	.+20     	; 0x17d0 <u8g_NextPageLL+0x4a>
    17bc:	9e 01       	movw	r18, r28
    17be:	2d 5c       	subi	r18, 0xCD	; 205
    17c0:	3f 4f       	sbci	r19, 0xFF	; 255
    17c2:	d8 01       	movw	r26, r16
    17c4:	ed 91       	ld	r30, X+
    17c6:	fc 91       	ld	r31, X
    17c8:	ce 01       	movw	r24, r28
    17ca:	b8 01       	movw	r22, r16
    17cc:	47 e1       	ldi	r20, 0x17	; 23
    17ce:	09 95       	icall
    17d0:	e9 a9       	ldd	r30, Y+49	; 0x31
    17d2:	fa a9       	ldd	r31, Y+50	; 0x32
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	09 95       	icall
    17d8:	8f 2d       	mov	r24, r15
    17da:	cd b7       	in	r28, 0x3d	; 61
    17dc:	de b7       	in	r29, 0x3e	; 62
    17de:	e5 e0       	ldi	r30, 0x05	; 5
    17e0:	05 c6       	rjmp	.+3082   	; 0x23ec <__epilogue_restores__+0x1a>

000017e2 <u8g_DrawPixelLL>:
    17e2:	0f 93       	push	r16
    17e4:	1f 93       	push	r17
    17e6:	fc 01       	movw	r30, r24
    17e8:	db 01       	movw	r26, r22
    17ea:	44 8f       	std	Z+28, r20	; 0x1c
    17ec:	25 8f       	std	Z+29, r18	; 0x1d
    17ee:	0d 91       	ld	r16, X+
    17f0:	1c 91       	ld	r17, X
    17f2:	42 e3       	ldi	r20, 0x32	; 50
    17f4:	7c 96       	adiw	r30, 0x1c	; 28
    17f6:	9f 01       	movw	r18, r30
    17f8:	f8 01       	movw	r30, r16
    17fa:	09 95       	icall
    17fc:	1f 91       	pop	r17
    17fe:	0f 91       	pop	r16
    1800:	08 95       	ret

00001802 <u8g_Draw8PixelLL>:
    1802:	ef 92       	push	r14
    1804:	0f 93       	push	r16
    1806:	cf 93       	push	r28
    1808:	df 93       	push	r29
    180a:	fc 01       	movw	r30, r24
    180c:	44 8f       	std	Z+28, r20	; 0x1c
    180e:	25 8f       	std	Z+29, r18	; 0x1d
    1810:	07 8f       	std	Z+31, r16	; 0x1f
    1812:	e6 8e       	std	Z+30, r14	; 0x1e
    1814:	eb 01       	movw	r28, r22
    1816:	a8 81       	ld	r26, Y
    1818:	b9 81       	ldd	r27, Y+1	; 0x01
    181a:	4b e3       	ldi	r20, 0x3B	; 59
    181c:	7c 96       	adiw	r30, 0x1c	; 28
    181e:	9f 01       	movw	r18, r30
    1820:	fd 01       	movw	r30, r26
    1822:	09 95       	icall
    1824:	df 91       	pop	r29
    1826:	cf 91       	pop	r28
    1828:	0f 91       	pop	r16
    182a:	ef 90       	pop	r14
    182c:	08 95       	ret

0000182e <u8g_GetWidthLL>:
    182e:	a1 e0       	ldi	r26, 0x01	; 1
    1830:	b0 e0       	ldi	r27, 0x00	; 0
    1832:	ec e1       	ldi	r30, 0x1C	; 28
    1834:	fc e0       	ldi	r31, 0x0C	; 12
    1836:	c1 c5       	rjmp	.+2946   	; 0x23ba <__prologue_saves__+0x20>
    1838:	fb 01       	movw	r30, r22
    183a:	a0 81       	ld	r26, Z
    183c:	b1 81       	ldd	r27, Z+1	; 0x01
    183e:	46 e4       	ldi	r20, 0x46	; 70
    1840:	9e 01       	movw	r18, r28
    1842:	2f 5f       	subi	r18, 0xFF	; 255
    1844:	3f 4f       	sbci	r19, 0xFF	; 255
    1846:	fd 01       	movw	r30, r26
    1848:	09 95       	icall
    184a:	89 81       	ldd	r24, Y+1	; 0x01
    184c:	21 96       	adiw	r28, 0x01	; 1
    184e:	e2 e0       	ldi	r30, 0x02	; 2
    1850:	d0 c5       	rjmp	.+2976   	; 0x23f2 <__epilogue_restores__+0x20>

00001852 <u8g_GetHeightLL>:
    1852:	a1 e0       	ldi	r26, 0x01	; 1
    1854:	b0 e0       	ldi	r27, 0x00	; 0
    1856:	ee e2       	ldi	r30, 0x2E	; 46
    1858:	fc e0       	ldi	r31, 0x0C	; 12
    185a:	af c5       	rjmp	.+2910   	; 0x23ba <__prologue_saves__+0x20>
    185c:	fb 01       	movw	r30, r22
    185e:	a0 81       	ld	r26, Z
    1860:	b1 81       	ldd	r27, Z+1	; 0x01
    1862:	47 e4       	ldi	r20, 0x47	; 71
    1864:	9e 01       	movw	r18, r28
    1866:	2f 5f       	subi	r18, 0xFF	; 255
    1868:	3f 4f       	sbci	r19, 0xFF	; 255
    186a:	fd 01       	movw	r30, r26
    186c:	09 95       	icall
    186e:	89 81       	ldd	r24, Y+1	; 0x01
    1870:	21 96       	adiw	r28, 0x01	; 1
    1872:	e2 e0       	ldi	r30, 0x02	; 2
    1874:	be c5       	rjmp	.+2940   	; 0x23f2 <__epilogue_restores__+0x20>

00001876 <u8g_GetModeLL>:
    1876:	fb 01       	movw	r30, r22
    1878:	a0 81       	ld	r26, Z
    187a:	b1 81       	ldd	r27, Z+1	; 0x01
    187c:	48 e4       	ldi	r20, 0x48	; 72
    187e:	20 e0       	ldi	r18, 0x00	; 0
    1880:	30 e0       	ldi	r19, 0x00	; 0
    1882:	fd 01       	movw	r30, r26
    1884:	09 95       	icall
    1886:	08 95       	ret

00001888 <u8g_UpdateDimension>:
    1888:	0f 93       	push	r16
    188a:	1f 93       	push	r17
    188c:	8c 01       	movw	r16, r24
    188e:	dc 01       	movw	r26, r24
    1890:	12 96       	adiw	r26, 0x02	; 2
    1892:	6d 91       	ld	r22, X+
    1894:	7c 91       	ld	r23, X
    1896:	13 97       	sbiw	r26, 0x03	; 3
    1898:	ca df       	rcall	.-108    	; 0x182e <u8g_GetWidthLL>
    189a:	f8 01       	movw	r30, r16
    189c:	80 83       	st	Z, r24
    189e:	62 81       	ldd	r22, Z+2	; 0x02
    18a0:	73 81       	ldd	r23, Z+3	; 0x03
    18a2:	c8 01       	movw	r24, r16
    18a4:	d6 df       	rcall	.-84     	; 0x1852 <u8g_GetHeightLL>
    18a6:	d8 01       	movw	r26, r16
    18a8:	11 96       	adiw	r26, 0x01	; 1
    18aa:	8c 93       	st	X, r24
    18ac:	11 97       	sbiw	r26, 0x01	; 1
    18ae:	12 96       	adiw	r26, 0x02	; 2
    18b0:	6d 91       	ld	r22, X+
    18b2:	7c 91       	ld	r23, X
    18b4:	13 97       	sbiw	r26, 0x03	; 3
    18b6:	c8 01       	movw	r24, r16
    18b8:	de df       	rcall	.-68     	; 0x1876 <u8g_GetModeLL>
    18ba:	f8 01       	movw	r30, r16
    18bc:	83 87       	std	Z+11, r24	; 0x0b
    18be:	02 80       	ldd	r0, Z+2	; 0x02
    18c0:	f3 81       	ldd	r31, Z+3	; 0x03
    18c2:	e0 2d       	mov	r30, r0
    18c4:	a0 81       	ld	r26, Z
    18c6:	b1 81       	ldd	r27, Z+1	; 0x01
    18c8:	c8 01       	movw	r24, r16
    18ca:	bf 01       	movw	r22, r30
    18cc:	47 e1       	ldi	r20, 0x17	; 23
    18ce:	0d 5c       	subi	r16, 0xCD	; 205
    18d0:	1f 4f       	sbci	r17, 0xFF	; 255
    18d2:	98 01       	movw	r18, r16
    18d4:	fd 01       	movw	r30, r26
    18d6:	09 95       	icall
    18d8:	1f 91       	pop	r17
    18da:	0f 91       	pop	r16
    18dc:	08 95       	ret

000018de <u8g_Begin>:
    18de:	cf 93       	push	r28
    18e0:	df 93       	push	r29
    18e2:	ec 01       	movw	r28, r24
    18e4:	6a 81       	ldd	r22, Y+2	; 0x02
    18e6:	7b 81       	ldd	r23, Y+3	; 0x03
    18e8:	f0 de       	rcall	.-544    	; 0x16ca <u8g_InitLL>
    18ea:	88 23       	and	r24, r24
    18ec:	19 f0       	breq	.+6      	; 0x18f4 <u8g_Begin+0x16>
    18ee:	ce 01       	movw	r24, r28
    18f0:	cb df       	rcall	.-106    	; 0x1888 <u8g_UpdateDimension>
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	df 91       	pop	r29
    18f6:	cf 91       	pop	r28
    18f8:	08 95       	ret

000018fa <u8g_FirstPage>:
    18fa:	fc 01       	movw	r30, r24
    18fc:	62 81       	ldd	r22, Z+2	; 0x02
    18fe:	73 81       	ldd	r23, Z+3	; 0x03
    1900:	0f cf       	rjmp	.-482    	; 0x1720 <u8g_FirstPageLL>
    1902:	08 95       	ret

00001904 <u8g_NextPage>:
    1904:	cf 93       	push	r28
    1906:	df 93       	push	r29
    1908:	ec 01       	movw	r28, r24
    190a:	ee 85       	ldd	r30, Y+14	; 0x0e
    190c:	ff 85       	ldd	r31, Y+15	; 0x0f
    190e:	30 97       	sbiw	r30, 0x00	; 0
    1910:	09 f0       	breq	.+2      	; 0x1914 <u8g_NextPage+0x10>
    1912:	09 95       	icall
    1914:	6a 81       	ldd	r22, Y+2	; 0x02
    1916:	7b 81       	ldd	r23, Y+3	; 0x03
    1918:	ce 01       	movw	r24, r28
    191a:	35 df       	rcall	.-406    	; 0x1786 <u8g_NextPageLL>
    191c:	df 91       	pop	r29
    191e:	cf 91       	pop	r28
    1920:	08 95       	ret

00001922 <u8g_DrawPixel>:
    1922:	fc 01       	movw	r30, r24
    1924:	36 2f       	mov	r19, r22
    1926:	24 2f       	mov	r18, r20
    1928:	62 81       	ldd	r22, Z+2	; 0x02
    192a:	73 81       	ldd	r23, Z+3	; 0x03
    192c:	43 2f       	mov	r20, r19
    192e:	59 cf       	rjmp	.-334    	; 0x17e2 <u8g_DrawPixelLL>
    1930:	08 95       	ret

00001932 <u8g_Draw8Pixel>:
    1932:	ef 92       	push	r14
    1934:	0f 93       	push	r16
    1936:	fc 01       	movw	r30, r24
    1938:	36 2f       	mov	r19, r22
    193a:	54 2f       	mov	r21, r20
    193c:	a2 2f       	mov	r26, r18
    193e:	e0 2e       	mov	r14, r16
    1940:	62 81       	ldd	r22, Z+2	; 0x02
    1942:	73 81       	ldd	r23, Z+3	; 0x03
    1944:	43 2f       	mov	r20, r19
    1946:	25 2f       	mov	r18, r21
    1948:	0a 2f       	mov	r16, r26
    194a:	5b df       	rcall	.-330    	; 0x1802 <u8g_Draw8PixelLL>
    194c:	0f 91       	pop	r16
    194e:	ef 90       	pop	r14
    1950:	08 95       	ret

00001952 <u8g_init_data>:
    1952:	1f 93       	push	r17
    1954:	cf 93       	push	r28
    1956:	df 93       	push	r29
    1958:	ec 01       	movw	r28, r24
    195a:	1d 82       	std	Y+5, r1	; 0x05
    195c:	1c 82       	std	Y+4, r1	; 0x04
    195e:	1f 82       	std	Y+7, r1	; 0x07
    1960:	1e 82       	std	Y+6, r1	; 0x06
    1962:	19 86       	std	Y+9, r1	; 0x09
    1964:	81 e0       	ldi	r24, 0x01	; 1
    1966:	88 87       	std	Y+8, r24	; 0x08
    1968:	82 e2       	ldi	r24, 0x22	; 34
    196a:	8a 87       	std	Y+10, r24	; 0x0a
    196c:	1f 86       	std	Y+15, r1	; 0x0f
    196e:	1e 86       	std	Y+14, r1	; 0x0e
    1970:	fe 01       	movw	r30, r28
    1972:	b3 96       	adiw	r30, 0x23	; 35
    1974:	80 e0       	ldi	r24, 0x00	; 0
    1976:	9f ef       	ldi	r25, 0xFF	; 255
    1978:	91 93       	st	Z+, r25
    197a:	8f 5f       	subi	r24, 0xFF	; 255
    197c:	8e 30       	cpi	r24, 0x0E	; 14
    197e:	e1 f7       	brne	.-8      	; 0x1978 <u8g_init_data+0x26>
    1980:	11 e0       	ldi	r17, 0x01	; 1
    1982:	18 a3       	std	Y+32, r17	; 0x20
    1984:	ce 01       	movw	r24, r28
    1986:	c2 dd       	rcall	.-1148   	; 0x150c <u8g_SetFontPosBaseline>
    1988:	1f 8b       	std	Y+23, r17	; 0x17
    198a:	18 8e       	std	Y+24, r1	; 0x18
    198c:	19 8e       	std	Y+25, r1	; 0x19
    198e:	80 e4       	ldi	r24, 0x40	; 64
    1990:	8a 8f       	std	Y+26, r24	; 0x1a
    1992:	1b 8e       	std	Y+27, r1	; 0x1b
    1994:	88 e7       	ldi	r24, 0x78	; 120
    1996:	9f e0       	ldi	r25, 0x0F	; 15
    1998:	9a ab       	std	Y+50, r25	; 0x32
    199a:	89 ab       	std	Y+49, r24	; 0x31
    199c:	df 91       	pop	r29
    199e:	cf 91       	pop	r28
    19a0:	1f 91       	pop	r17
    19a2:	08 95       	ret

000019a4 <u8g_InitSPI>:
    19a4:	8f 92       	push	r8
    19a6:	9f 92       	push	r9
    19a8:	af 92       	push	r10
    19aa:	bf 92       	push	r11
    19ac:	cf 92       	push	r12
    19ae:	ef 92       	push	r14
    19b0:	ff 92       	push	r15
    19b2:	0f 93       	push	r16
    19b4:	1f 93       	push	r17
    19b6:	5c 01       	movw	r10, r24
    19b8:	4b 01       	movw	r8, r22
    19ba:	14 2f       	mov	r17, r20
    19bc:	f2 2e       	mov	r15, r18
    19be:	c9 df       	rcall	.-110    	; 0x1952 <u8g_init_data>
    19c0:	f5 01       	movw	r30, r10
    19c2:	93 82       	std	Z+3, r9	; 0x03
    19c4:	82 82       	std	Z+2, r8	; 0x02
    19c6:	17 a3       	std	Z+39, r17	; 0x27
    19c8:	f0 a6       	std	Z+40, r15	; 0x28
    19ca:	05 a3       	std	Z+37, r16	; 0x25
    19cc:	e4 a2       	std	Z+36, r14	; 0x24
    19ce:	c3 a2       	std	Z+35, r12	; 0x23
    19d0:	c5 01       	movw	r24, r10
    19d2:	85 df       	rcall	.-246    	; 0x18de <u8g_Begin>
    19d4:	1f 91       	pop	r17
    19d6:	0f 91       	pop	r16
    19d8:	ff 90       	pop	r15
    19da:	ef 90       	pop	r14
    19dc:	cf 90       	pop	r12
    19de:	bf 90       	pop	r11
    19e0:	af 90       	pop	r10
    19e2:	9f 90       	pop	r9
    19e4:	8f 90       	pop	r8
    19e6:	08 95       	ret

000019e8 <u8g_pb8h1_set_pixel>:
    19e8:	fc 01       	movw	r30, r24
    19ea:	a6 81       	ldd	r26, Z+6	; 0x06
    19ec:	b7 81       	ldd	r27, Z+7	; 0x07
    19ee:	85 81       	ldd	r24, Z+5	; 0x05
    19f0:	86 95       	lsr	r24
    19f2:	86 95       	lsr	r24
    19f4:	86 95       	lsr	r24
    19f6:	92 81       	ldd	r25, Z+2	; 0x02
    19f8:	49 1b       	sub	r20, r25
    19fa:	48 9f       	mul	r20, r24
    19fc:	40 2d       	mov	r20, r0
    19fe:	11 24       	eor	r1, r1
    1a00:	a4 0f       	add	r26, r20
    1a02:	b1 1d       	adc	r27, r1
    1a04:	36 2f       	mov	r19, r22
    1a06:	37 70       	andi	r19, 0x07	; 7
    1a08:	80 e8       	ldi	r24, 0x80	; 128
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	02 c0       	rjmp	.+4      	; 0x1a12 <u8g_pb8h1_set_pixel+0x2a>
    1a0e:	95 95       	asr	r25
    1a10:	87 95       	ror	r24
    1a12:	3a 95       	dec	r19
    1a14:	e2 f7       	brpl	.-8      	; 0x1a0e <u8g_pb8h1_set_pixel+0x26>
    1a16:	66 95       	lsr	r22
    1a18:	66 95       	lsr	r22
    1a1a:	66 95       	lsr	r22
    1a1c:	a6 0f       	add	r26, r22
    1a1e:	b1 1d       	adc	r27, r1
    1a20:	3c 91       	ld	r19, X
    1a22:	22 23       	and	r18, r18
    1a24:	11 f0       	breq	.+4      	; 0x1a2a <u8g_pb8h1_set_pixel+0x42>
    1a26:	38 2b       	or	r19, r24
    1a28:	02 c0       	rjmp	.+4      	; 0x1a2e <u8g_pb8h1_set_pixel+0x46>
    1a2a:	80 95       	com	r24
    1a2c:	38 23       	and	r19, r24
    1a2e:	3c 93       	st	X, r19
    1a30:	08 95       	ret

00001a32 <u8g_pb8h1_SetPixel>:
    1a32:	fc 01       	movw	r30, r24
    1a34:	db 01       	movw	r26, r22
    1a36:	11 96       	adiw	r26, 0x01	; 1
    1a38:	4c 91       	ld	r20, X
    1a3a:	11 97       	sbiw	r26, 0x01	; 1
    1a3c:	82 81       	ldd	r24, Z+2	; 0x02
    1a3e:	48 17       	cp	r20, r24
    1a40:	58 f0       	brcs	.+22     	; 0x1a58 <u8g_pb8h1_SetPixel+0x26>
    1a42:	83 81       	ldd	r24, Z+3	; 0x03
    1a44:	84 17       	cp	r24, r20
    1a46:	40 f0       	brcs	.+16     	; 0x1a58 <u8g_pb8h1_SetPixel+0x26>
    1a48:	6c 91       	ld	r22, X
    1a4a:	85 81       	ldd	r24, Z+5	; 0x05
    1a4c:	68 17       	cp	r22, r24
    1a4e:	20 f4       	brcc	.+8      	; 0x1a58 <u8g_pb8h1_SetPixel+0x26>
    1a50:	cf 01       	movw	r24, r30
    1a52:	14 96       	adiw	r26, 0x04	; 4
    1a54:	2c 91       	ld	r18, X
    1a56:	c8 cf       	rjmp	.-112    	; 0x19e8 <u8g_pb8h1_set_pixel>
    1a58:	08 95       	ret

00001a5a <u8g_pb8h1_Set8PixelOpt2>:
    1a5a:	cf 92       	push	r12
    1a5c:	df 92       	push	r13
    1a5e:	ff 92       	push	r15
    1a60:	0f 93       	push	r16
    1a62:	1f 93       	push	r17
    1a64:	cf 93       	push	r28
    1a66:	df 93       	push	r29
    1a68:	6c 01       	movw	r12, r24
    1a6a:	eb 01       	movw	r28, r22
    1a6c:	fa 80       	ldd	r15, Y+2	; 0x02
    1a6e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a70:	81 30       	cpi	r24, 0x01	; 1
    1a72:	61 f0       	breq	.+24     	; 0x1a8c <u8g_pb8h1_Set8PixelOpt2+0x32>
    1a74:	81 30       	cpi	r24, 0x01	; 1
    1a76:	28 f0       	brcs	.+10     	; 0x1a82 <u8g_pb8h1_Set8PixelOpt2+0x28>
    1a78:	82 30       	cpi	r24, 0x02	; 2
    1a7a:	59 f0       	breq	.+22     	; 0x1a92 <u8g_pb8h1_Set8PixelOpt2+0x38>
    1a7c:	83 30       	cpi	r24, 0x03	; 3
    1a7e:	19 f4       	brne	.+6      	; 0x1a86 <u8g_pb8h1_Set8PixelOpt2+0x2c>
    1a80:	0a c0       	rjmp	.+20     	; 0x1a96 <u8g_pb8h1_Set8PixelOpt2+0x3c>
    1a82:	01 e0       	ldi	r16, 0x01	; 1
    1a84:	01 c0       	rjmp	.+2      	; 0x1a88 <u8g_pb8h1_Set8PixelOpt2+0x2e>
    1a86:	00 e0       	ldi	r16, 0x00	; 0
    1a88:	10 e0       	ldi	r17, 0x00	; 0
    1a8a:	07 c0       	rjmp	.+14     	; 0x1a9a <u8g_pb8h1_Set8PixelOpt2+0x40>
    1a8c:	00 e0       	ldi	r16, 0x00	; 0
    1a8e:	11 e0       	ldi	r17, 0x01	; 1
    1a90:	04 c0       	rjmp	.+8      	; 0x1a9a <u8g_pb8h1_Set8PixelOpt2+0x40>
    1a92:	0f ef       	ldi	r16, 0xFF	; 255
    1a94:	f9 cf       	rjmp	.-14     	; 0x1a88 <u8g_pb8h1_Set8PixelOpt2+0x2e>
    1a96:	00 e0       	ldi	r16, 0x00	; 0
    1a98:	1f ef       	ldi	r17, 0xFF	; 255
    1a9a:	f7 fe       	sbrs	r15, 7
    1a9c:	03 c0       	rjmp	.+6      	; 0x1aa4 <u8g_pb8h1_Set8PixelOpt2+0x4a>
    1a9e:	c6 01       	movw	r24, r12
    1aa0:	be 01       	movw	r22, r28
    1aa2:	c7 df       	rcall	.-114    	; 0x1a32 <u8g_pb8h1_SetPixel>
    1aa4:	88 81       	ld	r24, Y
    1aa6:	80 0f       	add	r24, r16
    1aa8:	88 83       	st	Y, r24
    1aaa:	89 81       	ldd	r24, Y+1	; 0x01
    1aac:	81 0f       	add	r24, r17
    1aae:	89 83       	std	Y+1, r24	; 0x01
    1ab0:	ff 0c       	add	r15, r15
    1ab2:	99 f7       	brne	.-26     	; 0x1a9a <u8g_pb8h1_Set8PixelOpt2+0x40>
    1ab4:	df 91       	pop	r29
    1ab6:	cf 91       	pop	r28
    1ab8:	1f 91       	pop	r17
    1aba:	0f 91       	pop	r16
    1abc:	ff 90       	pop	r15
    1abe:	df 90       	pop	r13
    1ac0:	cf 90       	pop	r12
    1ac2:	08 95       	ret

00001ac4 <u8g_dev_pb8h1_base_fn>:
    1ac4:	0f 93       	push	r16
    1ac6:	1f 93       	push	r17
    1ac8:	cf 93       	push	r28
    1aca:	df 93       	push	r29
    1acc:	fb 01       	movw	r30, r22
    1ace:	89 01       	movw	r16, r18
    1ad0:	c2 81       	ldd	r28, Z+2	; 0x02
    1ad2:	d3 81       	ldd	r29, Z+3	; 0x03
    1ad4:	42 33       	cpi	r20, 0x32	; 50
    1ad6:	c1 f0       	breq	.+48     	; 0x1b08 <u8g_dev_pb8h1_base_fn+0x44>
    1ad8:	43 33       	cpi	r20, 0x33	; 51
    1ada:	38 f4       	brcc	.+14     	; 0x1aea <u8g_dev_pb8h1_base_fn+0x26>
    1adc:	45 31       	cpi	r20, 0x15	; 21
    1ade:	e9 f0       	breq	.+58     	; 0x1b1a <u8g_dev_pb8h1_base_fn+0x56>
    1ae0:	47 31       	cpi	r20, 0x17	; 23
    1ae2:	11 f1       	breq	.+68     	; 0x1b28 <u8g_dev_pb8h1_base_fn+0x64>
    1ae4:	44 31       	cpi	r20, 0x14	; 20
    1ae6:	49 f5       	brne	.+82     	; 0x1b3a <u8g_dev_pb8h1_base_fn+0x76>
    1ae8:	13 c0       	rjmp	.+38     	; 0x1b10 <u8g_dev_pb8h1_base_fn+0x4c>
    1aea:	46 34       	cpi	r20, 0x46	; 70
    1aec:	09 f1       	breq	.+66     	; 0x1b30 <u8g_dev_pb8h1_base_fn+0x6c>
    1aee:	47 34       	cpi	r20, 0x47	; 71
    1af0:	09 f1       	breq	.+66     	; 0x1b34 <u8g_dev_pb8h1_base_fn+0x70>
    1af2:	4b 33       	cpi	r20, 0x3B	; 59
    1af4:	11 f5       	brne	.+68     	; 0x1b3a <u8g_dev_pb8h1_base_fn+0x76>
    1af6:	ce 01       	movw	r24, r28
    1af8:	b9 01       	movw	r22, r18
    1afa:	3f d4       	rcall	.+2174   	; 0x237a <u8g_pb_Is8PixelVisible>
    1afc:	88 23       	and	r24, r24
    1afe:	e9 f0       	breq	.+58     	; 0x1b3a <u8g_dev_pb8h1_base_fn+0x76>
    1b00:	ce 01       	movw	r24, r28
    1b02:	b8 01       	movw	r22, r16
    1b04:	aa df       	rcall	.-172    	; 0x1a5a <u8g_pb8h1_Set8PixelOpt2>
    1b06:	19 c0       	rjmp	.+50     	; 0x1b3a <u8g_dev_pb8h1_base_fn+0x76>
    1b08:	ce 01       	movw	r24, r28
    1b0a:	b9 01       	movw	r22, r18
    1b0c:	92 df       	rcall	.-220    	; 0x1a32 <u8g_pb8h1_SetPixel>
    1b0e:	15 c0       	rjmp	.+42     	; 0x1b3a <u8g_dev_pb8h1_base_fn+0x76>
    1b10:	ce 01       	movw	r24, r28
    1b12:	01 d4       	rcall	.+2050   	; 0x2316 <u8g_pb_Clear>
    1b14:	ce 01       	movw	r24, r28
    1b16:	e2 d3       	rcall	.+1988   	; 0x22dc <u8g_page_First>
    1b18:	10 c0       	rjmp	.+32     	; 0x1b3a <u8g_dev_pb8h1_base_fn+0x76>
    1b1a:	ce 01       	movw	r24, r28
    1b1c:	e6 d3       	rcall	.+1996   	; 0x22ea <u8g_page_Next>
    1b1e:	88 23       	and	r24, r24
    1b20:	69 f0       	breq	.+26     	; 0x1b3c <u8g_dev_pb8h1_base_fn+0x78>
    1b22:	ce 01       	movw	r24, r28
    1b24:	f8 d3       	rcall	.+2032   	; 0x2316 <u8g_pb_Clear>
    1b26:	09 c0       	rjmp	.+18     	; 0x1b3a <u8g_dev_pb8h1_base_fn+0x76>
    1b28:	ce 01       	movw	r24, r28
    1b2a:	b9 01       	movw	r22, r18
    1b2c:	16 d4       	rcall	.+2092   	; 0x235a <u8g_pb_GetPageBox>
    1b2e:	05 c0       	rjmp	.+10     	; 0x1b3a <u8g_dev_pb8h1_base_fn+0x76>
    1b30:	8d 81       	ldd	r24, Y+5	; 0x05
    1b32:	01 c0       	rjmp	.+2      	; 0x1b36 <u8g_dev_pb8h1_base_fn+0x72>
    1b34:	89 81       	ldd	r24, Y+1	; 0x01
    1b36:	f8 01       	movw	r30, r16
    1b38:	80 83       	st	Z, r24
    1b3a:	81 e0       	ldi	r24, 0x01	; 1
    1b3c:	df 91       	pop	r29
    1b3e:	cf 91       	pop	r28
    1b40:	1f 91       	pop	r17
    1b42:	0f 91       	pop	r16
    1b44:	08 95       	ret

00001b46 <u8g_draw_vline>:
    1b46:	a0 e0       	ldi	r26, 0x00	; 0
    1b48:	b0 e0       	ldi	r27, 0x00	; 0
    1b4a:	e8 ea       	ldi	r30, 0xA8	; 168
    1b4c:	fd e0       	ldi	r31, 0x0D	; 13
    1b4e:	2f c4       	rjmp	.+2142   	; 0x23ae <__prologue_saves__+0x14>
    1b50:	ec 01       	movw	r28, r24
    1b52:	c6 2e       	mov	r12, r22
    1b54:	d4 2e       	mov	r13, r20
    1b56:	e2 2e       	mov	r14, r18
    1b58:	f4 2e       	mov	r15, r20
    1b5a:	12 2f       	mov	r17, r18
    1b5c:	09 c0       	rjmp	.+18     	; 0x1b70 <u8g_draw_vline+0x2a>
    1b5e:	ce 01       	movw	r24, r28
    1b60:	6c 2d       	mov	r22, r12
    1b62:	4f 2d       	mov	r20, r15
    1b64:	21 e0       	ldi	r18, 0x01	; 1
    1b66:	0f ef       	ldi	r16, 0xFF	; 255
    1b68:	e4 de       	rcall	.-568    	; 0x1932 <u8g_Draw8Pixel>
    1b6a:	18 50       	subi	r17, 0x08	; 8
    1b6c:	88 e0       	ldi	r24, 0x08	; 8
    1b6e:	f8 0e       	add	r15, r24
    1b70:	18 30       	cpi	r17, 0x08	; 8
    1b72:	a8 f7       	brcc	.-22     	; 0x1b5e <u8g_draw_vline+0x18>
    1b74:	9e 2d       	mov	r25, r14
    1b76:	97 70       	andi	r25, 0x07	; 7
    1b78:	4e 2d       	mov	r20, r14
    1b7a:	48 7f       	andi	r20, 0xF8	; 248
    1b7c:	4d 0d       	add	r20, r13
    1b7e:	99 23       	and	r25, r25
    1b80:	79 f0       	breq	.+30     	; 0x1ba0 <u8g_draw_vline+0x5a>
    1b82:	87 e0       	ldi	r24, 0x07	; 7
    1b84:	98 27       	eor	r25, r24
    1b86:	9f 5f       	subi	r25, 0xFF	; 255
    1b88:	97 70       	andi	r25, 0x07	; 7
    1b8a:	0f ef       	ldi	r16, 0xFF	; 255
    1b8c:	10 e0       	ldi	r17, 0x00	; 0
    1b8e:	02 c0       	rjmp	.+4      	; 0x1b94 <u8g_draw_vline+0x4e>
    1b90:	00 0f       	add	r16, r16
    1b92:	11 1f       	adc	r17, r17
    1b94:	9a 95       	dec	r25
    1b96:	e2 f7       	brpl	.-8      	; 0x1b90 <u8g_draw_vline+0x4a>
    1b98:	ce 01       	movw	r24, r28
    1b9a:	6c 2d       	mov	r22, r12
    1b9c:	21 e0       	ldi	r18, 0x01	; 1
    1b9e:	c9 de       	rcall	.-622    	; 0x1932 <u8g_Draw8Pixel>
    1ba0:	cd b7       	in	r28, 0x3d	; 61
    1ba2:	de b7       	in	r29, 0x3e	; 62
    1ba4:	e8 e0       	ldi	r30, 0x08	; 8
    1ba6:	1f c4       	rjmp	.+2110   	; 0x23e6 <__epilogue_restores__+0x14>

00001ba8 <u8g_DrawVLine>:
    1ba8:	ef 92       	push	r14
    1baa:	ff 92       	push	r15
    1bac:	0f 93       	push	r16
    1bae:	1f 93       	push	r17
    1bb0:	cf 93       	push	r28
    1bb2:	df 93       	push	r29
    1bb4:	ec 01       	movw	r28, r24
    1bb6:	16 2f       	mov	r17, r22
    1bb8:	f4 2e       	mov	r15, r20
    1bba:	e2 2e       	mov	r14, r18
    1bbc:	21 e0       	ldi	r18, 0x01	; 1
    1bbe:	0e 2d       	mov	r16, r14
    1bc0:	89 da       	rcall	.-2798   	; 0x10d4 <u8g_IsBBXIntersection>
    1bc2:	88 23       	and	r24, r24
    1bc4:	29 f0       	breq	.+10     	; 0x1bd0 <u8g_DrawVLine+0x28>
    1bc6:	ce 01       	movw	r24, r28
    1bc8:	61 2f       	mov	r22, r17
    1bca:	4f 2d       	mov	r20, r15
    1bcc:	2e 2d       	mov	r18, r14
    1bce:	bb df       	rcall	.-138    	; 0x1b46 <u8g_draw_vline>
    1bd0:	cd b7       	in	r28, 0x3d	; 61
    1bd2:	de b7       	in	r29, 0x3e	; 62
    1bd4:	e6 e0       	ldi	r30, 0x06	; 6
    1bd6:	09 c4       	rjmp	.+2066   	; 0x23ea <__epilogue_restores__+0x18>

00001bd8 <u8g_dev_rot_dummy_fn>:
    1bd8:	80 e0       	ldi	r24, 0x00	; 0
    1bda:	08 95       	ret

00001bdc <u8g_dev_rot180_fn>:
    1bdc:	af 92       	push	r10
    1bde:	bf 92       	push	r11
    1be0:	cf 92       	push	r12
    1be2:	df 92       	push	r13
    1be4:	ff 92       	push	r15
    1be6:	0f 93       	push	r16
    1be8:	1f 93       	push	r17
    1bea:	cf 93       	push	r28
    1bec:	df 93       	push	r29
    1bee:	6c 01       	movw	r12, r24
    1bf0:	fb 01       	movw	r30, r22
    1bf2:	f4 2e       	mov	r15, r20
    1bf4:	e9 01       	movw	r28, r18
    1bf6:	a2 80       	ldd	r10, Z+2	; 0x02
    1bf8:	b3 80       	ldd	r11, Z+3	; 0x03
    1bfa:	82 e3       	ldi	r24, 0x32	; 50
    1bfc:	48 17       	cp	r20, r24
    1bfe:	09 f4       	brne	.+2      	; 0x1c02 <u8g_dev_rot180_fn+0x26>
    1c00:	48 c0       	rjmp	.+144    	; 0x1c92 <u8g_dev_rot180_fn+0xb6>
    1c02:	84 17       	cp	r24, r20
    1c04:	60 f0       	brcs	.+24     	; 0x1c1e <u8g_dev_rot180_fn+0x42>
    1c06:	8c e2       	ldi	r24, 0x2C	; 44
    1c08:	48 17       	cp	r20, r24
    1c0a:	09 f4       	brne	.+2      	; 0x1c0e <u8g_dev_rot180_fn+0x32>
    1c0c:	42 c0       	rjmp	.+132    	; 0x1c92 <u8g_dev_rot180_fn+0xb6>
    1c0e:	8d e2       	ldi	r24, 0x2D	; 45
    1c10:	48 17       	cp	r20, r24
    1c12:	09 f4       	brne	.+2      	; 0x1c16 <u8g_dev_rot180_fn+0x3a>
    1c14:	4e c0       	rjmp	.+156    	; 0x1cb2 <u8g_dev_rot180_fn+0xd6>
    1c16:	87 e1       	ldi	r24, 0x17	; 23
    1c18:	48 17       	cp	r20, r24
    1c1a:	59 f4       	brne	.+22     	; 0x1c32 <u8g_dev_rot180_fn+0x56>
    1c1c:	10 c0       	rjmp	.+32     	; 0x1c3e <u8g_dev_rot180_fn+0x62>
    1c1e:	86 e4       	ldi	r24, 0x46	; 70
    1c20:	48 17       	cp	r20, r24
    1c22:	71 f1       	breq	.+92     	; 0x1c80 <u8g_dev_rot180_fn+0xa4>
    1c24:	87 e4       	ldi	r24, 0x47	; 71
    1c26:	48 17       	cp	r20, r24
    1c28:	79 f1       	breq	.+94     	; 0x1c88 <u8g_dev_rot180_fn+0xac>
    1c2a:	8b e3       	ldi	r24, 0x3B	; 59
    1c2c:	48 17       	cp	r20, r24
    1c2e:	09 f4       	brne	.+2      	; 0x1c32 <u8g_dev_rot180_fn+0x56>
    1c30:	40 c0       	rjmp	.+128    	; 0x1cb2 <u8g_dev_rot180_fn+0xd6>
    1c32:	c6 01       	movw	r24, r12
    1c34:	b5 01       	movw	r22, r10
    1c36:	4f 2d       	mov	r20, r15
    1c38:	9e 01       	movw	r18, r28
    1c3a:	41 dd       	rcall	.-1406   	; 0x16be <u8g_call_dev_fn>
    1c3c:	53 c0       	rjmp	.+166    	; 0x1ce4 <u8g_dev_rot180_fn+0x108>
    1c3e:	c6 01       	movw	r24, r12
    1c40:	b5 01       	movw	r22, r10
    1c42:	47 e1       	ldi	r20, 0x17	; 23
    1c44:	3c dd       	rcall	.-1416   	; 0x16be <u8g_call_dev_fn>
    1c46:	c6 01       	movw	r24, r12
    1c48:	b5 01       	movw	r22, r10
    1c4a:	f1 dd       	rcall	.-1054   	; 0x182e <u8g_GetWidthLL>
    1c4c:	fa 80       	ldd	r15, Y+2	; 0x02
    1c4e:	f0 94       	com	r15
    1c50:	f8 0e       	add	r15, r24
    1c52:	c6 01       	movw	r24, r12
    1c54:	b5 01       	movw	r22, r10
    1c56:	eb dd       	rcall	.-1066   	; 0x182e <u8g_GetWidthLL>
    1c58:	08 81       	ld	r16, Y
    1c5a:	00 95       	com	r16
    1c5c:	08 0f       	add	r16, r24
    1c5e:	c6 01       	movw	r24, r12
    1c60:	b5 01       	movw	r22, r10
    1c62:	f7 dd       	rcall	.-1042   	; 0x1852 <u8g_GetHeightLL>
    1c64:	1b 81       	ldd	r17, Y+3	; 0x03
    1c66:	10 95       	com	r17
    1c68:	18 0f       	add	r17, r24
    1c6a:	c6 01       	movw	r24, r12
    1c6c:	b5 01       	movw	r22, r10
    1c6e:	f1 dd       	rcall	.-1054   	; 0x1852 <u8g_GetHeightLL>
    1c70:	99 81       	ldd	r25, Y+1	; 0x01
    1c72:	90 95       	com	r25
    1c74:	98 0f       	add	r25, r24
    1c76:	9b 83       	std	Y+3, r25	; 0x03
    1c78:	19 83       	std	Y+1, r17	; 0x01
    1c7a:	0a 83       	std	Y+2, r16	; 0x02
    1c7c:	f8 82       	st	Y, r15
    1c7e:	31 c0       	rjmp	.+98     	; 0x1ce2 <u8g_dev_rot180_fn+0x106>
    1c80:	c6 01       	movw	r24, r12
    1c82:	b5 01       	movw	r22, r10
    1c84:	d4 dd       	rcall	.-1112   	; 0x182e <u8g_GetWidthLL>
    1c86:	03 c0       	rjmp	.+6      	; 0x1c8e <u8g_dev_rot180_fn+0xb2>
    1c88:	c6 01       	movw	r24, r12
    1c8a:	b5 01       	movw	r22, r10
    1c8c:	e2 dd       	rcall	.-1084   	; 0x1852 <u8g_GetHeightLL>
    1c8e:	88 83       	st	Y, r24
    1c90:	28 c0       	rjmp	.+80     	; 0x1ce2 <u8g_dev_rot180_fn+0x106>
    1c92:	c6 01       	movw	r24, r12
    1c94:	b5 01       	movw	r22, r10
    1c96:	dd dd       	rcall	.-1094   	; 0x1852 <u8g_GetHeightLL>
    1c98:	08 2f       	mov	r16, r24
    1c9a:	19 81       	ldd	r17, Y+1	; 0x01
    1c9c:	10 95       	com	r17
    1c9e:	c6 01       	movw	r24, r12
    1ca0:	b5 01       	movw	r22, r10
    1ca2:	c5 dd       	rcall	.-1142   	; 0x182e <u8g_GetWidthLL>
    1ca4:	98 81       	ld	r25, Y
    1ca6:	90 95       	com	r25
    1ca8:	98 0f       	add	r25, r24
    1caa:	98 83       	st	Y, r25
    1cac:	10 0f       	add	r17, r16
    1cae:	19 83       	std	Y+1, r17	; 0x01
    1cb0:	13 c0       	rjmp	.+38     	; 0x1cd8 <u8g_dev_rot180_fn+0xfc>
    1cb2:	c6 01       	movw	r24, r12
    1cb4:	b5 01       	movw	r22, r10
    1cb6:	cd dd       	rcall	.-1126   	; 0x1852 <u8g_GetHeightLL>
    1cb8:	08 2f       	mov	r16, r24
    1cba:	19 81       	ldd	r17, Y+1	; 0x01
    1cbc:	10 95       	com	r17
    1cbe:	c6 01       	movw	r24, r12
    1cc0:	b5 01       	movw	r22, r10
    1cc2:	b5 dd       	rcall	.-1174   	; 0x182e <u8g_GetWidthLL>
    1cc4:	98 81       	ld	r25, Y
    1cc6:	90 95       	com	r25
    1cc8:	98 0f       	add	r25, r24
    1cca:	98 83       	st	Y, r25
    1ccc:	10 0f       	add	r17, r16
    1cce:	19 83       	std	Y+1, r17	; 0x01
    1cd0:	8b 81       	ldd	r24, Y+3	; 0x03
    1cd2:	8e 5f       	subi	r24, 0xFE	; 254
    1cd4:	83 70       	andi	r24, 0x03	; 3
    1cd6:	8b 83       	std	Y+3, r24	; 0x03
    1cd8:	c6 01       	movw	r24, r12
    1cda:	b5 01       	movw	r22, r10
    1cdc:	4f 2d       	mov	r20, r15
    1cde:	9e 01       	movw	r18, r28
    1ce0:	ee dc       	rcall	.-1572   	; 0x16be <u8g_call_dev_fn>
    1ce2:	81 e0       	ldi	r24, 0x01	; 1
    1ce4:	df 91       	pop	r29
    1ce6:	cf 91       	pop	r28
    1ce8:	1f 91       	pop	r17
    1cea:	0f 91       	pop	r16
    1cec:	ff 90       	pop	r15
    1cee:	df 90       	pop	r13
    1cf0:	cf 90       	pop	r12
    1cf2:	bf 90       	pop	r11
    1cf4:	af 90       	pop	r10
    1cf6:	08 95       	ret

00001cf8 <u8g_SetRot180>:
    1cf8:	fc 01       	movw	r30, r24
    1cfa:	82 81       	ldd	r24, Z+2	; 0x02
    1cfc:	93 81       	ldd	r25, Z+3	; 0x03
    1cfe:	21 e0       	ldi	r18, 0x01	; 1
    1d00:	81 37       	cpi	r24, 0x71	; 113
    1d02:	92 07       	cpc	r25, r18
    1d04:	41 f0       	breq	.+16     	; 0x1d16 <u8g_SetRot180+0x1e>
    1d06:	90 93 74 01 	sts	0x0174, r25
    1d0a:	80 93 73 01 	sts	0x0173, r24
    1d0e:	81 e7       	ldi	r24, 0x71	; 113
    1d10:	91 e0       	ldi	r25, 0x01	; 1
    1d12:	93 83       	std	Z+3, r25	; 0x03
    1d14:	82 83       	std	Z+2, r24	; 0x02
    1d16:	8e ee       	ldi	r24, 0xEE	; 238
    1d18:	9d e0       	ldi	r25, 0x0D	; 13
    1d1a:	90 93 72 01 	sts	0x0172, r25
    1d1e:	80 93 71 01 	sts	0x0171, r24
    1d22:	cf 01       	movw	r24, r30
    1d24:	b1 cd       	rjmp	.-1182   	; 0x1888 <u8g_UpdateDimension>
    1d26:	08 95       	ret

00001d28 <u8g_dev_scale_2x2_fn>:
    1d28:	a0 e0       	ldi	r26, 0x00	; 0
    1d2a:	b0 e0       	ldi	r27, 0x00	; 0
    1d2c:	e9 e9       	ldi	r30, 0x99	; 153
    1d2e:	fe e0       	ldi	r31, 0x0E	; 14
    1d30:	39 c3       	rjmp	.+1650   	; 0x23a4 <__prologue_saves__+0xa>
    1d32:	5c 01       	movw	r10, r24
    1d34:	fb 01       	movw	r30, r22
    1d36:	e9 01       	movw	r28, r18
    1d38:	82 80       	ldd	r8, Z+2	; 0x02
    1d3a:	93 80       	ldd	r9, Z+3	; 0x03
    1d3c:	4b 33       	cpi	r20, 0x3B	; 59
    1d3e:	09 f4       	brne	.+2      	; 0x1d42 <u8g_dev_scale_2x2_fn+0x1a>
    1d40:	4d c0       	rjmp	.+154    	; 0x1ddc <u8g_dev_scale_2x2_fn+0xb4>
    1d42:	4c 33       	cpi	r20, 0x3C	; 60
    1d44:	28 f4       	brcc	.+10     	; 0x1d50 <u8g_dev_scale_2x2_fn+0x28>
    1d46:	47 31       	cpi	r20, 0x17	; 23
    1d48:	a1 f0       	breq	.+40     	; 0x1d72 <u8g_dev_scale_2x2_fn+0x4a>
    1d4a:	42 33       	cpi	r20, 0x32	; 50
    1d4c:	29 f4       	brne	.+10     	; 0x1d58 <u8g_dev_scale_2x2_fn+0x30>
    1d4e:	21 c0       	rjmp	.+66     	; 0x1d92 <u8g_dev_scale_2x2_fn+0x6a>
    1d50:	46 34       	cpi	r20, 0x46	; 70
    1d52:	39 f0       	breq	.+14     	; 0x1d62 <u8g_dev_scale_2x2_fn+0x3a>
    1d54:	47 34       	cpi	r20, 0x47	; 71
    1d56:	41 f0       	breq	.+16     	; 0x1d68 <u8g_dev_scale_2x2_fn+0x40>
    1d58:	c5 01       	movw	r24, r10
    1d5a:	b4 01       	movw	r22, r8
    1d5c:	9e 01       	movw	r18, r28
    1d5e:	af dc       	rcall	.-1698   	; 0x16be <u8g_call_dev_fn>
    1d60:	9b c0       	rjmp	.+310    	; 0x1e98 <u8g_dev_scale_2x2_fn+0x170>
    1d62:	b4 01       	movw	r22, r8
    1d64:	64 dd       	rcall	.-1336   	; 0x182e <u8g_GetWidthLL>
    1d66:	02 c0       	rjmp	.+4      	; 0x1d6c <u8g_dev_scale_2x2_fn+0x44>
    1d68:	b4 01       	movw	r22, r8
    1d6a:	73 dd       	rcall	.-1306   	; 0x1852 <u8g_GetHeightLL>
    1d6c:	86 95       	lsr	r24
    1d6e:	88 83       	st	Y, r24
    1d70:	92 c0       	rjmp	.+292    	; 0x1e96 <u8g_dev_scale_2x2_fn+0x16e>
    1d72:	b4 01       	movw	r22, r8
    1d74:	47 e1       	ldi	r20, 0x17	; 23
    1d76:	a3 dc       	rcall	.-1722   	; 0x16be <u8g_call_dev_fn>
    1d78:	88 81       	ld	r24, Y
    1d7a:	86 95       	lsr	r24
    1d7c:	88 83       	st	Y, r24
    1d7e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d80:	86 95       	lsr	r24
    1d82:	8a 83       	std	Y+2, r24	; 0x02
    1d84:	89 81       	ldd	r24, Y+1	; 0x01
    1d86:	86 95       	lsr	r24
    1d88:	89 83       	std	Y+1, r24	; 0x01
    1d8a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d8c:	86 95       	lsr	r24
    1d8e:	8b 83       	std	Y+3, r24	; 0x03
    1d90:	82 c0       	rjmp	.+260    	; 0x1e96 <u8g_dev_scale_2x2_fn+0x16e>
    1d92:	e8 80       	ld	r14, Y
    1d94:	ff 24       	eor	r15, r15
    1d96:	ee 0c       	add	r14, r14
    1d98:	ff 1c       	adc	r15, r15
    1d9a:	de 2c       	mov	r13, r14
    1d9c:	09 81       	ldd	r16, Y+1	; 0x01
    1d9e:	10 e0       	ldi	r17, 0x00	; 0
    1da0:	00 0f       	add	r16, r16
    1da2:	11 1f       	adc	r17, r17
    1da4:	c0 2e       	mov	r12, r16
    1da6:	e8 82       	st	Y, r14
    1da8:	09 83       	std	Y+1, r16	; 0x01
    1daa:	b4 01       	movw	r22, r8
    1dac:	42 e3       	ldi	r20, 0x32	; 50
    1dae:	87 dc       	rcall	.-1778   	; 0x16be <u8g_call_dev_fn>
    1db0:	d3 94       	inc	r13
    1db2:	d8 82       	st	Y, r13
    1db4:	09 83       	std	Y+1, r16	; 0x01
    1db6:	c5 01       	movw	r24, r10
    1db8:	b4 01       	movw	r22, r8
    1dba:	42 e3       	ldi	r20, 0x32	; 50
    1dbc:	9e 01       	movw	r18, r28
    1dbe:	7f dc       	rcall	.-1794   	; 0x16be <u8g_call_dev_fn>
    1dc0:	c3 94       	inc	r12
    1dc2:	d8 82       	st	Y, r13
    1dc4:	c9 82       	std	Y+1, r12	; 0x01
    1dc6:	c5 01       	movw	r24, r10
    1dc8:	b4 01       	movw	r22, r8
    1dca:	42 e3       	ldi	r20, 0x32	; 50
    1dcc:	9e 01       	movw	r18, r28
    1dce:	77 dc       	rcall	.-1810   	; 0x16be <u8g_call_dev_fn>
    1dd0:	e8 82       	st	Y, r14
    1dd2:	c9 82       	std	Y+1, r12	; 0x01
    1dd4:	c5 01       	movw	r24, r10
    1dd6:	b4 01       	movw	r22, r8
    1dd8:	42 e3       	ldi	r20, 0x32	; 50
    1dda:	5b c0       	rjmp	.+182    	; 0x1e92 <u8g_dev_scale_2x2_fn+0x16a>
    1ddc:	9a 81       	ldd	r25, Y+2	; 0x02
    1dde:	7b 80       	ldd	r7, Y+3	; 0x03
    1de0:	00 e0       	ldi	r16, 0x00	; 0
    1de2:	10 e0       	ldi	r17, 0x00	; 0
    1de4:	80 e0       	ldi	r24, 0x00	; 0
    1de6:	00 0f       	add	r16, r16
    1de8:	11 1f       	adc	r17, r17
    1dea:	00 0f       	add	r16, r16
    1dec:	11 1f       	adc	r17, r17
    1dee:	97 fd       	sbrc	r25, 7
    1df0:	03 60       	ori	r16, 0x03	; 3
    1df2:	8f 5f       	subi	r24, 0xFF	; 255
    1df4:	88 30       	cpi	r24, 0x08	; 8
    1df6:	11 f0       	breq	.+4      	; 0x1dfc <u8g_dev_scale_2x2_fn+0xd4>
    1df8:	99 0f       	add	r25, r25
    1dfa:	f5 cf       	rjmp	.-22     	; 0x1de6 <u8g_dev_scale_2x2_fn+0xbe>
    1dfc:	88 81       	ld	r24, Y
    1dfe:	28 2f       	mov	r18, r24
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	22 0f       	add	r18, r18
    1e04:	33 1f       	adc	r19, r19
    1e06:	d2 2e       	mov	r13, r18
    1e08:	89 81       	ldd	r24, Y+1	; 0x01
    1e0a:	90 e0       	ldi	r25, 0x00	; 0
    1e0c:	88 0f       	add	r24, r24
    1e0e:	99 1f       	adc	r25, r25
    1e10:	e8 2e       	mov	r14, r24
    1e12:	70 fe       	sbrs	r7, 0
    1e14:	04 c0       	rjmp	.+8      	; 0x1e1e <u8g_dev_scale_2x2_fn+0xf6>
    1e16:	cd 2c       	mov	r12, r13
    1e18:	c3 94       	inc	r12
    1e1a:	f8 2e       	mov	r15, r24
    1e1c:	03 c0       	rjmp	.+6      	; 0x1e24 <u8g_dev_scale_2x2_fn+0xfc>
    1e1e:	f8 2e       	mov	r15, r24
    1e20:	f3 94       	inc	r15
    1e22:	c2 2e       	mov	r12, r18
    1e24:	1a 83       	std	Y+2, r17	; 0x02
    1e26:	d8 82       	st	Y, r13
    1e28:	e9 82       	std	Y+1, r14	; 0x01
    1e2a:	7b 82       	std	Y+3, r7	; 0x03
    1e2c:	c5 01       	movw	r24, r10
    1e2e:	b4 01       	movw	r22, r8
    1e30:	4b e3       	ldi	r20, 0x3B	; 59
    1e32:	9e 01       	movw	r18, r28
    1e34:	44 dc       	rcall	.-1912   	; 0x16be <u8g_call_dev_fn>
    1e36:	c8 82       	st	Y, r12
    1e38:	f9 82       	std	Y+1, r15	; 0x01
    1e3a:	7b 82       	std	Y+3, r7	; 0x03
    1e3c:	c5 01       	movw	r24, r10
    1e3e:	b4 01       	movw	r22, r8
    1e40:	4b e3       	ldi	r20, 0x3B	; 59
    1e42:	9e 01       	movw	r18, r28
    1e44:	3c dc       	rcall	.-1928   	; 0x16be <u8g_call_dev_fn>
    1e46:	0a 83       	std	Y+2, r16	; 0x02
    1e48:	81 e0       	ldi	r24, 0x01	; 1
    1e4a:	78 16       	cp	r7, r24
    1e4c:	59 f0       	breq	.+22     	; 0x1e64 <u8g_dev_scale_2x2_fn+0x13c>
    1e4e:	78 16       	cp	r7, r24
    1e50:	38 f0       	brcs	.+14     	; 0x1e60 <u8g_dev_scale_2x2_fn+0x138>
    1e52:	82 e0       	ldi	r24, 0x02	; 2
    1e54:	78 16       	cp	r7, r24
    1e56:	41 f0       	breq	.+16     	; 0x1e68 <u8g_dev_scale_2x2_fn+0x140>
    1e58:	83 e0       	ldi	r24, 0x03	; 3
    1e5a:	78 16       	cp	r7, r24
    1e5c:	61 f4       	brne	.+24     	; 0x1e76 <u8g_dev_scale_2x2_fn+0x14e>
    1e5e:	08 c0       	rjmp	.+16     	; 0x1e70 <u8g_dev_scale_2x2_fn+0x148>
    1e60:	88 e0       	ldi	r24, 0x08	; 8
    1e62:	03 c0       	rjmp	.+6      	; 0x1e6a <u8g_dev_scale_2x2_fn+0x142>
    1e64:	88 e0       	ldi	r24, 0x08	; 8
    1e66:	05 c0       	rjmp	.+10     	; 0x1e72 <u8g_dev_scale_2x2_fn+0x14a>
    1e68:	88 ef       	ldi	r24, 0xF8	; 248
    1e6a:	d8 0e       	add	r13, r24
    1e6c:	c8 0e       	add	r12, r24
    1e6e:	03 c0       	rjmp	.+6      	; 0x1e76 <u8g_dev_scale_2x2_fn+0x14e>
    1e70:	88 ef       	ldi	r24, 0xF8	; 248
    1e72:	e8 0e       	add	r14, r24
    1e74:	f8 0e       	add	r15, r24
    1e76:	d8 82       	st	Y, r13
    1e78:	e9 82       	std	Y+1, r14	; 0x01
    1e7a:	7b 82       	std	Y+3, r7	; 0x03
    1e7c:	c5 01       	movw	r24, r10
    1e7e:	b4 01       	movw	r22, r8
    1e80:	4b e3       	ldi	r20, 0x3B	; 59
    1e82:	9e 01       	movw	r18, r28
    1e84:	1c dc       	rcall	.-1992   	; 0x16be <u8g_call_dev_fn>
    1e86:	c8 82       	st	Y, r12
    1e88:	f9 82       	std	Y+1, r15	; 0x01
    1e8a:	7b 82       	std	Y+3, r7	; 0x03
    1e8c:	c5 01       	movw	r24, r10
    1e8e:	b4 01       	movw	r22, r8
    1e90:	4b e3       	ldi	r20, 0x3B	; 59
    1e92:	9e 01       	movw	r18, r28
    1e94:	14 dc       	rcall	.-2008   	; 0x16be <u8g_call_dev_fn>
    1e96:	81 e0       	ldi	r24, 0x01	; 1
    1e98:	cd b7       	in	r28, 0x3d	; 61
    1e9a:	de b7       	in	r29, 0x3e	; 62
    1e9c:	ed e0       	ldi	r30, 0x0D	; 13
    1e9e:	9e c2       	rjmp	.+1340   	; 0x23dc <__epilogue_restores__+0xa>

00001ea0 <u8g_SetScale2x2>:
    1ea0:	fc 01       	movw	r30, r24
    1ea2:	82 81       	ldd	r24, Z+2	; 0x02
    1ea4:	93 81       	ldd	r25, Z+3	; 0x03
    1ea6:	21 e0       	ldi	r18, 0x01	; 1
    1ea8:	87 37       	cpi	r24, 0x77	; 119
    1eaa:	92 07       	cpc	r25, r18
    1eac:	41 f0       	breq	.+16     	; 0x1ebe <u8g_SetScale2x2+0x1e>
    1eae:	90 93 7a 01 	sts	0x017A, r25
    1eb2:	80 93 79 01 	sts	0x0179, r24
    1eb6:	87 e7       	ldi	r24, 0x77	; 119
    1eb8:	91 e0       	ldi	r25, 0x01	; 1
    1eba:	93 83       	std	Z+3, r25	; 0x03
    1ebc:	82 83       	std	Z+2, r24	; 0x02
    1ebe:	84 e9       	ldi	r24, 0x94	; 148
    1ec0:	9e e0       	ldi	r25, 0x0E	; 14
    1ec2:	90 93 78 01 	sts	0x0178, r25
    1ec6:	80 93 77 01 	sts	0x0177, r24
    1eca:	cf 01       	movw	r24, r30
    1ecc:	dd cc       	rjmp	.-1606   	; 0x1888 <u8g_UpdateDimension>
    1ece:	08 95       	ret

00001ed0 <u8g_UndoScale>:
    1ed0:	fc 01       	movw	r30, r24
    1ed2:	a2 81       	ldd	r26, Z+2	; 0x02
    1ed4:	b3 81       	ldd	r27, Z+3	; 0x03
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	a7 37       	cpi	r26, 0x77	; 119
    1eda:	b8 07       	cpc	r27, r24
    1edc:	41 f4       	brne	.+16     	; 0x1eee <u8g_UndoScale+0x1e>
    1ede:	12 96       	adiw	r26, 0x02	; 2
    1ee0:	8d 91       	ld	r24, X+
    1ee2:	9c 91       	ld	r25, X
    1ee4:	13 97       	sbiw	r26, 0x03	; 3
    1ee6:	93 83       	std	Z+3, r25	; 0x03
    1ee8:	82 83       	std	Z+2, r24	; 0x02
    1eea:	cf 01       	movw	r24, r30
    1eec:	cd cc       	rjmp	.-1638   	; 0x1888 <u8g_UpdateDimension>
    1eee:	08 95       	ret

00001ef0 <u8g_state_dummy_cb>:
    1ef0:	08 95       	ret

00001ef2 <i2c_init>:
    1ef2:	10 92 b9 00 	sts	0x00B9, r1
    1ef6:	82 e0       	ldi	r24, 0x02	; 2
    1ef8:	80 93 b8 00 	sts	0x00B8, r24
    1efc:	08 95       	ret

00001efe <i2c_start>:
    1efe:	98 2f       	mov	r25, r24
    1f00:	84 ea       	ldi	r24, 0xA4	; 164
    1f02:	80 93 bc 00 	sts	0x00BC, r24
    1f06:	2f ef       	ldi	r18, 0xFF	; 255
    1f08:	30 e0       	ldi	r19, 0x00	; 0
    1f0a:	40 e0       	ldi	r20, 0x00	; 0
    1f0c:	50 e0       	ldi	r21, 0x00	; 0
    1f0e:	80 91 bc 00 	lds	r24, 0x00BC
    1f12:	87 ff       	sbrs	r24, 7
    1f14:	07 c0       	rjmp	.+14     	; 0x1f24 <i2c_start+0x26>
    1f16:	21 15       	cp	r18, r1
    1f18:	31 05       	cpc	r19, r1
    1f1a:	41 05       	cpc	r20, r1
    1f1c:	51 05       	cpc	r21, r1
    1f1e:	09 f4       	brne	.+2      	; 0x1f22 <i2c_start+0x24>
    1f20:	31 c0       	rjmp	.+98     	; 0x1f84 <i2c_start+0x86>
    1f22:	05 c0       	rjmp	.+10     	; 0x1f2e <i2c_start+0x30>
    1f24:	21 50       	subi	r18, 0x01	; 1
    1f26:	31 09       	sbc	r19, r1
    1f28:	41 09       	sbc	r20, r1
    1f2a:	51 09       	sbc	r21, r1
    1f2c:	80 f7       	brcc	.-32     	; 0x1f0e <i2c_start+0x10>
    1f2e:	80 91 b9 00 	lds	r24, 0x00B9
    1f32:	88 7f       	andi	r24, 0xF8	; 248
    1f34:	88 30       	cpi	r24, 0x08	; 8
    1f36:	11 f0       	breq	.+4      	; 0x1f3c <i2c_start+0x3e>
    1f38:	80 31       	cpi	r24, 0x10	; 16
    1f3a:	21 f5       	brne	.+72     	; 0x1f84 <i2c_start+0x86>
    1f3c:	90 93 bb 00 	sts	0x00BB, r25
    1f40:	84 e8       	ldi	r24, 0x84	; 132
    1f42:	80 93 bc 00 	sts	0x00BC, r24
    1f46:	2f ef       	ldi	r18, 0xFF	; 255
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	40 e0       	ldi	r20, 0x00	; 0
    1f4c:	50 e0       	ldi	r21, 0x00	; 0
    1f4e:	80 91 bc 00 	lds	r24, 0x00BC
    1f52:	87 ff       	sbrs	r24, 7
    1f54:	06 c0       	rjmp	.+12     	; 0x1f62 <i2c_start+0x64>
    1f56:	21 15       	cp	r18, r1
    1f58:	31 05       	cpc	r19, r1
    1f5a:	41 05       	cpc	r20, r1
    1f5c:	51 05       	cpc	r21, r1
    1f5e:	91 f0       	breq	.+36     	; 0x1f84 <i2c_start+0x86>
    1f60:	05 c0       	rjmp	.+10     	; 0x1f6c <i2c_start+0x6e>
    1f62:	21 50       	subi	r18, 0x01	; 1
    1f64:	31 09       	sbc	r19, r1
    1f66:	41 09       	sbc	r20, r1
    1f68:	51 09       	sbc	r21, r1
    1f6a:	88 f7       	brcc	.-30     	; 0x1f4e <i2c_start+0x50>
    1f6c:	90 91 b9 00 	lds	r25, 0x00B9
    1f70:	98 7f       	andi	r25, 0xF8	; 248
    1f72:	98 31       	cpi	r25, 0x18	; 24
    1f74:	11 f4       	brne	.+4      	; 0x1f7a <i2c_start+0x7c>
    1f76:	80 e0       	ldi	r24, 0x00	; 0
    1f78:	08 95       	ret
    1f7a:	80 e0       	ldi	r24, 0x00	; 0
    1f7c:	90 34       	cpi	r25, 0x40	; 64
    1f7e:	19 f0       	breq	.+6      	; 0x1f86 <i2c_start+0x88>
    1f80:	81 e0       	ldi	r24, 0x01	; 1
    1f82:	08 95       	ret
    1f84:	81 e0       	ldi	r24, 0x01	; 1
    1f86:	08 95       	ret

00001f88 <i2c_stop>:
    1f88:	84 e9       	ldi	r24, 0x94	; 148
    1f8a:	80 93 bc 00 	sts	0x00BC, r24
    1f8e:	20 e0       	ldi	r18, 0x00	; 0
    1f90:	30 e0       	ldi	r19, 0x00	; 0
    1f92:	80 91 bc 00 	lds	r24, 0x00BC
    1f96:	84 ff       	sbrs	r24, 4
    1f98:	06 c0       	rjmp	.+12     	; 0x1fa6 <i2c_stop+0x1e>
    1f9a:	2f 5f       	subi	r18, 0xFF	; 255
    1f9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f9e:	81 e0       	ldi	r24, 0x01	; 1
    1fa0:	20 30       	cpi	r18, 0x00	; 0
    1fa2:	38 07       	cpc	r19, r24
    1fa4:	b1 f7       	brne	.-20     	; 0x1f92 <i2c_stop+0xa>
    1fa6:	08 95       	ret

00001fa8 <i2c_write>:
    1fa8:	80 93 bb 00 	sts	0x00BB, r24
    1fac:	84 e8       	ldi	r24, 0x84	; 132
    1fae:	80 93 bc 00 	sts	0x00BC, r24
    1fb2:	2f ef       	ldi	r18, 0xFF	; 255
    1fb4:	30 e0       	ldi	r19, 0x00	; 0
    1fb6:	40 e0       	ldi	r20, 0x00	; 0
    1fb8:	50 e0       	ldi	r21, 0x00	; 0
    1fba:	80 91 bc 00 	lds	r24, 0x00BC
    1fbe:	87 ff       	sbrs	r24, 7
    1fc0:	06 c0       	rjmp	.+12     	; 0x1fce <i2c_write+0x26>
    1fc2:	21 15       	cp	r18, r1
    1fc4:	31 05       	cpc	r19, r1
    1fc6:	41 05       	cpc	r20, r1
    1fc8:	51 05       	cpc	r21, r1
    1fca:	61 f0       	breq	.+24     	; 0x1fe4 <i2c_write+0x3c>
    1fcc:	05 c0       	rjmp	.+10     	; 0x1fd8 <i2c_write+0x30>
    1fce:	21 50       	subi	r18, 0x01	; 1
    1fd0:	31 09       	sbc	r19, r1
    1fd2:	41 09       	sbc	r20, r1
    1fd4:	51 09       	sbc	r21, r1
    1fd6:	88 f7       	brcc	.-30     	; 0x1fba <i2c_write+0x12>
    1fd8:	80 91 b9 00 	lds	r24, 0x00B9
    1fdc:	90 e0       	ldi	r25, 0x00	; 0
    1fde:	88 7f       	andi	r24, 0xF8	; 248
    1fe0:	88 32       	cpi	r24, 0x28	; 40
    1fe2:	09 f0       	breq	.+2      	; 0x1fe6 <i2c_write+0x3e>
    1fe4:	91 e0       	ldi	r25, 0x01	; 1
    1fe6:	89 2f       	mov	r24, r25
    1fe8:	08 95       	ret

00001fea <i2c_readAck>:
    1fea:	84 ec       	ldi	r24, 0xC4	; 196
    1fec:	80 93 bc 00 	sts	0x00BC, r24
    1ff0:	2f ef       	ldi	r18, 0xFF	; 255
    1ff2:	30 e0       	ldi	r19, 0x00	; 0
    1ff4:	40 e0       	ldi	r20, 0x00	; 0
    1ff6:	50 e0       	ldi	r21, 0x00	; 0
    1ff8:	80 91 bc 00 	lds	r24, 0x00BC
    1ffc:	87 ff       	sbrs	r24, 7
    1ffe:	07 c0       	rjmp	.+14     	; 0x200e <i2c_readAck+0x24>
    2000:	21 15       	cp	r18, r1
    2002:	31 05       	cpc	r19, r1
    2004:	41 05       	cpc	r20, r1
    2006:	51 05       	cpc	r21, r1
    2008:	39 f4       	brne	.+14     	; 0x2018 <i2c_readAck+0x2e>
    200a:	80 e0       	ldi	r24, 0x00	; 0
    200c:	08 95       	ret
    200e:	21 50       	subi	r18, 0x01	; 1
    2010:	31 09       	sbc	r19, r1
    2012:	41 09       	sbc	r20, r1
    2014:	51 09       	sbc	r21, r1
    2016:	80 f7       	brcc	.-32     	; 0x1ff8 <i2c_readAck+0xe>
    2018:	80 91 bb 00 	lds	r24, 0x00BB
    201c:	08 95       	ret

0000201e <i2c_readNak>:
    201e:	84 e8       	ldi	r24, 0x84	; 132
    2020:	80 93 bc 00 	sts	0x00BC, r24
    2024:	2f ef       	ldi	r18, 0xFF	; 255
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	40 e0       	ldi	r20, 0x00	; 0
    202a:	50 e0       	ldi	r21, 0x00	; 0
    202c:	80 91 bc 00 	lds	r24, 0x00BC
    2030:	87 ff       	sbrs	r24, 7
    2032:	07 c0       	rjmp	.+14     	; 0x2042 <i2c_readNak+0x24>
    2034:	21 15       	cp	r18, r1
    2036:	31 05       	cpc	r19, r1
    2038:	41 05       	cpc	r20, r1
    203a:	51 05       	cpc	r21, r1
    203c:	39 f4       	brne	.+14     	; 0x204c <i2c_readNak+0x2e>
    203e:	80 e0       	ldi	r24, 0x00	; 0
    2040:	08 95       	ret
    2042:	21 50       	subi	r18, 0x01	; 1
    2044:	31 09       	sbc	r19, r1
    2046:	41 09       	sbc	r20, r1
    2048:	51 09       	sbc	r21, r1
    204a:	80 f7       	brcc	.-32     	; 0x202c <i2c_readNak+0xe>
    204c:	80 91 bb 00 	lds	r24, 0x00BB
    2050:	08 95       	ret

00002052 <u8g_InitCom>:
    2052:	fb 01       	movw	r30, r22
    2054:	04 80       	ldd	r0, Z+4	; 0x04
    2056:	f5 81       	ldd	r31, Z+5	; 0x05
    2058:	e0 2d       	mov	r30, r0
    205a:	61 e0       	ldi	r22, 0x01	; 1
    205c:	20 e0       	ldi	r18, 0x00	; 0
    205e:	30 e0       	ldi	r19, 0x00	; 0
    2060:	09 95       	icall
    2062:	08 95       	ret

00002064 <u8g_SetChipSelect>:
    2064:	fb 01       	movw	r30, r22
    2066:	04 80       	ldd	r0, Z+4	; 0x04
    2068:	f5 81       	ldd	r31, Z+5	; 0x05
    206a:	e0 2d       	mov	r30, r0
    206c:	63 e0       	ldi	r22, 0x03	; 3
    206e:	20 e0       	ldi	r18, 0x00	; 0
    2070:	30 e0       	ldi	r19, 0x00	; 0
    2072:	09 95       	icall
    2074:	08 95       	ret

00002076 <u8g_SetResetLow>:
    2076:	fb 01       	movw	r30, r22
    2078:	04 80       	ldd	r0, Z+4	; 0x04
    207a:	f5 81       	ldd	r31, Z+5	; 0x05
    207c:	e0 2d       	mov	r30, r0
    207e:	64 e0       	ldi	r22, 0x04	; 4
    2080:	40 e0       	ldi	r20, 0x00	; 0
    2082:	20 e0       	ldi	r18, 0x00	; 0
    2084:	30 e0       	ldi	r19, 0x00	; 0
    2086:	09 95       	icall
    2088:	08 95       	ret

0000208a <u8g_SetResetHigh>:
    208a:	fb 01       	movw	r30, r22
    208c:	04 80       	ldd	r0, Z+4	; 0x04
    208e:	f5 81       	ldd	r31, Z+5	; 0x05
    2090:	e0 2d       	mov	r30, r0
    2092:	64 e0       	ldi	r22, 0x04	; 4
    2094:	41 e0       	ldi	r20, 0x01	; 1
    2096:	20 e0       	ldi	r18, 0x00	; 0
    2098:	30 e0       	ldi	r19, 0x00	; 0
    209a:	09 95       	icall
    209c:	08 95       	ret

0000209e <u8g_SetAddress>:
    209e:	fb 01       	movw	r30, r22
    20a0:	04 80       	ldd	r0, Z+4	; 0x04
    20a2:	f5 81       	ldd	r31, Z+5	; 0x05
    20a4:	e0 2d       	mov	r30, r0
    20a6:	62 e0       	ldi	r22, 0x02	; 2
    20a8:	20 e0       	ldi	r18, 0x00	; 0
    20aa:	30 e0       	ldi	r19, 0x00	; 0
    20ac:	09 95       	icall
    20ae:	08 95       	ret

000020b0 <u8g_WriteByte>:
    20b0:	fb 01       	movw	r30, r22
    20b2:	04 80       	ldd	r0, Z+4	; 0x04
    20b4:	f5 81       	ldd	r31, Z+5	; 0x05
    20b6:	e0 2d       	mov	r30, r0
    20b8:	65 e0       	ldi	r22, 0x05	; 5
    20ba:	20 e0       	ldi	r18, 0x00	; 0
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	09 95       	icall
    20c0:	08 95       	ret

000020c2 <u8g_WriteSequence>:
    20c2:	fb 01       	movw	r30, r22
    20c4:	04 80       	ldd	r0, Z+4	; 0x04
    20c6:	f5 81       	ldd	r31, Z+5	; 0x05
    20c8:	e0 2d       	mov	r30, r0
    20ca:	66 e0       	ldi	r22, 0x06	; 6
    20cc:	09 95       	icall
    20ce:	08 95       	ret

000020d0 <u8g_WriteEscSeqP>:
    20d0:	a0 e0       	ldi	r26, 0x00	; 0
    20d2:	b0 e0       	ldi	r27, 0x00	; 0
    20d4:	ed e6       	ldi	r30, 0x6D	; 109
    20d6:	f0 e1       	ldi	r31, 0x10	; 16
    20d8:	6a c1       	rjmp	.+724    	; 0x23ae <__prologue_saves__+0x14>
    20da:	7c 01       	movw	r14, r24
    20dc:	eb 01       	movw	r28, r22
    20de:	6a 01       	movw	r12, r20
    20e0:	00 e0       	ldi	r16, 0x00	; 0
    20e2:	f6 01       	movw	r30, r12
    20e4:	14 91       	lpm	r17, Z
    20e6:	00 23       	and	r16, r16
    20e8:	59 f4       	brne	.+22     	; 0x2100 <u8g_WriteEscSeqP+0x30>
    20ea:	1f 3f       	cpi	r17, 0xFF	; 255
    20ec:	11 f4       	brne	.+4      	; 0x20f2 <u8g_WriteEscSeqP+0x22>
    20ee:	01 e0       	ldi	r16, 0x01	; 1
    20f0:	3d c0       	rjmp	.+122    	; 0x216c <u8g_WriteEscSeqP+0x9c>
    20f2:	c7 01       	movw	r24, r14
    20f4:	be 01       	movw	r22, r28
    20f6:	41 2f       	mov	r20, r17
    20f8:	db df       	rcall	.-74     	; 0x20b0 <u8g_WriteByte>
    20fa:	88 23       	and	r24, r24
    20fc:	b9 f5       	brne	.+110    	; 0x216c <u8g_WriteEscSeqP+0x9c>
    20fe:	3a c0       	rjmp	.+116    	; 0x2174 <u8g_WriteEscSeqP+0xa4>
    2100:	1f 3f       	cpi	r17, 0xFF	; 255
    2102:	39 f4       	brne	.+14     	; 0x2112 <u8g_WriteEscSeqP+0x42>
    2104:	c7 01       	movw	r24, r14
    2106:	be 01       	movw	r22, r28
    2108:	4f ef       	ldi	r20, 0xFF	; 255
    210a:	d2 df       	rcall	.-92     	; 0x20b0 <u8g_WriteByte>
    210c:	88 23       	and	r24, r24
    210e:	69 f5       	brne	.+90     	; 0x216a <u8g_WriteEscSeqP+0x9a>
    2110:	31 c0       	rjmp	.+98     	; 0x2174 <u8g_WriteEscSeqP+0xa4>
    2112:	1e 3f       	cpi	r17, 0xFE	; 254
    2114:	11 f4       	brne	.+4      	; 0x211a <u8g_WriteEscSeqP+0x4a>
    2116:	81 e0       	ldi	r24, 0x01	; 1
    2118:	2e c0       	rjmp	.+92     	; 0x2176 <u8g_WriteEscSeqP+0xa6>
    211a:	10 3f       	cpi	r17, 0xF0	; 240
    211c:	30 f5       	brcc	.+76     	; 0x216a <u8g_WriteEscSeqP+0x9a>
    211e:	10 3e       	cpi	r17, 0xE0	; 224
    2120:	30 f0       	brcs	.+12     	; 0x212e <u8g_WriteEscSeqP+0x5e>
    2122:	1f 70       	andi	r17, 0x0F	; 15
    2124:	c7 01       	movw	r24, r14
    2126:	be 01       	movw	r22, r28
    2128:	41 2f       	mov	r20, r17
    212a:	b9 df       	rcall	.-142    	; 0x209e <u8g_SetAddress>
    212c:	1e c0       	rjmp	.+60     	; 0x216a <u8g_WriteEscSeqP+0x9a>
    212e:	10 3d       	cpi	r17, 0xD0	; 208
    2130:	30 f0       	brcs	.+12     	; 0x213e <u8g_WriteEscSeqP+0x6e>
    2132:	1f 70       	andi	r17, 0x0F	; 15
    2134:	c7 01       	movw	r24, r14
    2136:	be 01       	movw	r22, r28
    2138:	41 2f       	mov	r20, r17
    213a:	94 df       	rcall	.-216    	; 0x2064 <u8g_SetChipSelect>
    213c:	16 c0       	rjmp	.+44     	; 0x216a <u8g_WriteEscSeqP+0x9a>
    213e:	10 3c       	cpi	r17, 0xC0	; 192
    2140:	68 f0       	brcs	.+26     	; 0x215c <u8g_WriteEscSeqP+0x8c>
    2142:	c7 01       	movw	r24, r14
    2144:	be 01       	movw	r22, r28
    2146:	97 df       	rcall	.-210    	; 0x2076 <u8g_SetResetLow>
    2148:	12 95       	swap	r17
    214a:	10 7f       	andi	r17, 0xF0	; 240
    214c:	1e 5f       	subi	r17, 0xFE	; 254
    214e:	81 2f       	mov	r24, r17
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	61 d8       	rcall	.-3902   	; 0x1216 <u8g_Delay>
    2154:	c7 01       	movw	r24, r14
    2156:	be 01       	movw	r22, r28
    2158:	98 df       	rcall	.-208    	; 0x208a <u8g_SetResetHigh>
    215a:	04 c0       	rjmp	.+8      	; 0x2164 <u8g_WriteEscSeqP+0x94>
    215c:	1e 3b       	cpi	r17, 0xBE	; 190
    215e:	28 f4       	brcc	.+10     	; 0x216a <u8g_WriteEscSeqP+0x9a>
    2160:	17 fd       	sbrc	r17, 7
    2162:	03 c0       	rjmp	.+6      	; 0x216a <u8g_WriteEscSeqP+0x9a>
    2164:	81 2f       	mov	r24, r17
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	56 d8       	rcall	.-3924   	; 0x1216 <u8g_Delay>
    216a:	00 e0       	ldi	r16, 0x00	; 0
    216c:	08 94       	sec
    216e:	c1 1c       	adc	r12, r1
    2170:	d1 1c       	adc	r13, r1
    2172:	b7 cf       	rjmp	.-146    	; 0x20e2 <u8g_WriteEscSeqP+0x12>
    2174:	80 e0       	ldi	r24, 0x00	; 0
    2176:	cd b7       	in	r28, 0x3d	; 61
    2178:	de b7       	in	r29, 0x3e	; 62
    217a:	e8 e0       	ldi	r30, 0x08	; 8
    217c:	34 c1       	rjmp	.+616    	; 0x23e6 <__epilogue_restores__+0x14>

0000217e <u8g_atmega_st7920_sw_spi_shift_out>:
    217e:	0f 93       	push	r16
    2180:	1f 93       	push	r17
    2182:	cf 93       	push	r28
    2184:	df 93       	push	r29
    2186:	ec 01       	movw	r28, r24
    2188:	06 2f       	mov	r16, r22
    218a:	18 e0       	ldi	r17, 0x08	; 8
    218c:	40 2f       	mov	r20, r16
    218e:	40 78       	andi	r20, 0x80	; 128
    2190:	ce 01       	movw	r24, r28
    2192:	65 e0       	ldi	r22, 0x05	; 5
    2194:	08 d8       	rcall	.-4080   	; 0x11a6 <u8g_SetPILevel>
    2196:	00 0f       	add	r16, r16
    2198:	ce 01       	movw	r24, r28
    219a:	64 e0       	ldi	r22, 0x04	; 4
    219c:	41 e0       	ldi	r20, 0x01	; 1
    219e:	03 d8       	rcall	.-4090   	; 0x11a6 <u8g_SetPILevel>
    21a0:	44 d8       	rcall	.-3960   	; 0x122a <u8g_MicroDelay>
    21a2:	ce 01       	movw	r24, r28
    21a4:	64 e0       	ldi	r22, 0x04	; 4
    21a6:	40 e0       	ldi	r20, 0x00	; 0
    21a8:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <u8g_SetPILevel>
    21ac:	3e d8       	rcall	.-3972   	; 0x122a <u8g_MicroDelay>
    21ae:	11 50       	subi	r17, 0x01	; 1
    21b0:	69 f7       	brne	.-38     	; 0x218c <u8g_atmega_st7920_sw_spi_shift_out+0xe>
    21b2:	df 91       	pop	r29
    21b4:	cf 91       	pop	r28
    21b6:	1f 91       	pop	r17
    21b8:	0f 91       	pop	r16
    21ba:	08 95       	ret

000021bc <u8g_com_atmega_st7920_write_byte>:
    21bc:	1f 93       	push	r17
    21be:	cf 93       	push	r28
    21c0:	df 93       	push	r29
    21c2:	ec 01       	movw	r28, r24
    21c4:	14 2f       	mov	r17, r20
    21c6:	66 23       	and	r22, r22
    21c8:	11 f4       	brne	.+4      	; 0x21ce <u8g_com_atmega_st7920_write_byte+0x12>
    21ca:	68 ef       	ldi	r22, 0xF8	; 248
    21cc:	03 c0       	rjmp	.+6      	; 0x21d4 <u8g_com_atmega_st7920_write_byte+0x18>
    21ce:	61 30       	cpi	r22, 0x01	; 1
    21d0:	11 f4       	brne	.+4      	; 0x21d6 <u8g_com_atmega_st7920_write_byte+0x1a>
    21d2:	6a ef       	ldi	r22, 0xFA	; 250
    21d4:	d4 df       	rcall	.-88     	; 0x217e <u8g_atmega_st7920_sw_spi_shift_out>
    21d6:	61 2f       	mov	r22, r17
    21d8:	60 7f       	andi	r22, 0xF0	; 240
    21da:	ce 01       	movw	r24, r28
    21dc:	d0 df       	rcall	.-96     	; 0x217e <u8g_atmega_st7920_sw_spi_shift_out>
    21de:	12 95       	swap	r17
    21e0:	10 7f       	andi	r17, 0xF0	; 240
    21e2:	ce 01       	movw	r24, r28
    21e4:	61 2f       	mov	r22, r17
    21e6:	cb df       	rcall	.-106    	; 0x217e <u8g_atmega_st7920_sw_spi_shift_out>
    21e8:	25 d8       	rcall	.-4022   	; 0x1234 <u8g_10MicroDelay>
    21ea:	24 d8       	rcall	.-4024   	; 0x1234 <u8g_10MicroDelay>
    21ec:	23 d8       	rcall	.-4026   	; 0x1234 <u8g_10MicroDelay>
    21ee:	22 d8       	rcall	.-4028   	; 0x1234 <u8g_10MicroDelay>
    21f0:	df 91       	pop	r29
    21f2:	cf 91       	pop	r28
    21f4:	1f 91       	pop	r17
    21f6:	08 95       	ret

000021f8 <u8g_com_atmega_st7920_sw_spi_fn>:
    21f8:	ef 92       	push	r14
    21fa:	ff 92       	push	r15
    21fc:	0f 93       	push	r16
    21fe:	1f 93       	push	r17
    2200:	cf 93       	push	r28
    2202:	df 93       	push	r29
    2204:	ec 01       	movw	r28, r24
    2206:	f4 2e       	mov	r15, r20
    2208:	64 30       	cpi	r22, 0x04	; 4
    220a:	91 f1       	breq	.+100    	; 0x2270 <u8g_com_atmega_st7920_sw_spi_fn+0x78>
    220c:	65 30       	cpi	r22, 0x05	; 5
    220e:	40 f4       	brcc	.+16     	; 0x2220 <u8g_com_atmega_st7920_sw_spi_fn+0x28>
    2210:	62 30       	cpi	r22, 0x02	; 2
    2212:	81 f1       	breq	.+96     	; 0x2274 <u8g_com_atmega_st7920_sw_spi_fn+0x7c>
    2214:	63 30       	cpi	r22, 0x03	; 3
    2216:	80 f5       	brcc	.+96     	; 0x2278 <u8g_com_atmega_st7920_sw_spi_fn+0x80>
    2218:	61 30       	cpi	r22, 0x01	; 1
    221a:	09 f0       	breq	.+2      	; 0x221e <u8g_com_atmega_st7920_sw_spi_fn+0x26>
    221c:	5a c0       	rjmp	.+180    	; 0x22d2 <u8g_com_atmega_st7920_sw_spi_fn+0xda>
    221e:	08 c0       	rjmp	.+16     	; 0x2230 <u8g_com_atmega_st7920_sw_spi_fn+0x38>
    2220:	66 30       	cpi	r22, 0x06	; 6
    2222:	c9 f1       	breq	.+114    	; 0x2296 <u8g_com_atmega_st7920_sw_spi_fn+0x9e>
    2224:	66 30       	cpi	r22, 0x06	; 6
    2226:	90 f1       	brcs	.+100    	; 0x228c <u8g_com_atmega_st7920_sw_spi_fn+0x94>
    2228:	67 30       	cpi	r22, 0x07	; 7
    222a:	09 f0       	breq	.+2      	; 0x222e <u8g_com_atmega_st7920_sw_spi_fn+0x36>
    222c:	52 c0       	rjmp	.+164    	; 0x22d2 <u8g_com_atmega_st7920_sw_spi_fn+0xda>
    222e:	42 c0       	rjmp	.+132    	; 0x22b4 <u8g_com_atmega_st7920_sw_spi_fn+0xbc>
    2230:	64 e0       	ldi	r22, 0x04	; 4
    2232:	0e 94 03 09 	call	0x1206	; 0x1206 <u8g_SetPIOutput>
    2236:	ce 01       	movw	r24, r28
    2238:	65 e0       	ldi	r22, 0x05	; 5
    223a:	0e 94 03 09 	call	0x1206	; 0x1206 <u8g_SetPIOutput>
    223e:	ce 01       	movw	r24, r28
    2240:	62 e0       	ldi	r22, 0x02	; 2
    2242:	0e 94 03 09 	call	0x1206	; 0x1206 <u8g_SetPIOutput>
    2246:	ce 01       	movw	r24, r28
    2248:	60 e0       	ldi	r22, 0x00	; 0
    224a:	0e 94 03 09 	call	0x1206	; 0x1206 <u8g_SetPIOutput>
    224e:	ce 01       	movw	r24, r28
    2250:	64 e0       	ldi	r22, 0x04	; 4
    2252:	40 e0       	ldi	r20, 0x00	; 0
    2254:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <u8g_SetPILevel>
    2258:	ce 01       	movw	r24, r28
    225a:	65 e0       	ldi	r22, 0x05	; 5
    225c:	40 e0       	ldi	r20, 0x00	; 0
    225e:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <u8g_SetPILevel>
    2262:	ce 01       	movw	r24, r28
    2264:	62 e0       	ldi	r22, 0x02	; 2
    2266:	40 e0       	ldi	r20, 0x00	; 0
    2268:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <u8g_SetPILevel>
    226c:	1e a2       	std	Y+38, r1	; 0x26
    226e:	31 c0       	rjmp	.+98     	; 0x22d2 <u8g_com_atmega_st7920_sw_spi_fn+0xda>
    2270:	60 e0       	ldi	r22, 0x00	; 0
    2272:	06 c0       	rjmp	.+12     	; 0x2280 <u8g_com_atmega_st7920_sw_spi_fn+0x88>
    2274:	4e a3       	std	Y+38, r20	; 0x26
    2276:	2d c0       	rjmp	.+90     	; 0x22d2 <u8g_com_atmega_st7920_sw_spi_fn+0xda>
    2278:	44 23       	and	r20, r20
    227a:	29 f4       	brne	.+10     	; 0x2286 <u8g_com_atmega_st7920_sw_spi_fn+0x8e>
    227c:	62 e0       	ldi	r22, 0x02	; 2
    227e:	40 e0       	ldi	r20, 0x00	; 0
    2280:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <u8g_SetPILevel>
    2284:	26 c0       	rjmp	.+76     	; 0x22d2 <u8g_com_atmega_st7920_sw_spi_fn+0xda>
    2286:	62 e0       	ldi	r22, 0x02	; 2
    2288:	41 e0       	ldi	r20, 0x01	; 1
    228a:	fa cf       	rjmp	.-12     	; 0x2280 <u8g_com_atmega_st7920_sw_spi_fn+0x88>
    228c:	6e a1       	ldd	r22, Y+38	; 0x26
    228e:	96 df       	rcall	.-212    	; 0x21bc <u8g_com_atmega_st7920_write_byte>
    2290:	82 e0       	ldi	r24, 0x02	; 2
    2292:	8e a3       	std	Y+38, r24	; 0x26
    2294:	1e c0       	rjmp	.+60     	; 0x22d2 <u8g_com_atmega_st7920_sw_spi_fn+0xda>
    2296:	89 01       	movw	r16, r18
    2298:	92 e0       	ldi	r25, 0x02	; 2
    229a:	e9 2e       	mov	r14, r25
    229c:	08 c0       	rjmp	.+16     	; 0x22ae <u8g_com_atmega_st7920_sw_spi_fn+0xb6>
    229e:	f8 01       	movw	r30, r16
    22a0:	41 91       	ld	r20, Z+
    22a2:	8f 01       	movw	r16, r30
    22a4:	ce 01       	movw	r24, r28
    22a6:	6e a1       	ldd	r22, Y+38	; 0x26
    22a8:	89 df       	rcall	.-238    	; 0x21bc <u8g_com_atmega_st7920_write_byte>
    22aa:	ee a2       	std	Y+38, r14	; 0x26
    22ac:	fa 94       	dec	r15
    22ae:	ff 20       	and	r15, r15
    22b0:	b1 f7       	brne	.-20     	; 0x229e <u8g_com_atmega_st7920_sw_spi_fn+0xa6>
    22b2:	0f c0       	rjmp	.+30     	; 0x22d2 <u8g_com_atmega_st7920_sw_spi_fn+0xda>
    22b4:	89 01       	movw	r16, r18
    22b6:	82 e0       	ldi	r24, 0x02	; 2
    22b8:	e8 2e       	mov	r14, r24
    22ba:	09 c0       	rjmp	.+18     	; 0x22ce <u8g_com_atmega_st7920_sw_spi_fn+0xd6>
    22bc:	f8 01       	movw	r30, r16
    22be:	44 91       	lpm	r20, Z
    22c0:	ce 01       	movw	r24, r28
    22c2:	6e a1       	ldd	r22, Y+38	; 0x26
    22c4:	7b df       	rcall	.-266    	; 0x21bc <u8g_com_atmega_st7920_write_byte>
    22c6:	ee a2       	std	Y+38, r14	; 0x26
    22c8:	0f 5f       	subi	r16, 0xFF	; 255
    22ca:	1f 4f       	sbci	r17, 0xFF	; 255
    22cc:	fa 94       	dec	r15
    22ce:	ff 20       	and	r15, r15
    22d0:	a9 f7       	brne	.-22     	; 0x22bc <u8g_com_atmega_st7920_sw_spi_fn+0xc4>
    22d2:	81 e0       	ldi	r24, 0x01	; 1
    22d4:	cd b7       	in	r28, 0x3d	; 61
    22d6:	de b7       	in	r29, 0x3e	; 62
    22d8:	e6 e0       	ldi	r30, 0x06	; 6
    22da:	87 c0       	rjmp	.+270    	; 0x23ea <__epilogue_restores__+0x18>

000022dc <u8g_page_First>:
    22dc:	fc 01       	movw	r30, r24
    22de:	12 82       	std	Z+2, r1	; 0x02
    22e0:	80 81       	ld	r24, Z
    22e2:	81 50       	subi	r24, 0x01	; 1
    22e4:	83 83       	std	Z+3, r24	; 0x03
    22e6:	14 82       	std	Z+4, r1	; 0x04
    22e8:	08 95       	ret

000022ea <u8g_page_Next>:
    22ea:	fc 01       	movw	r30, r24
    22ec:	20 81       	ld	r18, Z
    22ee:	82 81       	ldd	r24, Z+2	; 0x02
    22f0:	82 0f       	add	r24, r18
    22f2:	82 83       	std	Z+2, r24	; 0x02
    22f4:	91 81       	ldd	r25, Z+1	; 0x01
    22f6:	89 17       	cp	r24, r25
    22f8:	10 f0       	brcs	.+4      	; 0x22fe <u8g_page_Next+0x14>
    22fa:	80 e0       	ldi	r24, 0x00	; 0
    22fc:	08 95       	ret
    22fe:	84 81       	ldd	r24, Z+4	; 0x04
    2300:	8f 5f       	subi	r24, 0xFF	; 255
    2302:	84 83       	std	Z+4, r24	; 0x04
    2304:	83 81       	ldd	r24, Z+3	; 0x03
    2306:	82 0f       	add	r24, r18
    2308:	89 17       	cp	r24, r25
    230a:	10 f0       	brcs	.+4      	; 0x2310 <u8g_page_Next+0x26>
    230c:	89 2f       	mov	r24, r25
    230e:	81 50       	subi	r24, 0x01	; 1
    2310:	83 83       	std	Z+3, r24	; 0x03
    2312:	81 e0       	ldi	r24, 0x01	; 1
    2314:	08 95       	ret

00002316 <u8g_pb_Clear>:
    2316:	fc 01       	movw	r30, r24
    2318:	a6 81       	ldd	r26, Z+6	; 0x06
    231a:	b7 81       	ldd	r27, Z+7	; 0x07
    231c:	85 81       	ldd	r24, Z+5	; 0x05
    231e:	9d 01       	movw	r18, r26
    2320:	28 0f       	add	r18, r24
    2322:	31 1d       	adc	r19, r1
    2324:	c9 01       	movw	r24, r18
    2326:	1d 92       	st	X+, r1
    2328:	a8 17       	cp	r26, r24
    232a:	b9 07       	cpc	r27, r25
    232c:	e1 f7       	brne	.-8      	; 0x2326 <u8g_pb_Clear+0x10>
    232e:	08 95       	ret

00002330 <u8g_pb_IsYIntersection>:
    2330:	fc 01       	movw	r30, r24
    2332:	20 e0       	ldi	r18, 0x00	; 0
    2334:	83 81       	ldd	r24, Z+3	; 0x03
    2336:	86 17       	cp	r24, r22
    2338:	08 f0       	brcs	.+2      	; 0x233c <u8g_pb_IsYIntersection+0xc>
    233a:	21 e0       	ldi	r18, 0x01	; 1
    233c:	30 e0       	ldi	r19, 0x00	; 0
    233e:	82 81       	ldd	r24, Z+2	; 0x02
    2340:	48 17       	cp	r20, r24
    2342:	08 f0       	brcs	.+2      	; 0x2346 <u8g_pb_IsYIntersection+0x16>
    2344:	31 e0       	ldi	r19, 0x01	; 1
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	46 17       	cp	r20, r22
    234a:	08 f4       	brcc	.+2      	; 0x234e <u8g_pb_IsYIntersection+0x1e>
    234c:	91 e0       	ldi	r25, 0x01	; 1
    234e:	89 2f       	mov	r24, r25
    2350:	82 23       	and	r24, r18
    2352:	92 2b       	or	r25, r18
    2354:	93 23       	and	r25, r19
    2356:	89 2b       	or	r24, r25
    2358:	08 95       	ret

0000235a <u8g_pb_GetPageBox>:
    235a:	dc 01       	movw	r26, r24
    235c:	fb 01       	movw	r30, r22
    235e:	10 82       	st	Z, r1
    2360:	12 96       	adiw	r26, 0x02	; 2
    2362:	8c 91       	ld	r24, X
    2364:	12 97       	sbiw	r26, 0x02	; 2
    2366:	81 83       	std	Z+1, r24	; 0x01
    2368:	15 96       	adiw	r26, 0x05	; 5
    236a:	8c 91       	ld	r24, X
    236c:	15 97       	sbiw	r26, 0x05	; 5
    236e:	81 50       	subi	r24, 0x01	; 1
    2370:	82 83       	std	Z+2, r24	; 0x02
    2372:	13 96       	adiw	r26, 0x03	; 3
    2374:	8c 91       	ld	r24, X
    2376:	83 83       	std	Z+3, r24	; 0x03
    2378:	08 95       	ret

0000237a <u8g_pb_Is8PixelVisible>:
    237a:	fb 01       	movw	r30, r22
    237c:	61 81       	ldd	r22, Z+1	; 0x01
    237e:	23 81       	ldd	r18, Z+3	; 0x03
    2380:	21 30       	cpi	r18, 0x01	; 1
    2382:	21 f0       	breq	.+8      	; 0x238c <u8g_pb_Is8PixelVisible+0x12>
    2384:	23 30       	cpi	r18, 0x03	; 3
    2386:	29 f0       	breq	.+10     	; 0x2392 <u8g_pb_Is8PixelVisible+0x18>
    2388:	46 2f       	mov	r20, r22
    238a:	05 c0       	rjmp	.+10     	; 0x2396 <u8g_pb_Is8PixelVisible+0x1c>
    238c:	46 2f       	mov	r20, r22
    238e:	48 5f       	subi	r20, 0xF8	; 248
    2390:	02 c0       	rjmp	.+4      	; 0x2396 <u8g_pb_Is8PixelVisible+0x1c>
    2392:	46 2f       	mov	r20, r22
    2394:	68 50       	subi	r22, 0x08	; 8
    2396:	cc cf       	rjmp	.-104    	; 0x2330 <u8g_pb_IsYIntersection>
    2398:	08 95       	ret

0000239a <__prologue_saves__>:
    239a:	2f 92       	push	r2
    239c:	3f 92       	push	r3
    239e:	4f 92       	push	r4
    23a0:	5f 92       	push	r5
    23a2:	6f 92       	push	r6
    23a4:	7f 92       	push	r7
    23a6:	8f 92       	push	r8
    23a8:	9f 92       	push	r9
    23aa:	af 92       	push	r10
    23ac:	bf 92       	push	r11
    23ae:	cf 92       	push	r12
    23b0:	df 92       	push	r13
    23b2:	ef 92       	push	r14
    23b4:	ff 92       	push	r15
    23b6:	0f 93       	push	r16
    23b8:	1f 93       	push	r17
    23ba:	cf 93       	push	r28
    23bc:	df 93       	push	r29
    23be:	cd b7       	in	r28, 0x3d	; 61
    23c0:	de b7       	in	r29, 0x3e	; 62
    23c2:	ca 1b       	sub	r28, r26
    23c4:	db 0b       	sbc	r29, r27
    23c6:	0f b6       	in	r0, 0x3f	; 63
    23c8:	f8 94       	cli
    23ca:	de bf       	out	0x3e, r29	; 62
    23cc:	0f be       	out	0x3f, r0	; 63
    23ce:	cd bf       	out	0x3d, r28	; 61
    23d0:	09 94       	ijmp

000023d2 <__epilogue_restores__>:
    23d2:	2a 88       	ldd	r2, Y+18	; 0x12
    23d4:	39 88       	ldd	r3, Y+17	; 0x11
    23d6:	48 88       	ldd	r4, Y+16	; 0x10
    23d8:	5f 84       	ldd	r5, Y+15	; 0x0f
    23da:	6e 84       	ldd	r6, Y+14	; 0x0e
    23dc:	7d 84       	ldd	r7, Y+13	; 0x0d
    23de:	8c 84       	ldd	r8, Y+12	; 0x0c
    23e0:	9b 84       	ldd	r9, Y+11	; 0x0b
    23e2:	aa 84       	ldd	r10, Y+10	; 0x0a
    23e4:	b9 84       	ldd	r11, Y+9	; 0x09
    23e6:	c8 84       	ldd	r12, Y+8	; 0x08
    23e8:	df 80       	ldd	r13, Y+7	; 0x07
    23ea:	ee 80       	ldd	r14, Y+6	; 0x06
    23ec:	fd 80       	ldd	r15, Y+5	; 0x05
    23ee:	0c 81       	ldd	r16, Y+4	; 0x04
    23f0:	1b 81       	ldd	r17, Y+3	; 0x03
    23f2:	aa 81       	ldd	r26, Y+2	; 0x02
    23f4:	b9 81       	ldd	r27, Y+1	; 0x01
    23f6:	ce 0f       	add	r28, r30
    23f8:	d1 1d       	adc	r29, r1
    23fa:	0f b6       	in	r0, 0x3f	; 63
    23fc:	f8 94       	cli
    23fe:	de bf       	out	0x3e, r29	; 62
    2400:	0f be       	out	0x3f, r0	; 63
    2402:	cd bf       	out	0x3d, r28	; 61
    2404:	ed 01       	movw	r28, r26
    2406:	08 95       	ret

00002408 <__divsf3>:
    2408:	0c d0       	rcall	.+24     	; 0x2422 <__divsf3x>
    240a:	eb c0       	rjmp	.+470    	; 0x25e2 <__fp_round>
    240c:	e3 d0       	rcall	.+454    	; 0x25d4 <__fp_pscB>
    240e:	40 f0       	brcs	.+16     	; 0x2420 <__divsf3+0x18>
    2410:	da d0       	rcall	.+436    	; 0x25c6 <__fp_pscA>
    2412:	30 f0       	brcs	.+12     	; 0x2420 <__divsf3+0x18>
    2414:	21 f4       	brne	.+8      	; 0x241e <__divsf3+0x16>
    2416:	5f 3f       	cpi	r21, 0xFF	; 255
    2418:	19 f0       	breq	.+6      	; 0x2420 <__divsf3+0x18>
    241a:	cc c0       	rjmp	.+408    	; 0x25b4 <__fp_inf>
    241c:	51 11       	cpse	r21, r1
    241e:	15 c1       	rjmp	.+554    	; 0x264a <__fp_szero>
    2420:	cf c0       	rjmp	.+414    	; 0x25c0 <__fp_nan>

00002422 <__divsf3x>:
    2422:	f0 d0       	rcall	.+480    	; 0x2604 <__fp_split3>
    2424:	98 f3       	brcs	.-26     	; 0x240c <__divsf3+0x4>

00002426 <__divsf3_pse>:
    2426:	99 23       	and	r25, r25
    2428:	c9 f3       	breq	.-14     	; 0x241c <__divsf3+0x14>
    242a:	55 23       	and	r21, r21
    242c:	b1 f3       	breq	.-20     	; 0x241a <__divsf3+0x12>
    242e:	95 1b       	sub	r25, r21
    2430:	55 0b       	sbc	r21, r21
    2432:	bb 27       	eor	r27, r27
    2434:	aa 27       	eor	r26, r26
    2436:	62 17       	cp	r22, r18
    2438:	73 07       	cpc	r23, r19
    243a:	84 07       	cpc	r24, r20
    243c:	38 f0       	brcs	.+14     	; 0x244c <__divsf3_pse+0x26>
    243e:	9f 5f       	subi	r25, 0xFF	; 255
    2440:	5f 4f       	sbci	r21, 0xFF	; 255
    2442:	22 0f       	add	r18, r18
    2444:	33 1f       	adc	r19, r19
    2446:	44 1f       	adc	r20, r20
    2448:	aa 1f       	adc	r26, r26
    244a:	a9 f3       	breq	.-22     	; 0x2436 <__divsf3_pse+0x10>
    244c:	33 d0       	rcall	.+102    	; 0x24b4 <__divsf3_pse+0x8e>
    244e:	0e 2e       	mov	r0, r30
    2450:	3a f0       	brmi	.+14     	; 0x2460 <__divsf3_pse+0x3a>
    2452:	e0 e8       	ldi	r30, 0x80	; 128
    2454:	30 d0       	rcall	.+96     	; 0x24b6 <__divsf3_pse+0x90>
    2456:	91 50       	subi	r25, 0x01	; 1
    2458:	50 40       	sbci	r21, 0x00	; 0
    245a:	e6 95       	lsr	r30
    245c:	00 1c       	adc	r0, r0
    245e:	ca f7       	brpl	.-14     	; 0x2452 <__divsf3_pse+0x2c>
    2460:	29 d0       	rcall	.+82     	; 0x24b4 <__divsf3_pse+0x8e>
    2462:	fe 2f       	mov	r31, r30
    2464:	27 d0       	rcall	.+78     	; 0x24b4 <__divsf3_pse+0x8e>
    2466:	66 0f       	add	r22, r22
    2468:	77 1f       	adc	r23, r23
    246a:	88 1f       	adc	r24, r24
    246c:	bb 1f       	adc	r27, r27
    246e:	26 17       	cp	r18, r22
    2470:	37 07       	cpc	r19, r23
    2472:	48 07       	cpc	r20, r24
    2474:	ab 07       	cpc	r26, r27
    2476:	b0 e8       	ldi	r27, 0x80	; 128
    2478:	09 f0       	breq	.+2      	; 0x247c <__divsf3_pse+0x56>
    247a:	bb 0b       	sbc	r27, r27
    247c:	80 2d       	mov	r24, r0
    247e:	bf 01       	movw	r22, r30
    2480:	ff 27       	eor	r31, r31
    2482:	93 58       	subi	r25, 0x83	; 131
    2484:	5f 4f       	sbci	r21, 0xFF	; 255
    2486:	2a f0       	brmi	.+10     	; 0x2492 <__divsf3_pse+0x6c>
    2488:	9e 3f       	cpi	r25, 0xFE	; 254
    248a:	51 05       	cpc	r21, r1
    248c:	68 f0       	brcs	.+26     	; 0x24a8 <__divsf3_pse+0x82>
    248e:	92 c0       	rjmp	.+292    	; 0x25b4 <__fp_inf>
    2490:	dc c0       	rjmp	.+440    	; 0x264a <__fp_szero>
    2492:	5f 3f       	cpi	r21, 0xFF	; 255
    2494:	ec f3       	brlt	.-6      	; 0x2490 <__divsf3_pse+0x6a>
    2496:	98 3e       	cpi	r25, 0xE8	; 232
    2498:	dc f3       	brlt	.-10     	; 0x2490 <__divsf3_pse+0x6a>
    249a:	86 95       	lsr	r24
    249c:	77 95       	ror	r23
    249e:	67 95       	ror	r22
    24a0:	b7 95       	ror	r27
    24a2:	f7 95       	ror	r31
    24a4:	9f 5f       	subi	r25, 0xFF	; 255
    24a6:	c9 f7       	brne	.-14     	; 0x249a <__divsf3_pse+0x74>
    24a8:	88 0f       	add	r24, r24
    24aa:	91 1d       	adc	r25, r1
    24ac:	96 95       	lsr	r25
    24ae:	87 95       	ror	r24
    24b0:	97 f9       	bld	r25, 7
    24b2:	08 95       	ret
    24b4:	e1 e0       	ldi	r30, 0x01	; 1
    24b6:	66 0f       	add	r22, r22
    24b8:	77 1f       	adc	r23, r23
    24ba:	88 1f       	adc	r24, r24
    24bc:	bb 1f       	adc	r27, r27
    24be:	62 17       	cp	r22, r18
    24c0:	73 07       	cpc	r23, r19
    24c2:	84 07       	cpc	r24, r20
    24c4:	ba 07       	cpc	r27, r26
    24c6:	20 f0       	brcs	.+8      	; 0x24d0 <__divsf3_pse+0xaa>
    24c8:	62 1b       	sub	r22, r18
    24ca:	73 0b       	sbc	r23, r19
    24cc:	84 0b       	sbc	r24, r20
    24ce:	ba 0b       	sbc	r27, r26
    24d0:	ee 1f       	adc	r30, r30
    24d2:	88 f7       	brcc	.-30     	; 0x24b6 <__divsf3_pse+0x90>
    24d4:	e0 95       	com	r30
    24d6:	08 95       	ret

000024d8 <__fixsfsi>:
    24d8:	04 d0       	rcall	.+8      	; 0x24e2 <__fixunssfsi>
    24da:	68 94       	set
    24dc:	b1 11       	cpse	r27, r1
    24de:	b5 c0       	rjmp	.+362    	; 0x264a <__fp_szero>
    24e0:	08 95       	ret

000024e2 <__fixunssfsi>:
    24e2:	98 d0       	rcall	.+304    	; 0x2614 <__fp_splitA>
    24e4:	88 f0       	brcs	.+34     	; 0x2508 <__fixunssfsi+0x26>
    24e6:	9f 57       	subi	r25, 0x7F	; 127
    24e8:	90 f0       	brcs	.+36     	; 0x250e <__fixunssfsi+0x2c>
    24ea:	b9 2f       	mov	r27, r25
    24ec:	99 27       	eor	r25, r25
    24ee:	b7 51       	subi	r27, 0x17	; 23
    24f0:	a0 f0       	brcs	.+40     	; 0x251a <__fixunssfsi+0x38>
    24f2:	d1 f0       	breq	.+52     	; 0x2528 <__fixunssfsi+0x46>
    24f4:	66 0f       	add	r22, r22
    24f6:	77 1f       	adc	r23, r23
    24f8:	88 1f       	adc	r24, r24
    24fa:	99 1f       	adc	r25, r25
    24fc:	1a f0       	brmi	.+6      	; 0x2504 <__fixunssfsi+0x22>
    24fe:	ba 95       	dec	r27
    2500:	c9 f7       	brne	.-14     	; 0x24f4 <__fixunssfsi+0x12>
    2502:	12 c0       	rjmp	.+36     	; 0x2528 <__fixunssfsi+0x46>
    2504:	b1 30       	cpi	r27, 0x01	; 1
    2506:	81 f0       	breq	.+32     	; 0x2528 <__fixunssfsi+0x46>
    2508:	9f d0       	rcall	.+318    	; 0x2648 <__fp_zero>
    250a:	b1 e0       	ldi	r27, 0x01	; 1
    250c:	08 95       	ret
    250e:	9c c0       	rjmp	.+312    	; 0x2648 <__fp_zero>
    2510:	67 2f       	mov	r22, r23
    2512:	78 2f       	mov	r23, r24
    2514:	88 27       	eor	r24, r24
    2516:	b8 5f       	subi	r27, 0xF8	; 248
    2518:	39 f0       	breq	.+14     	; 0x2528 <__fixunssfsi+0x46>
    251a:	b9 3f       	cpi	r27, 0xF9	; 249
    251c:	cc f3       	brlt	.-14     	; 0x2510 <__fixunssfsi+0x2e>
    251e:	86 95       	lsr	r24
    2520:	77 95       	ror	r23
    2522:	67 95       	ror	r22
    2524:	b3 95       	inc	r27
    2526:	d9 f7       	brne	.-10     	; 0x251e <__fixunssfsi+0x3c>
    2528:	3e f4       	brtc	.+14     	; 0x2538 <__fixunssfsi+0x56>
    252a:	90 95       	com	r25
    252c:	80 95       	com	r24
    252e:	70 95       	com	r23
    2530:	61 95       	neg	r22
    2532:	7f 4f       	sbci	r23, 0xFF	; 255
    2534:	8f 4f       	sbci	r24, 0xFF	; 255
    2536:	9f 4f       	sbci	r25, 0xFF	; 255
    2538:	08 95       	ret

0000253a <__floatunsisf>:
    253a:	e8 94       	clt
    253c:	09 c0       	rjmp	.+18     	; 0x2550 <__floatsisf+0x12>

0000253e <__floatsisf>:
    253e:	97 fb       	bst	r25, 7
    2540:	3e f4       	brtc	.+14     	; 0x2550 <__floatsisf+0x12>
    2542:	90 95       	com	r25
    2544:	80 95       	com	r24
    2546:	70 95       	com	r23
    2548:	61 95       	neg	r22
    254a:	7f 4f       	sbci	r23, 0xFF	; 255
    254c:	8f 4f       	sbci	r24, 0xFF	; 255
    254e:	9f 4f       	sbci	r25, 0xFF	; 255
    2550:	99 23       	and	r25, r25
    2552:	a9 f0       	breq	.+42     	; 0x257e <__floatsisf+0x40>
    2554:	f9 2f       	mov	r31, r25
    2556:	96 e9       	ldi	r25, 0x96	; 150
    2558:	bb 27       	eor	r27, r27
    255a:	93 95       	inc	r25
    255c:	f6 95       	lsr	r31
    255e:	87 95       	ror	r24
    2560:	77 95       	ror	r23
    2562:	67 95       	ror	r22
    2564:	b7 95       	ror	r27
    2566:	f1 11       	cpse	r31, r1
    2568:	f8 cf       	rjmp	.-16     	; 0x255a <__floatsisf+0x1c>
    256a:	fa f4       	brpl	.+62     	; 0x25aa <__floatsisf+0x6c>
    256c:	bb 0f       	add	r27, r27
    256e:	11 f4       	brne	.+4      	; 0x2574 <__floatsisf+0x36>
    2570:	60 ff       	sbrs	r22, 0
    2572:	1b c0       	rjmp	.+54     	; 0x25aa <__floatsisf+0x6c>
    2574:	6f 5f       	subi	r22, 0xFF	; 255
    2576:	7f 4f       	sbci	r23, 0xFF	; 255
    2578:	8f 4f       	sbci	r24, 0xFF	; 255
    257a:	9f 4f       	sbci	r25, 0xFF	; 255
    257c:	16 c0       	rjmp	.+44     	; 0x25aa <__floatsisf+0x6c>
    257e:	88 23       	and	r24, r24
    2580:	11 f0       	breq	.+4      	; 0x2586 <__floatsisf+0x48>
    2582:	96 e9       	ldi	r25, 0x96	; 150
    2584:	11 c0       	rjmp	.+34     	; 0x25a8 <__floatsisf+0x6a>
    2586:	77 23       	and	r23, r23
    2588:	21 f0       	breq	.+8      	; 0x2592 <__floatsisf+0x54>
    258a:	9e e8       	ldi	r25, 0x8E	; 142
    258c:	87 2f       	mov	r24, r23
    258e:	76 2f       	mov	r23, r22
    2590:	05 c0       	rjmp	.+10     	; 0x259c <__floatsisf+0x5e>
    2592:	66 23       	and	r22, r22
    2594:	71 f0       	breq	.+28     	; 0x25b2 <__floatsisf+0x74>
    2596:	96 e8       	ldi	r25, 0x86	; 134
    2598:	86 2f       	mov	r24, r22
    259a:	70 e0       	ldi	r23, 0x00	; 0
    259c:	60 e0       	ldi	r22, 0x00	; 0
    259e:	2a f0       	brmi	.+10     	; 0x25aa <__floatsisf+0x6c>
    25a0:	9a 95       	dec	r25
    25a2:	66 0f       	add	r22, r22
    25a4:	77 1f       	adc	r23, r23
    25a6:	88 1f       	adc	r24, r24
    25a8:	da f7       	brpl	.-10     	; 0x25a0 <__floatsisf+0x62>
    25aa:	88 0f       	add	r24, r24
    25ac:	96 95       	lsr	r25
    25ae:	87 95       	ror	r24
    25b0:	97 f9       	bld	r25, 7
    25b2:	08 95       	ret

000025b4 <__fp_inf>:
    25b4:	97 f9       	bld	r25, 7
    25b6:	9f 67       	ori	r25, 0x7F	; 127
    25b8:	80 e8       	ldi	r24, 0x80	; 128
    25ba:	70 e0       	ldi	r23, 0x00	; 0
    25bc:	60 e0       	ldi	r22, 0x00	; 0
    25be:	08 95       	ret

000025c0 <__fp_nan>:
    25c0:	9f ef       	ldi	r25, 0xFF	; 255
    25c2:	80 ec       	ldi	r24, 0xC0	; 192
    25c4:	08 95       	ret

000025c6 <__fp_pscA>:
    25c6:	00 24       	eor	r0, r0
    25c8:	0a 94       	dec	r0
    25ca:	16 16       	cp	r1, r22
    25cc:	17 06       	cpc	r1, r23
    25ce:	18 06       	cpc	r1, r24
    25d0:	09 06       	cpc	r0, r25
    25d2:	08 95       	ret

000025d4 <__fp_pscB>:
    25d4:	00 24       	eor	r0, r0
    25d6:	0a 94       	dec	r0
    25d8:	12 16       	cp	r1, r18
    25da:	13 06       	cpc	r1, r19
    25dc:	14 06       	cpc	r1, r20
    25de:	05 06       	cpc	r0, r21
    25e0:	08 95       	ret

000025e2 <__fp_round>:
    25e2:	09 2e       	mov	r0, r25
    25e4:	03 94       	inc	r0
    25e6:	00 0c       	add	r0, r0
    25e8:	11 f4       	brne	.+4      	; 0x25ee <__fp_round+0xc>
    25ea:	88 23       	and	r24, r24
    25ec:	52 f0       	brmi	.+20     	; 0x2602 <__fp_round+0x20>
    25ee:	bb 0f       	add	r27, r27
    25f0:	40 f4       	brcc	.+16     	; 0x2602 <__fp_round+0x20>
    25f2:	bf 2b       	or	r27, r31
    25f4:	11 f4       	brne	.+4      	; 0x25fa <__fp_round+0x18>
    25f6:	60 ff       	sbrs	r22, 0
    25f8:	04 c0       	rjmp	.+8      	; 0x2602 <__fp_round+0x20>
    25fa:	6f 5f       	subi	r22, 0xFF	; 255
    25fc:	7f 4f       	sbci	r23, 0xFF	; 255
    25fe:	8f 4f       	sbci	r24, 0xFF	; 255
    2600:	9f 4f       	sbci	r25, 0xFF	; 255
    2602:	08 95       	ret

00002604 <__fp_split3>:
    2604:	57 fd       	sbrc	r21, 7
    2606:	90 58       	subi	r25, 0x80	; 128
    2608:	44 0f       	add	r20, r20
    260a:	55 1f       	adc	r21, r21
    260c:	59 f0       	breq	.+22     	; 0x2624 <__fp_splitA+0x10>
    260e:	5f 3f       	cpi	r21, 0xFF	; 255
    2610:	71 f0       	breq	.+28     	; 0x262e <__fp_splitA+0x1a>
    2612:	47 95       	ror	r20

00002614 <__fp_splitA>:
    2614:	88 0f       	add	r24, r24
    2616:	97 fb       	bst	r25, 7
    2618:	99 1f       	adc	r25, r25
    261a:	61 f0       	breq	.+24     	; 0x2634 <__fp_splitA+0x20>
    261c:	9f 3f       	cpi	r25, 0xFF	; 255
    261e:	79 f0       	breq	.+30     	; 0x263e <__fp_splitA+0x2a>
    2620:	87 95       	ror	r24
    2622:	08 95       	ret
    2624:	12 16       	cp	r1, r18
    2626:	13 06       	cpc	r1, r19
    2628:	14 06       	cpc	r1, r20
    262a:	55 1f       	adc	r21, r21
    262c:	f2 cf       	rjmp	.-28     	; 0x2612 <__fp_split3+0xe>
    262e:	46 95       	lsr	r20
    2630:	f1 df       	rcall	.-30     	; 0x2614 <__fp_splitA>
    2632:	08 c0       	rjmp	.+16     	; 0x2644 <__fp_splitA+0x30>
    2634:	16 16       	cp	r1, r22
    2636:	17 06       	cpc	r1, r23
    2638:	18 06       	cpc	r1, r24
    263a:	99 1f       	adc	r25, r25
    263c:	f1 cf       	rjmp	.-30     	; 0x2620 <__fp_splitA+0xc>
    263e:	86 95       	lsr	r24
    2640:	71 05       	cpc	r23, r1
    2642:	61 05       	cpc	r22, r1
    2644:	08 94       	sec
    2646:	08 95       	ret

00002648 <__fp_zero>:
    2648:	e8 94       	clt

0000264a <__fp_szero>:
    264a:	bb 27       	eor	r27, r27
    264c:	66 27       	eor	r22, r22
    264e:	77 27       	eor	r23, r23
    2650:	cb 01       	movw	r24, r22
    2652:	97 f9       	bld	r25, 7
    2654:	08 95       	ret

00002656 <__mulsf3>:
    2656:	0b d0       	rcall	.+22     	; 0x266e <__mulsf3x>
    2658:	c4 cf       	rjmp	.-120    	; 0x25e2 <__fp_round>
    265a:	b5 df       	rcall	.-150    	; 0x25c6 <__fp_pscA>
    265c:	28 f0       	brcs	.+10     	; 0x2668 <__mulsf3+0x12>
    265e:	ba df       	rcall	.-140    	; 0x25d4 <__fp_pscB>
    2660:	18 f0       	brcs	.+6      	; 0x2668 <__mulsf3+0x12>
    2662:	95 23       	and	r25, r21
    2664:	09 f0       	breq	.+2      	; 0x2668 <__mulsf3+0x12>
    2666:	a6 cf       	rjmp	.-180    	; 0x25b4 <__fp_inf>
    2668:	ab cf       	rjmp	.-170    	; 0x25c0 <__fp_nan>
    266a:	11 24       	eor	r1, r1
    266c:	ee cf       	rjmp	.-36     	; 0x264a <__fp_szero>

0000266e <__mulsf3x>:
    266e:	ca df       	rcall	.-108    	; 0x2604 <__fp_split3>
    2670:	a0 f3       	brcs	.-24     	; 0x265a <__mulsf3+0x4>

00002672 <__mulsf3_pse>:
    2672:	95 9f       	mul	r25, r21
    2674:	d1 f3       	breq	.-12     	; 0x266a <__mulsf3+0x14>
    2676:	95 0f       	add	r25, r21
    2678:	50 e0       	ldi	r21, 0x00	; 0
    267a:	55 1f       	adc	r21, r21
    267c:	62 9f       	mul	r22, r18
    267e:	f0 01       	movw	r30, r0
    2680:	72 9f       	mul	r23, r18
    2682:	bb 27       	eor	r27, r27
    2684:	f0 0d       	add	r31, r0
    2686:	b1 1d       	adc	r27, r1
    2688:	63 9f       	mul	r22, r19
    268a:	aa 27       	eor	r26, r26
    268c:	f0 0d       	add	r31, r0
    268e:	b1 1d       	adc	r27, r1
    2690:	aa 1f       	adc	r26, r26
    2692:	64 9f       	mul	r22, r20
    2694:	66 27       	eor	r22, r22
    2696:	b0 0d       	add	r27, r0
    2698:	a1 1d       	adc	r26, r1
    269a:	66 1f       	adc	r22, r22
    269c:	82 9f       	mul	r24, r18
    269e:	22 27       	eor	r18, r18
    26a0:	b0 0d       	add	r27, r0
    26a2:	a1 1d       	adc	r26, r1
    26a4:	62 1f       	adc	r22, r18
    26a6:	73 9f       	mul	r23, r19
    26a8:	b0 0d       	add	r27, r0
    26aa:	a1 1d       	adc	r26, r1
    26ac:	62 1f       	adc	r22, r18
    26ae:	83 9f       	mul	r24, r19
    26b0:	a0 0d       	add	r26, r0
    26b2:	61 1d       	adc	r22, r1
    26b4:	22 1f       	adc	r18, r18
    26b6:	74 9f       	mul	r23, r20
    26b8:	33 27       	eor	r19, r19
    26ba:	a0 0d       	add	r26, r0
    26bc:	61 1d       	adc	r22, r1
    26be:	23 1f       	adc	r18, r19
    26c0:	84 9f       	mul	r24, r20
    26c2:	60 0d       	add	r22, r0
    26c4:	21 1d       	adc	r18, r1
    26c6:	82 2f       	mov	r24, r18
    26c8:	76 2f       	mov	r23, r22
    26ca:	6a 2f       	mov	r22, r26
    26cc:	11 24       	eor	r1, r1
    26ce:	9f 57       	subi	r25, 0x7F	; 127
    26d0:	50 40       	sbci	r21, 0x00	; 0
    26d2:	8a f0       	brmi	.+34     	; 0x26f6 <__mulsf3_pse+0x84>
    26d4:	e1 f0       	breq	.+56     	; 0x270e <__mulsf3_pse+0x9c>
    26d6:	88 23       	and	r24, r24
    26d8:	4a f0       	brmi	.+18     	; 0x26ec <__mulsf3_pse+0x7a>
    26da:	ee 0f       	add	r30, r30
    26dc:	ff 1f       	adc	r31, r31
    26de:	bb 1f       	adc	r27, r27
    26e0:	66 1f       	adc	r22, r22
    26e2:	77 1f       	adc	r23, r23
    26e4:	88 1f       	adc	r24, r24
    26e6:	91 50       	subi	r25, 0x01	; 1
    26e8:	50 40       	sbci	r21, 0x00	; 0
    26ea:	a9 f7       	brne	.-22     	; 0x26d6 <__mulsf3_pse+0x64>
    26ec:	9e 3f       	cpi	r25, 0xFE	; 254
    26ee:	51 05       	cpc	r21, r1
    26f0:	70 f0       	brcs	.+28     	; 0x270e <__mulsf3_pse+0x9c>
    26f2:	60 cf       	rjmp	.-320    	; 0x25b4 <__fp_inf>
    26f4:	aa cf       	rjmp	.-172    	; 0x264a <__fp_szero>
    26f6:	5f 3f       	cpi	r21, 0xFF	; 255
    26f8:	ec f3       	brlt	.-6      	; 0x26f4 <__mulsf3_pse+0x82>
    26fa:	98 3e       	cpi	r25, 0xE8	; 232
    26fc:	dc f3       	brlt	.-10     	; 0x26f4 <__mulsf3_pse+0x82>
    26fe:	86 95       	lsr	r24
    2700:	77 95       	ror	r23
    2702:	67 95       	ror	r22
    2704:	b7 95       	ror	r27
    2706:	f7 95       	ror	r31
    2708:	e7 95       	ror	r30
    270a:	9f 5f       	subi	r25, 0xFF	; 255
    270c:	c1 f7       	brne	.-16     	; 0x26fe <__mulsf3_pse+0x8c>
    270e:	fe 2b       	or	r31, r30
    2710:	88 0f       	add	r24, r24
    2712:	91 1d       	adc	r25, r1
    2714:	96 95       	lsr	r25
    2716:	87 95       	ror	r24
    2718:	97 f9       	bld	r25, 7
    271a:	08 95       	ret

0000271c <memcpy_P>:
    271c:	fb 01       	movw	r30, r22
    271e:	dc 01       	movw	r26, r24
    2720:	02 c0       	rjmp	.+4      	; 0x2726 <memcpy_P+0xa>
    2722:	05 90       	lpm	r0, Z+
    2724:	0d 92       	st	X+, r0
    2726:	41 50       	subi	r20, 0x01	; 1
    2728:	50 40       	sbci	r21, 0x00	; 0
    272a:	d8 f7       	brcc	.-10     	; 0x2722 <memcpy_P+0x6>
    272c:	08 95       	ret

0000272e <_exit>:
    272e:	f8 94       	cli

00002730 <__stop_program>:
    2730:	ff cf       	rjmp	.-2      	; 0x2730 <__stop_program>
